{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre> <p>I like to drink  after I played </p> <p>Me gusta beber  despu\u00e9s de jugar </p>"},{"location":"admonitions/","title":"Admonitions","text":"<p>Advertencias</p> <p>T\u00edtulo de Alerta</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Advertencias plegables:</p> Alerta Plegable <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"code-examples/","title":"Code examples","text":"<p>Bloque de c\u00f3digo con n\u00fameros de l\u00ednea add_numbers.py<pre><code># Function to add two numbers\ndef add_two_numbers(num1, num2):\n    return num1 + num2\n\n# Example usage\nresult = add_two_numbers(5, 3)\nprint('The sum is:', result)\n</code></pre> L\u00edneas de resaltado concatenate_strings.js<pre><code>// Function to concatenate two strings\nfunction concatenateStrings(str1, str2) {\n  return str1 + str2;\n}\n\n// Example usage\nconst result = concatenateStrings(\"Hello, \", \"World!\");\nconsole.log(\"The concatenated string is:\", result);\n</code></pre></p>"},{"location":"content-tabs/","title":"Content tabs","text":""},{"location":"content-tabs/#content-tabs","title":"Content Tabs","text":"<p>This is some examples of content tabs.</p>"},{"location":"content-tabs/#generic-content","title":"Generic Content","text":"Plain textUnordered listOrdered list <p>This is some plain text</p> <ul> <li>First item</li> <li>Second item</li> <li>Third item</li> </ul> <ol> <li>First item</li> <li>Second item</li> <li>Third item</li> </ol>"},{"location":"content-tabs/#code-blocks-in-content-tabs","title":"Code Blocks in Content Tabs","text":"PythonJavaScript <pre><code>def main():\n    print(\"Hello world!\")\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> <pre><code>function main() {\n    console.log(\"Hello world!\");\n}\n\nmain();\n</code></pre>"},{"location":"diagram-examples/","title":"Ejemplo de Diagramas","text":""},{"location":"diagram-examples/#diagrama-de-flujo","title":"Diagrama de flujo","text":"<pre><code>graph LR\n  A[Start] --&gt; B{Failure?};\n  B --&gt;|Yes| C[Investigate...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Success!];</code></pre>"},{"location":"diagram-examples/#diagrama-de-secuencia","title":"Diagrama de secuencia","text":"<pre><code>sequenceDiagram\n  autonumber\n  Server-&gt;&gt;Terminal: Send request\n  loop Health\n      Terminal-&gt;&gt;Terminal: Check for health\n  end\n  Note right of Terminal: System online\n  Terminal--&gt;&gt;Server: Everything is OK\n  Terminal-&gt;&gt;Database: Request customer data\n  Database--&gt;&gt;Terminal: Customer data</code></pre>"},{"location":"procesos/data-warehouse/step-1-actualizar-costos-sap/","title":"Diagrama de Flujo de Datos (DFD) para job_actualizar_costosSAP","text":""},{"location":"procesos/data-warehouse/step-1-actualizar-costos-sap/#nivel-1-procesos-principales","title":"Nivel 1: Procesos Principales","text":"<pre><code>flowchart TD\n    A[Inicio] --&gt; B[Calcular Fechas]\n    B --&gt; C{Validar Costos SAP}\n    C --&gt;|Costo Bajo| D[Enviar Notificaci\u00f3n]\n    C --&gt;|Costo OK| E[Actualizar Tablas]\n    E --&gt; F[Actualizar ventas]\n    E --&gt; G[Actualizar Factventas]\n    E --&gt; H[Actualizar ventasVersus]\n    E --&gt; I[Actualizar VentasSH]\n    E --&gt; J[Actualizar ventas@periodo]\n    E --&gt; K[Actualizar ventasVersus@periodo]\n    D --&gt; E\n    F --&gt; L[Fin]\n    G --&gt; L\n    H --&gt; L\n    I --&gt; L\n    J --&gt; L\n    K --&gt; L</code></pre>"},{"location":"procesos/data-warehouse/step-1-actualizar-costos-sap/#nivel-3-dependencias-de-datos","title":"Nivel 3: Dependencias de Datos","text":"<pre><code>erDiagram\n    job_actualizar_costosSAP }|..|{ CostoPonderado : \"Lee/Usa\"\n    job_actualizar_costosSAP }|..|{ producto : \"Lee/Usa\"\n    job_actualizar_costosSAP }|..|{ ventas : \"Actualiza\"\n    job_actualizar_costosSAP }|..|{ Factventas : \"Actualiza\"\n    job_actualizar_costosSAP }|..|{ ventasVersus : \"Actualiza\"\n    job_actualizar_costosSAP }|..|{ VentasSH : \"Actualiza\"\n    job_actualizar_costosSAP }|..|{ ventas_periodo : \"Actualiza\"\n    job_actualizar_costosSAP }|..|{ ventasVersus_periodo : \"Actualiza\"\n    job_actualizar_costosSAP }|..|{ msdb_dbo_sp_send_dbmail : \"Ejecuta\"\n\n    ventas ||--o{ CostoPonderado : \"Consulta\"\n    ventas ||--o{ producto : \"Consulta\"\n    Factventas ||--o{ CostoPonderado : \"Consulta\"\n    Factventas ||--o{ producto : \"Consulta\"\n    ventasVersus ||--o{ CostoPonderado : \"Consulta\"\n    ventasVersus ||--o{ producto : \"Consulta\"\n    VentasSH ||--o{ CostoPonderado : \"Consulta\"\n    VentasSH ||--o{ producto : \"Consulta\"\n    ventas_periodo ||--o{ CostoPonderado : \"Consulta\"\n    ventas_periodo ||--o{ producto : \"Consulta\"\n    ventasVersus_periodo ||--o{ CostoPonderado : \"Consulta\"\n    ventasVersus_periodo ||--o{ producto : \"Consulta\"</code></pre>"},{"location":"procesos/data-warehouse/step-2-venta-diaria-del-mes/","title":"Step 2 venta diaria del mes","text":""},{"location":"procesos/data-warehouse/step-2-venta-diaria-del-mes/#vdm-ventas-diarias-del-mes-en-curso","title":"VDM: Ventas Diarias del Mes en curso","text":"<p>OBJETIVO: Env\u00edo automatizado por correo del informe de venta diaria del mes: - A nivel empresa - A nivel de canal de venta</p> <p>Nombre de SP: job_email_VDM_6 <pre><code>flowchart TD\n    A[Inicio] --&gt; B[Establecer fec como cierre de dia anterior]\n    B --&gt; C[Calcular fechas TY/LY]\n    C --&gt; D[Crear #TVentas1]\n    D --&gt; E[Cargar datos ventas 2025]\n    E --&gt; F[Cargar datos ventas 2024]\n    F --&gt; G[Crear #TVentas2 con pivot]\n    G --&gt; H[Calcular m\u00e9tricas derivadas]\n    H --&gt; I[Crear #TVentasB1 con totales]\n    I --&gt; J[Generar HTML principal]\n    J --&gt; K[Procesar por canal: Retail]\n    K --&gt; L[Procesar por canal: Cat\u00e1logo]\n    L --&gt; M[Procesar por canal: E-commerce]\n    M --&gt; N[Procesar por canal: Ventas Asistidas]\n    N --&gt; O[Construir cuerpo email]\n    O --&gt; P[Configurar formato CSS]\n    P --&gt; Q[Enviar email]\n    Q --&gt; R[Fin]\n\n    %% Tablas\n    D --&gt;|Lee| T1[TiempoVersus]\n    E --&gt;|Lee| T2[VentasVersus2025]\n    F --&gt;|Lee| T3[VentasVersus2024]\n    G --&gt;|Usa| T4[vw_Producto]\n    H --&gt;|Usa| T5[vw_proyecciones_TY]\n\n    %% Tablas temporales\n    D --&gt; TT1[#TVentas1]\n    G --&gt; TT2[#TVentas2]\n    I --&gt; TT3[#TVentasB1]\n    K --&gt; TT4[#TProyeccionRetail]\n    L --&gt; TT5[#TProyeccionCatalogo]\n    M --&gt; TT6[#TProyeccionEcommerce]\n    N --&gt; TT7[#TProyeccionVAsistidas]</code></pre></p>"},{"location":"procesos/data-warehouse/etl/ventas/usp_jo_pos_dw_cubo_actualizar/","title":"An\u00e1lisis del Stored Procedure <code>usp_jo_pos_dw_cubo_actualizar</code>","text":""},{"location":"procesos/data-warehouse/etl/ventas/usp_jo_pos_dw_cubo_actualizar/#1-diagrama-de-flujo-de-datos","title":"1. Diagrama de Flujo de Datos","text":"<pre><code>flowchart TD\n    A[Inicio] --&gt; B[Ejecutar usp_jo_pos_dw_ventas_actualizar]\n    B --&gt; C[Definir variables de fecha]\n    C --&gt; D[Mostrar valores de variables]\n    D --&gt; E[Actualizar tabla ventas]\n    E --&gt; F[Actualizar tabla Factventas]\n    F --&gt; G[Actualizar tabla VentasVersus]\n    G --&gt; H[Crear VentasVersusYYYY]\n    H --&gt; I[Actualizar tb_asesorventa]\n    I --&gt; J[Actualizar VentasSH y CostoSH]\n    J --&gt; K[Actualizar formatos de hora en ventas]\n    K --&gt; L[Actualizar empleados activos]\n    L --&gt; M[Actualizar cat\u00e1logos]\n    M --&gt; N[Actualizar relaci\u00f3n cat\u00e1logo-producto]\n    N --&gt; O[Actualizar ventas de cat\u00e1logo]\n    O --&gt; P[Limpiar datos de d\u00edas no fin de mes de tabla stockFdm]\n    P --&gt; Q[Fin]</code></pre>"},{"location":"procesos/data-warehouse/etl/ventas/usp_jo_pos_dw_cubo_actualizar/#2-diagrama-de-entidad-relacion","title":"2. Diagrama de Entidad-Relaci\u00f3n","text":"<pre><code>erDiagram\n    VENTASCABECERA ||--o{ VENTASDETALLE : contiene\n    VENTASCABECERA {\n        int id PK\n        varchar canalventa\n        varchar tipodocumento\n        varchar serie\n        varchar numero\n        date fecha\n        varchar vendedor\n        varchar tienda\n        varchar cliente\n        decimal total\n    }\n\n    VENTASDETALLE {\n        int id FK\n        varchar producto\n        decimal cantidad\n        decimal precioventa\n        decimal descuento\n        decimal subtotal\n        decimal igv\n        decimal total\n    }\n\n    PRODUCTO {\n        varchar producto PK\n        varchar codigointerno\n        decimal preciocosto\n        decimal precio\n        date fechacompra\n    }\n\n    VENDEDOR {\n        varchar vendedor PK\n        varchar nombre\n        varchar cargo\n    }\n\n    VENTAS ||--|{ FACTVENTAS : deriva\n    FACTVENTAS ||--|{ VENTASVERSUS : deriva\n    VENTASVERSUS ||--|{ VENTASVERSUSYYYY : deriva\n    VENTASVERSUS ||--|{ VENTASSH : deriva\n\n    COSTOVERSUS ||--|{ COSTOSH : deriva\n    COSTOVERSUS ||--|{ COSTOYYYY : deriva\n\n    TB_CAT {\n        int id_catalogo PK\n        varchar codigo\n        varchar nombre\n        date fecha\n    }\n\n    TB_CAT_PROD {\n        int idcat FK\n        varchar producto FK\n        int pagina\n    }\n\n    TB_ASESORVENTA {\n        varchar canalventa\n        date fecha\n        varchar vendedor FK\n        varchar nombre\n        varchar cargo\n    }\n\n    STOCKFDM {\n        varchar canalventa\n        date fechacierre\n        varchar producto FK\n        int idcatalogo FK\n    }\n\n    VENTASCABECERA }|--|| VENDEDOR : tiene\n    VENTASDETALLE }|--|| PRODUCTO : referencia\n    TB_CAT ||--o{ TB_CAT_PROD : contiene\n    TB_CAT ||--o{ STOCKFDM : referencia</code></pre> Notas importantes sobre el diagrama"},{"location":"procesos/data-warehouse/etl/ventas/usp_jo_pos_dw_cubo_actualizar/#observaciones-sobre-el-modelo","title":"Observaciones sobre el modelo","text":"<ol> <li> <p>Ventas: El procedimiento trabaja con varias tablas de ventas que parecen ser versiones o transformaciones de los mismos datos b\u00e1sicos (ventas, Factventas, VentasVersus, VentasSH).</p> </li> <li> <p>Jerarqu\u00eda de datos: Las ventas fluyen desde ventascabecera/ventasdetalle hasta las tablas anal\u00edticas finales.</p> </li> <li> <p>Cat\u00e1logos: Existe un sistema de cat\u00e1logos (tb_cat) que se relaciona con productos (tb_cat_prod) y afecta a las ventas y stock.</p> </li> <li> <p>Dimensiones: Se identifican dimensiones clave como tiempo, productos, vendedores y tiendas.</p> </li> <li> <p>Transformaciones: El procedimiento realiza varias transformaciones de datos, especialmente en el formato de fechas y horas.</p> </li> </ol> <p>El modelo refleja un data warehouse con tablas de hechos (ventas) y dimensiones (productos, vendedores, tiempo), con procesos ETL para mantener los datos actualizados.</p>"},{"location":"procesos/data-warehouse/etl/ventas/usp_jo_pos_dw_ventas_actualizar/","title":"An\u00e1lisis del Procedimiento Almacenado","text":""},{"location":"procesos/data-warehouse/etl/ventas/usp_jo_pos_dw_ventas_actualizar/#1-diagrama-de-flujo-de-datos","title":"1. Diagrama de Flujo de Datos","text":"<pre><code>flowchart TD\n    A[Inicio] --&gt; B[Declarar variables de fecha]\n    B --&gt; C[Eliminar datos existentes en tb_tipoventa_mediopago]\n    C --&gt; D[Eliminar datos existentes en tb_tipoventa_mediopago_unico]\n    D --&gt; E[Insertar datos desde view_tipoventa_mediopago_DWH]\n    E --&gt; F[Insertar datos en tb_tipoventa_mediopago_unico con ranking]\n    F --&gt; G[Eliminar datos de ventasdetalle del mes]\n    G --&gt; H[Crear tabla temporal #Duplicados]\n    H --&gt; I[Merge datos en ventascabecera]\n    I --&gt; J[Truncar y llenar tabla tmpvta]\n    J --&gt; K[Procesar ventas con documento 007]\n    K --&gt; L[Procesar ventas con documentos distintos a 007]\n    L --&gt; M[Fin]\n\n    subgraph Procesamiento Principal\n    B --&gt; C --&gt; D --&gt; E --&gt; F --&gt; G --&gt; H --&gt; I --&gt; J --&gt; K --&gt; L\n    end\n\n    subgraph Merge ventascabecera\n    I --&gt; I1[Comparar datos fuente con destino]\n    I1 --&gt; I2[Actualizar registros existentes]\n    I2 --&gt; I3[Insertar nuevos registros]\n    I3 --&gt; I4[Eliminar registros obsoletos]\n    end</code></pre>"},{"location":"procesos/data-warehouse/etl/ventas/usp_jo_pos_dw_ventas_actualizar/#2-diagrama-de-entidad-relacion","title":"2. Diagrama de Entidad-Relaci\u00f3n","text":"<pre><code>erDiagram\n    VENTASCABECERA ||--o{ VENTASDETALLE : contiene\n    VENTASCABECERA {\n        string canalventa PK\n        string correlativo PK\n        string periodo PK\n        string tipodocumento\n        string serie\n        string numero\n        datetime fecha\n        numeric valorventa\n        numeric igv\n        numeric total\n        string vendedor\n        string tienda\n        string cliente\n        string rucdni\n        string email\n    }\n\n    VENTASDETALLE {\n        string canalventa PK\n        string correlativo PK\n        string producto PK\n        string periodo PK\n        numeric cantidad\n        numeric precioventa\n        numeric subtotal\n        numeric igv\n        numeric total\n        string mes\n    }\n\n    TB_TIPOVENTA_MEDIOPAGO {\n        datetime FECHA PK\n        string TIPVENTAID\n        string TIPODEVENTA\n        string MEDIOPAGOID\n        string MEDIOPAGO\n        string TIPODOC\n        string SERIE\n        string NRODOC\n        numeric VENTA\n        numeric IGV\n        numeric TOTAL\n    }\n\n    TB_TIPOVENTA_MEDIOPAGO_UNICO {\n        string TIPODOC PK\n        string SERIE PK\n        string NRODOC PK\n        string MEDIOPAGOID\n        string TIPODEVENTA\n        datetime FECHA\n        numeric Rank\n    }\n\n    TMPVTA {\n        string ccom_3a\n        string ncom_3a\n        string tidoc_3\n        string linea_3a\n        numeric cant_3a\n        numeric pvta1_3a\n        numeric vvta1_3a\n        numeric igv1_3a\n        numeric tot1_3a\n    }\n\n    VENTASCABECERATMP {\n        string canalventa\n        string correlativo\n        string fecha\n        string periodo\n    }\n\n    FAG0300 {\n        string ccom_3\n        string ncom_3\n        string tidoc_3\n        datetime fcom_3\n        numeric vvta1_3\n        numeric igv1_3\n        numeric tot1_3\n    }\n\n    FAP0300 {\n        string ccom_3a\n        string ncom_3a\n        string linea_3a\n        numeric cant_3a\n        numeric pvta1_3a\n        numeric vvta1_3a\n        numeric igv1_3a\n        numeric tot1_3a\n    }\n\n    VIEW_TIPOVENTA_MEDIOPAGO_DWH {\n        datetime FECHA\n        string TIPODOC\n        string SERIE\n        string NRODOC\n        string MEDIOPAGO\n        numeric TOTAL\n    }</code></pre> Notas importantes sobre el diagrama"},{"location":"procesos/data-warehouse/etl/ventas/usp_jo_pos_dw_ventas_actualizar/#explicacion-de-los-diagramas","title":"Explicaci\u00f3n de los diagramas","text":""},{"location":"procesos/data-warehouse/etl/ventas/usp_jo_pos_dw_ventas_actualizar/#diagrama-de-flujo-de-datos","title":"Diagrama de Flujo de Datos:","text":"<ol> <li>Comienza declarando variables de fecha para el procesamiento</li> <li>Limpia tablas de destino (tb_tipoventa_mediopago y tb_tipoventa_mediopago_unico)</li> <li>Inserta datos desde la vista view_tipoventa_mediopago_DWH</li> <li>Crea registros \u00fanicos en tb_tipoventa_mediopago_unico usando RANK()</li> <li>Elimina datos antiguos de ventasdetalle</li> <li>Crea tabla temporal #Duplicados para filtrar registros problem\u00e1ticos</li> <li>Realiza operaci\u00f3n MERGE en ventascabecera (actualiza/inserta/elimina)</li> <li>Procesa datos de ventas (normales y anulaciones - documento 007)</li> </ol>"},{"location":"procesos/data-warehouse/etl/ventas/usp_jo_pos_dw_ventas_actualizar/#diagrama-entidad-relacion","title":"Diagrama Entidad-Relaci\u00f3n:","text":"<ul> <li>Muestra las principales tablas involucradas:</li> <li>Tablas destino: VENTASCABECERA, VENTASDETALLE, TB_TIPOVENTA_MEDIOPAGO</li> <li>Tablas temporales: TMPVTA, VENTASCABECERATMP</li> <li>Tablas origen: FAG0300 (cabeceras), FAP0300 (detalles), VIEW_TIPOVENTA_MEDIOPAGO_DWH</li> <li>Destaca las relaciones principales y los campos clave</li> <li>Incluye los campos m\u00e1s relevantes para entender el flujo de datos</li> </ul> <p>El procedimiento maneja principalmente datos de ventas POS (Point of Sale) con informaci\u00f3n de cabecera, detalle, medios de pago y tipos de venta.</p>"},{"location":"procesos/data-warehouse/reportes/ach/codigo/","title":"C\u00f3digo","text":"job_email_ACH_2024.sql<pre><code>USE [passareladwh]\nGO\n\nALTER PROCEDURE [dbo].[job_email_ACH_2024] AS\nBEGIN\n    SET XACT_ABORT ON\n\n    /**************************/\n    -- Tarea: Variables Globales\n    /**************************/\n    BEGIN\n        DECLARE @fechhoy DATE = DATEADD(DAY, 0, GETDATE())\n        SET @fechhoy='2025-06-08'\n\n        DECLARE @fechhoyCopia       DATE = @fechhoy,\n                @fechhoyCopiaSF     VARCHAR(8) = FORMAT(@fechhoy, 'yyyyMMdd');\n\n        DECLARE @fecha VARCHAR(200) = FORMAT(@fechhoy, 'yyyy-MM-dd')\n        DECLARE @fecha2 VARCHAR(200) = FORMAT(@fechhoy, 'yyyyMMdd')\n\n        SELECT @fechhoy [@fechhoy], @fechhoyCopia [@fechhoyCopia], @fechhoyCopiaSF [@fechhoyCopiaSF], @fecha [@fecha], @fecha2 [@fecha2];\n\n\n        DECLARE @email VARCHAR(MAX) = N'',\n                @asunto VARCHAR(200) = ('ACH01 Avance de ventas m\u00ednimas hoy ' + @fecha + ' ...res\u00famen (SIN IGV)')\n\n        DECLARE @tableHTML        VARCHAR(MAX),\n                @Body             VARCHAR(MAX),\n                @tableHTMLSup     VARCHAR(MAX)\n\n        DECLARE @rownumber        INT = NULL,\n                @supervisor       VARCHAR(200) = NULL,\n                @montosup         NUMERIC(18, 2),\n                @cuotasup         NUMERIC(18, 2),\n                @cuotadetsup      NUMERIC(18, 2),\n                @avanceparsup     NUMERIC(8, 2),\n                @avanceaccsup     NUMERIC(8, 2);\n\n        ---------------------------------------------------\n        -- OPEN QUERY PARAMETERS\n        ---------------------------------------------------\n        DECLARE @OpenQuery         VARCHAR(MAX)\n               ,@Script            VARCHAR(MAX)\n               ,@LinkedServer      VARCHAR(MAX)\n               ,@TempTableName     VARCHAR(100)\n\n        SET @LinkedServer = 'SERVNPROD'\n\n    END\n\n\n    /*******************************/\n    -- Tarea: Obtener Datos - Datazen\n    /*******************************/\n    --- Creaci\u00f3n de tablas temporales\n    BEGIN\n        IF OBJECT_ID('tempdb..#tmpSupervisor01') IS NOT NULL\n            DROP TABLE #tmpSupervisor01;\n        IF OBJECT_ID('tempdb..#tmpVentas') IS NOT NULL\n            DROP TABLE #tmpVentas;\n        IF OBJECT_ID('tempdb..#Reportev0') IS NOT NULL\n            DROP TABLE #Reportev0;\n        IF OBJECT_ID('tempdb..#Reportev1') IS NOT NULL\n            DROP TABLE #Reportev1;\n        IF OBJECT_ID('tempdb..#Reportev2') IS NOT NULL\n            DROP TABLE #Reportev2;\n        IF OBJECT_ID('tempdb..#ReporteSupervisorAgrupado') IS NOT NULL\n            DROP TABLE #ReporteSupervisorAgrupado;\n        IF OBJECT_ID('tempdb..#tipoventa_mediopago') IS NOT NULL\n            DROP TABLE #tipoventa_mediopago;\n        IF OBJECT_ID('tempdb..#TProyecciones') IS NOT NULL\n            DROP TABLE #TProyecciones;\n\n        CREATE TABLE #TProyecciones\n        (\n            canal             VARCHAR(200),\n            subcanal          VARCHAR(200),\n            medioventa        VARCHAR(200),\n            Supervisor        VARCHAR(200),\n            monto             DECIMAL(10, 2),\n            fecha             VARCHAR(10),\n            margen            DECIMAL(10, 4),\n            utilidad          DECIMAL(10, 4),\n            Par               INT,\n            Acc               INT,\n            id_medioventa     INT,\n            email             VARCHAR(200)\n        )\n\n        CREATE TABLE #tmpVentas\n        (\n            [serienumero]     [nvarchar](13) NULL,\n            [tienda]          [nvarchar](5) NULL,\n            [vendedor]        [nvarchar](6) NULL,\n            [fecha]           [nvarchar](20) NULL,\n            [sku]             [nvarchar](11) NULL,\n            [cantidad]        FLOAT NULL,\n            [monto]           FLOAT NULL,\n            [cantpar]         INT NULL,\n            [cantacc]         INT NULL,\n            [unegocioid]      INT NULL,\n            [unegocio]        [nvarchar](50) NULL,\n            [canal]           VARCHAR(50) NULL,\n            [subcanal]        VARCHAR(100) NULL,\n            [medioventa]      VARCHAR(100) NULL,\n            [asesorventa]     VARCHAR(200) NULL,\n            [costo]           FLOAT NULL,\n            [utilidad]        AS (monto -costo),\n            [margen]          AS ((monto -costo) / NULLIF(monto, 0))\n        )       \n\n        CREATE TABLE #Reportev0\n        (\n            [id_canal]     INT NULL,\n            [venta]           FLOAT NULL,\n            [costo]           [float] NULL,\n            [cuota]           FLOAT NULL,\n            [fecha]           [date] NOT NULL,\n            [canal]           [varchar](50) NULL,\n            [cantpar]         INT NULL,\n            [cantacc]         INT NULL,\n            [cuotapar]        INT NULL,\n            [cuotaacc]        INT NULL,\n            [ntran]           INT NULL,\n            [utilidad]        AS (venta -costo),\n            [margen]          AS ((venta -costo) / NULLIF(venta, 0))\n        )   \n\n        CREATE TABLE #Reportev1\n        (\n            [canal]          VARCHAR(200) NULL,\n            [subcanal]       VARCHAR(200) NULL,\n            [medioventa]     VARCHAR(200) NULL,\n            [venta]          FLOAT NULL,\n            [costo]          [float] NULL,\n            [cuota]          FLOAT NULL,\n            [fecha]          [date] NOT NULL,\n            [cantpar]        INT NULL,\n            [cantacc]        INT NULL,\n            [cuotapar]       INT NULL,\n            [cuotaacc]       INT NULL,\n            [ntran]          INT NULL,\n            [montoAcc]       FLOAT NULL,\n            [utilidad]        AS (venta -costo),\n            [margen]          AS ((venta -costo) / NULLIF(venta, 0))\n        )   \n\n        CREATE TABLE #Reportev2\n        (\n            [canal]          VARCHAR(200) NULL,\n            [subcanal]       VARCHAR(200) NULL,\n            [medioventa]     VARCHAR(200) NULL,\n            [venta]          FLOAT NULL,\n            [costo]          FLOAT NULL,\n            [cuota]          FLOAT NULL,\n            [supervisor]     [nvarchar](255) NULL,\n            [avance]         FLOAT NULL,\n            [fecha]          [date] NOT NULL,\n            [nomtiend]       [varchar](200) NULL,\n            [cantpar]        INT NULL,\n            [cantacc]        INT NULL,\n            [cuotapar]       INT NULL,\n            [cuotaacc]       INT NULL,\n            [avancepar]      INT NULL,\n            [avanceacc]      INT NULL,\n            [ntran]          INT NULL,\n            [utilidad]        AS (venta -costo),\n            [margen]          AS ((venta -costo) / NULLIF(venta, 0)),\n            [montoAcc]       FLOAT NULL,\n        )   \n\n        CREATE TABLE #ReporteSupervisorAgrupado\n        (\n            [venta]          FLOAT NULL,\n            [cuota]          FLOAT NULL,\n            [avance]         FLOAT NULL,\n            [fecha]          [date] NOT NULL,\n            [supervisor]     [nvarchar](255) NULL,\n            [cantpar]        INT NULL,\n            [cantacc]        INT NULL,\n            [cuotapar]       INT NULL,\n            [cuotaacc]       INT NULL,\n            [avancepar]      FLOAT NULL,\n            [avanceacc]      FLOAT NULL\n        )\n\n        CREATE TABLE #Tipoventa_mediopago\n        (\n            [TIPODOC]         VARCHAR(3) NULL,\n            [SERIE]           VARCHAR(4) NULL,\n            [NRODOC]          VARCHAR(10) NULL,\n            [MEDIOPAGOID]     VARCHAR(10) NOT NULL,\n            [TIPODEVENTA]     VARCHAR(255) NULL,\n            [Rank]            INT NULL\n        )\n\n        CREATE TABLE #tmpSupervisor01\n        (\n            canal          VARCHAR(200) null,\n            subcanal       VARCHAR(200) null,\n            medioventa     VARCHAR(200) null,\n            supervisor     VARCHAR(200) null,\n            email          VARCHAR(100) null\n        )\n\n    END\n\n    INSERT INTO #TProyecciones\n    (\n        canal,\n        subcanal,\n        medioventa,\n        Supervisor,\n        monto,\n        fecha,\n        margen,\n        utilidad,\n        Par,\n        Acc,\n        id_medioventa,\n        email\n    )\n    SELECT tc.canal,\n            ts.subcanal,\n            tm.medioventa,\n--          p.Supervisor,\n            s.nombre AS [Supervisor],\n            p.monto,\n            p.fecha,\n            p.margen,\n            p.utilidad,\n            p.Par,\n            p.Acc,\n            p.id_medioventa,\n            s.email\n     FROM   proyecciones              AS p\n            INNER JOIN tb_medioventa  AS tm\n                 ON  tm.id_medioventa = p.id_medioventa\n            INNER JOIN tb_subcanal    AS ts\n                 ON  ts.id_subcanal = tm.id_subcanal\n            INNER JOIN tb_canal       AS tc\n                 ON  tc.id_canal = ts.id_canal\n            LEFT JOIN (SELECT DISTINCT SUBSTRING(s.canalventa,2,2) AS canalventa, s.nombre, s.email FROM supervisor s) AS s ON s.canalventa = p.canalventa\n     WHERE  p.fecha = @fechhoyCopiaSF\n     AND tc.id_canal IN (1,4)\n     AND s.email IS NOT NULL\n     AND tm.estado=1\n\n     UNION ALL\n\n   SELECT tc.canal,\n            ts.subcanal,\n            tm.medioventa,\n            p.Supervisor,\n            p.monto,\n            p.fecha,\n            p.margen,\n            p.utilidad,\n            p.Par,\n            p.Acc,\n            p.id_medioventa,\n            CASE \n                WHEN p.Supervisor='Magda Vilchez' THEN 'magda.vilchez@footloose.pe'\n                WHEN p.Supervisor='Pia Praeli' THEN 'pia.praeli@footloose.pe'\n                WHEN p.Supervisor='Luigi Lujan' THEN 'luigi.lujan@footloose.pe'\n                ELSE ''\n            END AS email\n     FROM   proyecciones              AS p\n            INNER JOIN tb_medioventa  AS tm\n                 ON  tm.id_medioventa = p.id_medioventa\n            INNER JOIN tb_subcanal    AS ts\n                 ON  ts.id_subcanal = tm.id_subcanal\n            INNER JOIN tb_canal       AS tc\n                 ON  tc.id_canal = ts.id_canal\n     WHERE  p.fecha = @fechhoyCopiaSF\n     AND tc.id_canal IN (2,3,5)\n     AND tm.estado=1;\n\n    INSERT INTO #tmpSupervisor01\n    (\n        canal,\n        subcanal,\n        medioventa,\n        supervisor,\n        email\n    )\n    SELECT DISTINCT\n        t.canal,\n        t.subcanal,\n        t.medioventa,\n        t.Supervisor,\n        t.email\n    FROM\n        #TProyecciones AS t\n    inner join supervisor_unicos as su on su.email=t.email  /*FIX (MA: 2024-05-21)*/\n    where su.estado=1   /*FIX (MA: 2024-05-21)*/\n\n    INSERT INTO #Tipoventa_mediopago\n    SELECT m1.TIPODOC,\n           m1.SERIE,\n           m1.NRODOC,\n           m1.MEDIOPAGOID,\n           m1.TIPODEVENTA,\n           m1.[Rank]\n    FROM   (\n               SELECT DISTINCT m.TIPODOC,\n                      m.SERIE,\n                      m.NRODOC,\n                      m.MEDIOPAGOID,\n                      m.TIPODEVENTA,\n                      RANK() OVER(\n                          PARTITION BY m.TIPODOC,\n                          m.SERIE,\n                          m.NRODOC,\n                          m.TIPODEVENTA ORDER BY m.TIPODOC,\n                          m.SERIE,\n                          m.NRODOC,\n                          m.MEDIOPAGOID,\n                          m.TIPODEVENTA DESC\n                      ) AS RANK\n               FROM   servnprod.bd_passarela.dbo.view_tipoventa_mediopago_DWH AS m WITH(NOLOCK)\n               WHERE  m.FECHA = @fechhoy\n           ) AS m1\n    WHERE  m1.[Rank] = 1;\n\n\n    /*\n    * Proceso:      Venta\n    * Evento:       Inserci\u00f3n de ventas a un temporal\n    * Objetivo: Manejar datos de Ventas del D\u00eda\n    */\nselect serienumero,tienda,sku, monto from #tmpVentas as v\n\n    INSERT INTO #tmpVentas\n      (\n        serienumero,\n        tienda,\n        vendedor,\n        fecha,\n        sku,\n        cantidad,\n        monto,\n        cantpar,\n        cantacc,\n        unegocioid,\n        unegocio,\n        canal,\n        subcanal,\n        medioventa,\n        asesorventa,\n        costo\n      )\n    SELECT (a.sfactu_3 + '' + a.nfactu_3) AS serienumero\n           ,\n           a.tienda_3                     AS tienda,\n           a.fichv_3                      AS vendedor,\n           dbo.fx_convertToFechahora(a.fcom_3,gloa_3) AS fecha,\n           linea_3a                       AS sku,\n           CASE WHEN a.tidoc_3 = '007' THEN -1 * cant_3a ELSE cant_3a END AS cantidad,\n           CAST(\n               (\n                   CASE \n                        WHEN a.tidoc_3 = '007' THEN -1 * b.vvta1_3a\n                        ELSE b.vvta1_3a\n                   END\n               ) AS NUMERIC(18, 2)\n           )                              AS monto,\n           CASE \n                WHEN t.aplicapercepcion = 'PARES' THEN CASE \n                                                            WHEN a.tidoc_3 = '007' THEN -1 * cant_3a\n                                                            ELSE cant_3a\n                                                       END\n                ELSE 0\n           END                            AS cantpar,\n           CASE \n                WHEN t.aplicapercepcion = 'ACCESORIOS' AND p.precio &gt; 8 THEN CASE \n                                                                                  WHEN a.tidoc_3 = '007' THEN -1 *\n                                                                                       cant_3a\n                                                                                  ELSE cant_3a\n                                                                             END\n                ELSE 0\n           END                            AS cantacc,\n           ff.unegocioid,\n           ff2.descripcion                AS unegocio,\n           ff2.descripcion AS canal,\n           CASE WHEN ff.unegocioid=1 THEN 'Clientes Tienda' ELSE ff4.subcanal END AS subcanal,\n       ff.nomb_16f AS medioventa,\n       va.nombre AS asesorventa,\n       CASE WHEN a.tidoc_3 = '007' THEN -1 * cant_3a ELSE cant_3a END * p.preciocosto AS costo                     \n    FROM   servnprod.bd_passarela.dbo.fag0300 a --WITH(NOLOCK)\n           INNER JOIN servnprod.bd_passarela.dbo.fap0300 b --WITH(NOLOCK)\n                ON  a.transacabid = b.transacabid--a.ncom_3=b.ncom_3a AND a.ccom_3=b.ccom_3a AND a.periodo = b.periodo\n           LEFT JOIN vw_Producto p WITH(NOLOCK)\n                ON  p.[producto] = b.[linea_3a]\n           LEFT JOIN tipoarticulo t WITH(NOLOCK)\n                ON  t.[tipoarticulo] = p.[tipoarticulo]\n           LEFT JOIN servnprod.bd_passarela.dbo.fag1600_FACTU AS ff\n                ON  ff.tipov_16f = a.tipov_3 AND ISNULL(ff.tipov_16f,'')!=''\n           LEFT JOIN servnprod.bd_passarela.dbo.fag1602_FACTU AS ff2\n                ON  ff2.unegocioid = ff.unegocioid\n           LEFT JOIN servnprod.bd_passarela.dbo.fag1600_FACTU AS ff3\n                ON  ff3.tipov_16f = a.alicom_3 AND ISNULL(ff3.tipov_16f,'')!=''\n            LEFT JOIN servnprod.bd_passarela.dbo.fag1604_FACTU AS ff4\n                ON  ff4.id_subcanal = ff.id_subcanal\n           LEFT JOIN servnprod.bd_passarela.dbo.PERSONA AS va ON va.CODIGO = a.fichv_3\n--         LEFT JOIN #Tipoventa_mediopago AS c\n--              ON  a.tidoc_3 = c.TIPODOC\n--              AND a.sfactu_3 = c.SERIE\n--              AND a.nfactu_3 = c.NRODOC               \n    WHERE  a.fcom_3 = @fechhoyCopia\n           --AND ISNULL(a.anticipo_3 ,0)!=2 /* MA: 2025-06-02  */\n           AND a.flag_3 = '1'\n           AND ff.unegocioid IN (1,2,3,4,5)\n                AND NOT EXISTS\n                (\n                        SELECT 1 AS Expr1\n                        FROM   dbo.tb_productos_excluidos AS tpe\n                        WHERE  (tpe.producto=b.[linea_3a])\n                )\n                AND NOT EXISTS\n                        (\n                                SELECT 1 AS Expr1\n                                FROM   dbo.tb_series_excluidas AS tse\n                                WHERE  (tse.serie=a.sfactu_3)\n                        )\n           AND NOT (b.tipimp_3a='9996' AND b.aigv_3a='12')\n           /* MA: 2025-06-02, se agrega bloque de filtro de manejo de anticipos\n           *  - Se consideran todas lastransacciones comunes\n           *  - Las de anticipo:\n           *  -   No se considera la factura de anticipo\n           *  -   Se considera la factura de cierre\n           *  -   No se considera la factura de consumo del anticipo siempre que tenga referencia\n           */\n            AND case \n                    when a.anticipo_3=1 then 0\n                    when a.anticipo_3=2 then 1\n                    when a.anticipo_3=3 then case when isnull(a.nfactur_3,'')!='' then 1 else 0 end \n                    else 1\n                end = 1\n    ;\n\n\n    /*\n    * Evento:       Inserta info a tabla de avance de ventas\n    * Objetivo: Manejar y mostrar los avances\n    */\n\n    INSERT INTO #Reportev0\n      (\n        id_canal,\n        venta,\n        costo,\n        cuota,\n        fecha,\n        canal,\n        cantpar,\n        cantacc,\n        cuotapar,\n        cuotaacc,\n        ntran\n      )\n    SELECT x.id_canal                   AS id_canal,\n           SUM(x.venta)                   AS venta,\n           SUM(x.costo)                   AS costo,\n           SUM(x.cuota)                   AS cuota,\n           x.fecha                        AS fecha,\n           x.canal                        AS canal,\n           SUM(x.cantpar)                 AS cantpar,\n           SUM(x.cantacc)                 AS cantacc,\n           SUM(x.cuotapar)                AS cuotapar,\n           SUM(x.cuotaacc)                AS cuotaacc,\n           COUNT(DISTINCT x.serienumero)  AS ntran\n    FROM   (\n               SELECT \n                      CASE \n                          WHEN a.canal='Retail' THEN 1\n                          WHEN a.canal='Cat\u00e1logo' THEN 2\n                          WHEN a.canal='E-Commerce' THEN 3\n                          WHEN a.canal='Ventas Asistidas' THEN 4\n                          WHEN a.canal='B2B' THEN 5\n                          ELSE 1\n                      END AS id_canal,\n                      a.monto  AS venta,\n                      a.costo  AS costo,\n                      '0'      AS cuota,\n                      c.Fecha,\n                      a.canal,\n                      a.cantpar,\n                      a.cantacc,\n                      0        AS cuotapar,\n                      0        AS cuotaacc,\n                      a.serienumero\n               FROM   #tmpVentas a\n                      INNER JOIN TiempoVersus c\n                           ON  a.fecha = c.Fecha\n               WHERE  1 = 1\n                      AND a.fecha BETWEEN @fechhoyCopia AND @fechhoyCopia\n               UNION ALL\n               SELECT \n                      CASE \n                           WHEN a.canalventa = 'C3' THEN 5\n                           WHEN a.canalventa = 'D6' THEN CASE \n                                                              WHEN tt.id_grupo = 3 THEN 3\n                                                              WHEN tt.id_grupo = 2 THEN 2\n                                                              WHEN tt.id_grupo = 5 THEN 4\n                                                              ELSE 3\n                                                         END\n                           WHEN a.canalventa = '65' THEN 2\n                           WHEN a.canalventa != '65' AND tt.id_grupo = 2 THEN 2\n                           ELSE 1\n                      END         id_canal,\n                      0        AS venta,\n                      a.costo  AS costo,\n                      0        AS cuota,\n                      b.Fecha,\n                      CASE \n                           WHEN a.canalventa = 'C3' THEN 'B2B'\n                           WHEN a.canalventa = 'D6' THEN CASE \n                                                              WHEN tt.id_grupo = 3 THEN 'E-Commerce'\n                                                              WHEN tt.id_grupo = 2 THEN 'Cat\u00e1logo'\n                                                              WHEN tt.id_grupo = 5 THEN 'Ventas Asistidas'\n                                                              ELSE 'E-Commerce'\n                                                         END\n                           WHEN a.canalventa = '65' THEN 'Cat\u00e1logo'\n                           WHEN a.canalventa != '65' AND tt.id_grupo = 2 THEN 'Cat\u00e1logo'\n                           ELSE 'Retail'\n                      END         canal,\n                      0        AS cantpar,\n                      0        AS cantacc,\n                      0        AS cuotapar,\n                      0        AS cuotaacc,\n                      NULL     AS serienumero\n               FROM   CostoSH a\n                      INNER JOIN TiempoVersus b\n                           ON  a.fechask = b.idFecha\n                      INNER JOIN tb_tipoventa AS tt\n                           ON  tt.id_tipoventa = a.id_tipoventa\n               WHERE  1 = 1\n                      AND a.fechask BETWEEN @fechhoyCopiaSF AND @fechhoyCopiaSF\n               --AND p.monto&lt;&gt;0\n               UNION ALL\n               SELECT tc.id_canal,\n                      0             AS venta,\n                      0             AS costo,\n                      SUM(p.monto)  AS cuota,\n                      p.fecha,\n                      tc.canal,\n                      0             AS cantpar,\n                      0             AS cantacc,\n                      SUM(p.Par)    AS cuotapar,\n                      SUM(p.Acc)    AS cuotaacc,\n                      NULL          AS serienumero\n               FROM   proyecciones  AS p\n                      INNER JOIN tb_medioventa AS tm\n                           ON  tm.id_medioventa = p.id_medioventa\n                      INNER JOIN tb_subcanal AS ts\n                           ON  ts.id_subcanal = tm.id_subcanal\n                      INNER JOIN tb_canal AS tc\n                           ON  tc.id_canal = ts.id_canal\n                      INNER JOIN TiempoVersus AS tv\n                           ON  tv.idFecha = p.fecha\n               WHERE  1 = 1\n                      AND p.fecha BETWEEN @fechhoyCopiaSF AND @fechhoyCopiaSF\n               GROUP BY tc.id_canal, p.fecha, tc.canal\n    ) AS x\n    GROUP BY x.id_canal, x.fecha, x.canal\n    ;\n\n    /*\n    * Evento:       Inserta info a tabla de avance de ventas\n    * Objetivo: Manejar y mostrar los avances\n    */\n\n    INSERT INTO #Reportev1\n      (\n        canal,\n        subcanal,\n        medioventa,\n        venta,\n        costo,\n        cuota,\n        fecha,\n        cantpar,\n        cantacc,\n        cuotapar,\n        cuotaacc,\n        ntran,\n        montoAcc\n      )\n    SELECT x.canal       AS canal,\n           x.subcanal    AS subcanal,\n           x.medioventa  AS medioventa,\n           SUM(x.venta)                   AS venta,\n           SUM(x.costo)                   AS costo,\n           SUM(x.cuota)                   AS cuota,\n           x.fecha                        AS fecha,\n           SUM(x.cantpar)                 AS cantpar,\n           SUM(x.cantacc)                 AS cantacc,\n           SUM(x.cuotapar)                AS cuotapar,\n           SUM(x.cuotaacc)                AS cuotaacc,\n           COUNT(DISTINCT x.serienumero)  AS ntran,\n           SUM(x.montoAcc) AS montoAcc\n    FROM   (\n               SELECT \n                      a.canal,\n                      a.subcanal,\n                      CASE \n                          WHEN a.canal='E-Commerce' THEN CASE \n                                                           WHEN a.tienda='D6' THEN a.medioventa\n                                                           ELSE a.tienda\n                                                       END\n                          WHEN a.canal='Cat\u00e1logo' THEN CASE \n                                                           WHEN a.tienda='D6' THEN a.medioventa\n                                                           ELSE a.tienda\n                                                       END\n                          WHEN a.canal='Ventas Asistidas' THEN CASE \n                                                           WHEN a.tienda='D6' THEN a.medioventa\n                                                           ELSE a.tienda\n                                                       END\n                          ELSE a.tienda\n                      END AS medioventa,\n                      SUM(a.monto)   AS venta,\n                      SUM(a.costo)   AS costo,\n                      '0'       AS cuota,\n                      c.Fecha,\n                      SUM(a.cantpar) AS cantpar,\n                      SUM(a.cantacc) AS cantacc,\n                      0         AS cuotapar,\n                      0         AS cuotaacc,\n                      a.serienumero,\n                      0 AS montoAcc\n               FROM   #tmpVentas a\n                      INNER JOIN tienda b\n                           ON  a.tienda = b.tienda\n                      INNER JOIN TiempoVersus c\n                           ON  a.fecha = c.Fecha\n               WHERE  1 = 1\n                      AND a.fecha BETWEEN @fechhoyCopia AND @fechhoyCopia\n               GROUP BY a.canal, a.subcanal, CASE \n                          WHEN a.canal='E-Commerce' THEN CASE \n                                                           WHEN a.tienda='D6' THEN a.medioventa\n                                                           ELSE a.tienda\n                                                       END\n                          WHEN a.canal='Cat\u00e1logo' THEN CASE \n                                                           WHEN a.tienda='D6' THEN a.medioventa\n                                                           ELSE a.tienda\n                                                       END\n                          WHEN a.canal='Ventas Asistidas' THEN CASE \n                                                           WHEN a.tienda='D6' THEN a.medioventa\n                                                           ELSE a.tienda\n                                                       END\n                          ELSE a.tienda\n                      END, c.Fecha, a.serienumero\n               UNION ALL\n               SELECT\n                      tc.canal,\n                      ts.subcanal,\n                      tm.medioventa AS medioventa,\n                      0         AS venta,\n                      0         AS costo,\n                      SUM(a.monto)   AS cuota,\n                      c.Fecha   AS fecha,\n                      0         AS cantpar,\n                      0         AS cantacc,\n                      SUM(a.Par)     AS cuotapar,\n                      SUM(a.Acc)     AS cuotaacc,\n                      NULL      AS serienumero,\n                      SUM(a.VtaAcc) AS montoAcc\n               FROM   proyecciones a\n                      INNER JOIN TiempoVersus c\n                           ON  a.fecha = c.idFecha\n                      INNER JOIN tb_medioventa AS tm ON tm.id_medioventa = a.id_medioventa\n                      INNER JOIN tb_subcanal AS ts\n                                ON ts.id_subcanal = tm.id_subcanal\n                      INNER JOIN tb_canal AS tc ON tc.id_canal = ts.id_canal\n               WHERE  1 = 1\n                      AND a.fecha BETWEEN @fechhoyCopiaSF AND @fechhoyCopiaSF\n               GROUP BY tc.canal, ts.subcanal, tm.medioventa, c.Fecha\n           )  x\n    GROUP BY x.canal, x.subcanal, x.medioventa, x.fecha\n\n    /*\n    * Evento:       Formatear info de catalogo (26,65)\n    * Objetivo: Mostrar la data de la tienda correcta\n    */\n    BEGIN\n    IF OBJECT_ID('tempdb..#tmpX') IS NOT NULL\n        DROP TABLE #tmpX;\n    CREATE TABLE #tmpX\n    (\n        canalventa     VARCHAR(5),\n        tienda         VARCHAR(5),\n        monto          NUMERIC(12, 4),\n        fecha          VARCHAR(8)\n    )\n\n    INSERT INTO #tmpX\n      (\n        canalventa,\n        tienda,\n        monto,\n        fecha\n      )\n    SELECT canalventa           AS canalventa,\n           LEFT(canalventa, 2)  AS tienda,\n           monto                AS monto,\n           fecha                AS fecha\n    FROM   proyecciones         AS p\n    WHERE  p.fecha = @fechhoyCopiaSF\n           AND p.canalventa IN ('65-c', '26-c') \n\n    END\n\n    --UPDATE    b\n    --SET       b.cuota = a.monto\n    --FROM  #tmpX a\n    --      INNER  JOIN Reportev1 b ON a.tienda=b.tienda\n\n    /*\n    * Evento:       Inserta info a tabla de avance de ventas\n    * Objetivo: Manejar y mostrar los avances\n    */\n\n    INSERT INTO #Reportev2\n    (\n        canal,\n        subcanal,\n        medioventa,\n        venta,\n        costo,\n        cuota,\n        supervisor,\n        avance,\n        fecha,\n        cantpar,\n        cantacc,\n        cuotapar,\n        cuotaacc,\n        avancepar,\n        avanceacc,\n        ntran,\n        montoAcc\n    )\n    SELECT a.canal,\n           a.subcanal,\n           a.medioventa,\n           a.venta       AS venta,\n           a.costo       AS costo,\n           a.cuota       AS cuota,\n           c.supervisor  AS supervisor,\n           IIF(a.cuota &lt; 5, 1.00, a.venta / a.cuota) AS avance,\n--         CASE \n--              WHEN a.venta &lt; 1 THEN 0\n--              ELSE (a.venta -a.costo * 1.18) / a.venta\n--         END           AS margen,\n           a.fecha       AS fecha,\n           a.cantpar,\n           a.cantacc,\n           a.cuotapar,\n           a.cuotaacc,\n           IIF(a.cuotapar &lt; 1, 0.00, a.cantpar / a.cuotapar) AS avancepar,\n           IIF(a.cuotaacc &lt; 1, 0.00, a.cantacc / a.cuotaacc) AS avanceacc,\n           a.ntran,\n           a.montoAcc\n    FROM   #Reportev1 a\n           LEFT JOIN #tmpSupervisor01 c\n                ON  c.canal = a.canal\n                AND c.subcanal = a.subcanal\n                AND c.medioventa = a.medioventa\n    WHERE  1 = 1\n\n\n    /*\n    * Evento:       Inserta info a tabla de avance por supervisor\n    * Objetivo: Manejar y mostrar los avances por supervisor\n    */\n    INSERT INTO #ReporteSupervisorAgrupado\n      (\n        venta,\n        cuota,\n        avance,\n        fecha,\n        supervisor,\n        cantpar,\n        cantacc,\n        cuotapar,\n        cuotaacc,\n        avancepar,\n        avanceacc\n      )\n    SELECT SUM(x.venta)     AS venta,\n           SUM(x.cuota)     AS cuota,\n           CASE \n                WHEN SUM(x.venta) &lt; 20 THEN 0\n                ELSE CASE \n                          WHEN SUM(x.cuota) &lt; 20 THEN 0\n                          ELSE SUM(x.venta) / SUM(x.cuota)\n                     END\n           END              AS avance,\n           x.fecha          AS fecha,\n           x.supervisor     AS supervisor,\n           SUM(X.cantpar)   AS cantpar,\n           SUM(X.cantacc)   AS cantacc,\n           SUM(X.cuotapar)  AS cuotapar,\n           SUM(X.cuotaacc)  AS cuotaacc,\n           IIF(\n               SUM(X.cuotapar) &lt; 20,\n               0.00,\n               SUM(X.cantpar) / SUM(X.cuotapar)\n           )                AS avancepar,\n           IIF(\n               SUM(X.cuotaacc) &lt; 20,\n               0.00,\n               SUM(X.cantacc) / SUM(X.cuotaacc)\n           )                AS avanceacc\n    FROM   (\n               SELECT venta,\n                      cuota,\n                      avance,\n                      supervisor,\n                      fecha,\n                      cantpar,\n                      cantacc,\n                      cuotapar,\n                      cuotaacc\n               FROM   #Reportev2\n               --WHERE  tienda NOT IN ('26-C', '65-C')\n           )                   x\n    GROUP BY\n           supervisor,\n           fecha;\n\n    DECLARE @ventas       NUMERIC(18, 2) = (\n                SELECT SUM(venta)\n                FROM   #Reportev2\n            ) --(SELECT SUM(venta) FROM Reportev2 WHERE fecha = @fecha)\n            ,\n            @cuota        NUMERIC(18, 2) = (\n                SELECT SUM(monto)\n                FROM   proyeccionesUN\n                WHERE  fecha = @fecha2\n            ),\n            @cantpar      INT = (\n                SELECT SUM(cantpar)\n                FROM   #Reportev2\n            ),\n            @cuotapar     INT = (\n                SELECT SUM(cuotapar)\n                FROM   #Reportev2\n            ),\n            @cantacc      INT = (\n                SELECT SUM(cantacc)\n                FROM   #Reportev2\n            ),\n            @cuotaacc     INT = (\n                SELECT SUM(cuotaacc)\n                FROM   #Reportev2\n            )\n\n    SET @cuota = ISNULL(@cuota,0.00);\n    SET @cuotapar = ISNULL(@cuotapar,0.00);\n    SET @cuotaacc = ISNULL(@cuotaacc,0.00);\n\n    DECLARE @avance        VARCHAR(200) = FORMAT(\n                CASE \n                     WHEN @ventas &lt; 100 THEN 0\n                     ELSE CASE \n                               WHEN @cuota &lt; 20 THEN 100\n                               ELSE @ventas * 100 / @cuota\n                          END\n                END,\n                'N0',\n                'es-pe'\n            ) \n\n    DECLARE @avancepar     VARCHAR(200) = FORMAT(\n                CASE \n                     WHEN @cantpar &lt; 1 THEN 0\n                     ELSE CASE \n                               WHEN @cuotapar &lt; 1 THEN 100\n                               ELSE @cantpar * 100 / @cuotapar\n                          END\n                END,\n                'N0',\n                'es-pe'\n            )\n\n    DECLARE @avanceacc     VARCHAR(200) = FORMAT(\n                CASE \n                     WHEN @cantacc &lt; 1 THEN 0\n                     ELSE CASE \n                               WHEN @cuotaacc &lt; 1 THEN 100\n                               ELSE @cantacc * 100 / @cuotaacc\n                          END\n                END,\n                'N0',\n                'es-pe'\n            ) \n\n    /**********************************/\n    -- Tarea: Eliminar tablas Temporales\n    /**********************************/\n    IF OBJECT_ID('tempdb..#TmpAvanceUN') IS NOT NULL\n        DROP TABLE #TmpAvanceUN;\n    IF OBJECT_ID('tempdb..#TmpAvanceSupervisor') IS NOT NULL\n        DROP TABLE #TmpAvanceSupervisor;\n    IF OBJECT_ID('tempdb..#TmpVentaCuota') IS NOT NULL\n        DROP TABLE #TmpVentaCuota;\n    IF OBJECT_ID('tempdb..#TmpVentaCuotas') IS NOT NULL\n        DROP TABLE #TmpVentaCuotas;\n    IF OBJECT_ID('tempdb..#tmpSupervisor') IS NOT NULL\n        DROP TABLE #tmpSupervisor;\n    IF OBJECT_ID('tempdb..#TmpAvanceSupervisores') IS NOT NULL\n        DROP TABLE #TmpAvanceSupervisores;\n    IF OBJECT_ID('tempdb..#tmpSupervisores') IS NOT NULL\n        DROP TABLE #tmpSupervisores;\n\n    /******************************/\n    -- Tarea: Creaci\u00f3n de Temporales\n    /******************************/\n    CREATE TABLE #TmpAvanceUN\n    (\n        canal          VARCHAR(200),\n        venta          FLOAT,\n        cuota          FLOAT,\n        avance         FLOAT,\n        rownumber      TINYINT,\n        bgcolor        VARCHAR(10),\n        [costo]        FLOAT NULL,\n        [utilidad]     AS (venta -costo),\n        [margen]       AS ((venta -costo) / NULLIF(venta, 0)),\n        [margen2]      VARCHAR(20)\n    )\n    CREATE TABLE #TmpAvanceSupervisor\n    (\n        supervisor      VARCHAR(MAX),\n        venta           FLOAT,\n        cuota           FLOAT,\n        avance          FLOAT,\n        [cantpar]       INT NULL,\n        [cantacc]       INT NULL,\n        [cuotapar]      INT NULL,\n        [cuotaacc]      INT NULL,\n        [avancepar]     FLOAT NULL,\n        [avanceacc]     FLOAT NULL,\n        rownumber       TINYINT,\n        bgcolor         VARCHAR(10),\n        [costo]        FLOAT NULL,\n        [utilidad]     AS (venta -costo),\n        [margen]       AS ((venta -costo) / NULLIF(venta, 0)),\n        [margen2]      VARCHAR(20),\n        [montoAcc]       FLOAT NULL\n    )\n    CREATE TABLE #TmpVentaCuotas\n    (\n        canal           VARCHAR(200),\n        subcanal        VARCHAR(200),\n        medioventa      VARCHAR(200),\n        total           FLOAT,\n        cuota           FLOAT,\n        avance          FLOAT,\n        [cantpar]       INT NULL,\n        [cantacc]       INT NULL,\n        [cuotapar]      INT NULL,\n        [cuotaacc]      INT NULL,\n        [avancepar]     FLOAT NULL,\n        [avanceacc]     FLOAT NULL,\n        ntran           INT,\n        [costo]         FLOAT NULL,\n        [utilidad]      AS (total -costo),\n        [margen]        AS ((total -costo) / NULLIF(total, 0))\n    )\n\n    CREATE TABLE #TmpVentaCuota\n    (\n        canal           VARCHAR(200),\n        subcanal        VARCHAR(200),\n        medioventa      VARCHAR(200),\n        total           FLOAT,\n        cuota           FLOAT,\n        avance          FLOAT,\n        [cantpar]       INT NULL,\n        [cantacc]       INT NULL,\n        [cuotapar]      INT NULL,\n        [cuotaacc]      INT NULL,\n        [avancepar]     FLOAT NULL,\n        [avanceacc]     FLOAT NULL,\n        hora            VARCHAR(8),\n        NTRAN           INT,\n        TRAF_TOTAL      INT,\n        TKAVG           FLOAT,\n        RATIO_CONV      FLOAT,\n        bgcolor         VARCHAR(10),\n        [costo]         FLOAT NULL,\n        [utilidad]      AS (total -costo),\n        [margen]        AS ((total -costo) / NULLIF(total, 0)),\n        [margen2]       VARCHAR(20)\n    )\n    CREATE TABLE #tmpSupervisor\n    (\n        supervisor     VARCHAR(50),\n        rownumber      TINYINT\n    )\n    CREATE TABLE #TmpAvanceSupervisores\n    (\n        supervisor     VARCHAR(50),\n        email          VARCHAR(100),\n        avance         NUMERIC(10, 6),\n        rownumber      TINYINT\n    )\n    CREATE TABLE #tmpSupervisores\n    (\n        supervisor     VARCHAR(50),\n        rownumber      TINYINT,\n        email          VARCHAR(100)\n    )\n\n\n    /***********************************/\n    -- Tarea: Avance Por Unidad de Negocio\n    /***********************************/\n    BEGIN\n        INSERT INTO #TmpAvanceUN\n          (\n            canal,\n            venta,\n            cuota,\n            avance,\n            costo,\n            rownumber\n          )\n        SELECT ISNULL(t2.canal, 'Retail') AS canal,\n               t2.venta,\n               t2.cuota,\n               t2.avance,\n               t2.costo,\n               ROW_NUMBER() OVER(ORDER BY t2.avance ASC) AS rownumber\n        FROM   (\n                   SELECT canal,\n                          IIF(venta &lt; 20, 0, venta) AS venta,\n                          IIF(cuota &lt; 20, 0, cuota) AS cuota,\n                          CASE \n                               WHEN venta &lt; 20 THEN 0\n                               ELSE CASE \n                                         WHEN cuota &lt; 20 THEN 100\n                                         ELSE venta * 100 / cuota\n                                    END\n                          END  AS avance,\n                          costo\n                   FROM   (\n                              SELECT r.canal,\n                                     SUM(ISNULL(r.venta,0)) AS venta,\n                                     SUM(ISNULL(r.cuota,0)) AS cuota,\n                                     SUM(ISNULL(r.costo,0)) AS costo\n                              FROM   #Reportev0 AS r\n                              GROUP BY\n                                     r.canal\n                          )    AS t1\n               ) AS t2\n        GROUP BY\n               t2.canal,\n               t2.venta,\n               t2.cuota,\n               t2.avance,\n               t2.costo\n        ORDER BY\n               3\n\n\n        UPDATE t\n        SET    t.bgcolor = CASE \n                                WHEN avance &lt; 90 THEN '#FFE5F4' /* ROJO */\n                                ELSE CASE \n                                          WHEN avance &lt; 100 THEN '#FFBF00' /* AMBAR */\n                                          ELSE '#00FF40' /* VERDE */\n                                     END\n                           END\n        FROM   #TmpAvanceUN AS t\n\n\n        UPDATE t SET    bgcolor = '#F78181'\n        FROM #TmpAvanceUN AS t\n        WHERE t.margen &lt; 0.30;\n\n        UPDATE t SET t.margen2 = FORMAT(margen,'##.0%')\n        FROM #TmpAvanceUN AS t\n\n\n        SET @Body = '';\n\n        SET @tableHTML = N'&lt;html&gt;'+\n                         N'&lt;head&gt;'+\n                             N'&lt;style type=\"text/css\"&gt;'+\n                                 N'.tg  {border-collapse:collapse;border-spacing:0;height:10px;}'+\n                                 --N'table, td, th {border: 1px solid #3f4449;}'+\n                                 --N'table th {background-color: #2C76DF;color: white;}'+\n                                 N'.tg td{font-family:Arial, sans-serif;font-size:14px;padding:2px 0px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:#2C76DF;}'+\n                                 N'.tg th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:2px 0px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:#2C76DF;}'+\n                                 N'.tg .tg-f7xs{font-weight:bold;background-color:#ed1c24;color:#ffffff;border-color:#ed1c24;text-align:center;vertical-align:top}'+\n                                 N'.tg .tg-d4sb{background-color:#f79646;border-color:#f79646;text-align:center;vertical-align:top}'+\n                                 N'.tg .tg-f60r{background-color:#e26b0a;border-color:#e26b0a;text-align:center;vertical-align:top}'+\n                                 N'.tg .tg-ubmm{background-color:#ffc7ce;color:#9c0006;border-color:#c0c0c0;text-align:center;vertical-align:top}'+\n                                 N'.tg .tg-9m3w{font-weight:bold;background-color:#f79646;border-color:#f79646;text-align:center;vertical-align:top}'+\n                                 N'.tg .tg-pksw{font-weight:bold;background-color:#f79646;color:#ffffff;border-color:#f79646;text-align:center;vertical-align:top}'+\n                                 N'.tg .tg-pesd{border-color:#c0c0c0;vertical-align:top}'+\n                                 N'.tg .tg-fkia{font-weight:bold;background-color:#FFDD00;color:#000000;border-color:#FFDD00;text-align:center;vertical-align:top}'+\n                                 N'.tg .tg-fzdr{border-color:#c0c0c0;text-align:center;vertical-align:top}'+\n                                 N'.tg .tg-o0c0{background-color:#ffeb9c;color:#cf7e00;border-color:#c0c0c0;text-align:center;vertical-align:top}'+\n                                 N'.tg .tg-rfq8{background-color:#c6efce;color:#226c49;border-color:#c0c0c0;text-align:center;vertical-align:top}'+\n                                 N'.tg .tg-7l0w{font-weight:bold;background-color:#e26b0a;color:#ffffff;border-color:#e26b0a;text-align:center;vertical-align:top}'+\n                                 N'.tg .tg-ecu-blue{font-weight:bold;background-color:#034ea2;color:#ffffff;border-color:#034ea2;text-align:center;vertical-align:top}'+\n                                 N'.tg .tg-grey{font-weight:bold;background-color:#3f4449;color:#ffffff;border-color:#034ea2;text-align:center;vertical-align:top}'+\n                             N'&lt;/style&gt;'+\n                         N'&lt;/head&gt;'+\n                         N'&lt;body&gt;';\n\n        SET @tableHTML += \n            N'&lt;H1&gt;El total de las ventas del presente dia es de ' + CAST(FORMAT(@ventas, 'N0', 'es-pe') AS VARCHAR) \n            + IIF(\n                ISNULL(@avance, '100') = '100',\n                ' ',\n                '. Teniendo como avance de cuota ' + ISNULL(@avance, '') + '% '\n            ) + '&lt;/H1&gt;' +\n            N'&lt;H2&gt;Resumen de Avance por Canal de Venta&lt;/H2&gt;';\n\n\n        SELECT @Body = @Body + '&lt;table class=\"tg\" style=\"undefined;table-layout: fixed; width: 800px\"&gt;' +\n\n                    N'&lt;colgroup&gt;' +\n                    N'&lt;col style=\"width:200px\"&gt;' +\n                    N'&lt;col style=\"width:60px\"&gt;' +\n                    N'&lt;col style=\"width:60px\"&gt;' +\n                    N'&lt;col style=\"width:60px\"&gt;' +\n                    N'&lt;col style=\"width:80px\"&gt;' +\n                    N'&lt;/colgroup&gt;' +\n\n              N'&lt;tr&gt;'+\n                        N'&lt;td  class=\"tg-grey\" &gt;Canal de Venta&lt;/td&gt;' +\n                        N'&lt;td  class=\"tg-grey\" &gt;Venta&lt;/td&gt;' +\n                        N'&lt;td  class=\"tg-grey\" &gt;VtaM\u00edn&lt;/td&gt;' +\n                        N'&lt;td  class=\"tg-grey\" &gt;%Avance&lt;/td&gt;'+\n                        N'&lt;td  class=\"tg-grey\" &gt;%Margen&lt;/td&gt;'+\n                  N'&lt;/tr&gt;'\n\n        SELECT @Body = @Body + (\n                   SELECT [td/@bgcolor] = T1.[bgcolor],\n                          td = t1.[canal],\n                          '',\n                          [td/@align] = 'right',\n                          [td/@bgcolor] = T1.[bgcolor],\n                          td = FORMAT(t1.[venta], 'N0', 'es-pe'),\n                          '',\n                          [td/@align] = 'right',\n                          [td/@bgcolor] = T1.[bgcolor],\n                          td = FORMAT(t1.[cuota], 'N0', 'es-pe'),\n                          '',\n                          [td/@align] = 'right',\n                          [td/@bgcolor] = T1.[bgcolor],\n                          td = FORMAT(t1.[avance], 'N0', 'es-pe') + '%',\n                          '',\n                          [td/@align] = 'right',\n                          [td/@bgcolor] = T1.[bgcolor],\n                          td = t1.[margen2],\n                          ''\n                   FROM   #TmpAvanceUN AS t1 \n                          FOR XML PATH('tr') ---- instead of for xml raw(tr), element\n               ) + '&lt;/table&gt;';\n\n        --       SET @tableHTML+= @Body+\n        --                        N'&lt;/body&gt;&lt;/html&gt;';\n\n        SET @tableHTML += @Body;\n\n    END\n\n    /***********************************/\n    -- Tarea: Avance General - Supervisor\n    /***********************************/\n    BEGIN\n        INSERT INTO #TmpAvanceSupervisor\n          (\n            supervisor,\n            venta,\n            cuota,\n            avance,\n            cantpar,\n            cantacc,\n            cuotapar,\n            cuotaacc,\n            avancepar,\n            avanceacc,\n            rownumber,\n            costo,\n            montoAcc\n          )\n        SELECT t2.supervisor,\n               t2.venta,\n               t2.cuota,\n               t2.avance,\n               t2.cantpar,\n               t2.cantacc,\n               t2.cuotapar,\n               t2.cuotaacc,\n               t2.avancepar,\n               t2.avanceacc,\n               ROW_NUMBER() OVER(ORDER BY t2.avancepar ASC) AS rownumber,\n               t2.costo,\n               t2.montoAcc\n        FROM   (\n                   SELECT supervisor,\n                          IIF(venta &lt; 20, 0, venta) AS venta,\n                          IIF(cuota &lt; 20, 0, cuota) AS cuota,\n                          montoAcc,\n                          CASE \n                               WHEN venta &lt; 20 THEN 0\n                               ELSE CASE \n                                         WHEN cuota &lt; 20 THEN 100\n                                         ELSE venta * 100 / cuota\n                                    END\n                          END  AS avance,\n                          IIF(cantpar &lt; 1, 0, cantpar) AS cantpar,\n                          IIF(cantacc &lt; 1, 0, cantacc) AS cantacc,\n                          IIF(cuotapar &lt; 1, 0, cuotapar) AS cuotapar,\n                          IIF(cuotaacc &lt; 1, 0, cuotaacc) AS cuotaacc,\n                          CASE \n                               WHEN cantpar &lt; 1 THEN 0\n                               ELSE CASE \n                                         WHEN cuotapar &lt; 1 THEN 100\n                                         ELSE cantpar * 100 / cuotapar\n                                    END\n                          END  AS avancepar,\n                          CASE \n                               WHEN cantacc &lt; 1 THEN 0\n                               ELSE CASE \n                                         WHEN cuotaacc &lt; 1 THEN 100\n                                         ELSE cantacc * 100 / cuotaacc\n                                    END\n                          END  AS avanceacc,\n                          t1.costo\n                   FROM   (\n                              SELECT supervisor,\n                                     SUM(ISNULL(venta,0)) AS venta,\n                                     SUM(ISNULL(cuota,0)) AS cuota,\n                                     SUM(ISNULL(cantpar,0)) AS cantpar,\n                                     SUM(ISNULL(cantacc,0)) AS cantacc,\n                                     SUM(ISNULL(cuotapar,0)) AS cuotapar,\n                                     SUM(ISNULL(cuotaacc,0)) AS cuotaacc,\n                                     SUM(ISNULL(costo,0)) AS costo,\n                                     SUM(ISNULL(montoAcc,0)) AS montoAcc\n                              FROM   #Reportev2\n                                     --WHERE  supervisor NOT IN ('Nuevo','Juan Diego La Rosa')\n                              WHERE  supervisor NOT IN ('Nuevo')\n                              GROUP BY\n                                     supervisor\n                          )    AS t1\n               ) AS t2\n        GROUP BY\n               t2.supervisor,\n               t2.venta,\n               t2.cuota,\n               t2.avance,\n               t2.cantpar,\n               t2.cuotapar,\n               t2.cantacc,\n               t2.cuotaacc,\n               t2.avancepar,\n               t2.avanceacc,\n               t2.costo,\n               t2.montoAcc\n        ORDER BY\n               3\n\n        UPDATE t\n        SET    t.bgcolor = CASE \n                                WHEN avance &lt; 90 THEN '#FFE5F4' /* ROJO */\n                                ELSE CASE \n                                          WHEN avance &lt; 100 THEN '#FFBF00' /* AMBAR */\n                                          ELSE '#00FF40' /* VERDE */\n                                     END\n                           END\n        FROM   #TmpAvanceSupervisor AS t\n\n        UPDATE t SET    bgcolor = '#F78181'\n        FROM #TmpAvanceSupervisor AS t\n        WHERE t.margen &lt; 0.30;\n\n        UPDATE t SET t.margen2 = FORMAT(margen,'##.0%')\n        FROM #TmpAvanceSupervisor AS t\n\n        SET @tableHTML +=\n            N'&lt;H1&gt;' + /*IIF(@avancepar = '100', ' ',*/\n                '. Teniendo como avance de calzados ' + @avancepar + '% '\n            /*)*/ + IIF(\n                @avanceacc = '100',\n                ' ',\n                ' y avance de accessorios ' + @avanceacc + '% '\n            ) + '&lt;/H1&gt;' +\n            N'&lt;H2&gt;Resumen de Avance por Supervisor&lt;/H2&gt;';\n\n        SELECT @Body = '&lt;table class=\"tg\" style=\"undefined;table-layout: fixed; width: 800px\"&gt;' +\n\n                    N'&lt;colgroup&gt;' +\n                                N'&lt;col style=\"width:200px\"&gt;' +\n                                N'&lt;col style=\"width:60px\"&gt;' +\n                                N'&lt;col style=\"width:60px\"&gt;' +\n                                N'&lt;col style=\"width:60px\"&gt;' +\n                                N'&lt;col style=\"width:60px\"&gt;' +\n                                N'&lt;col style=\"width:60px\"&gt;' +\n                                N'&lt;col style=\"width:60px\"&gt;' +\n                                N'&lt;col style=\"width:60px\"&gt;' +\n                                N'&lt;col style=\"width:60px\"&gt;' +\n                    N'&lt;/colgroup&gt;' +\n\n                    N'&lt;tr&gt;'+\n                            N'&lt;td class=\"tg-grey\" &gt;Supervisor&lt;/td&gt;' +\n                            N'&lt;td class=\"tg-grey\" &gt;Venta - Soles&lt;/td&gt;' +\n                            N'&lt;td class=\"tg-grey\" &gt;VtaM\u00edn - Soles&lt;/td&gt;' +\n                            N'&lt;td class=\"tg-grey\" &gt;%Avance - Soles&lt;/td&gt;' +\n                            N'&lt;td class=\"tg-grey\" &gt;Venta - Pares&lt;/td&gt;' +\n                            N'&lt;td class=\"tg-grey\" &gt;VtaM\u00edn - Pares&lt;/td&gt;' +\n                            N'&lt;td class=\"tg-grey\" &gt;%Avance - Pares&lt;/td&gt;' +\n                            N'&lt;td class=\"tg-grey\" &gt;Acces&lt;/td&gt;' +\n                            N'&lt;td class=\"tg-grey\" &gt;AccVtaM\u00edn - Pares&lt;/td&gt;' +\n                            N'&lt;td class=\"tg-grey\" &gt;%Avance&lt;/td&gt;' +\n                            N'&lt;td class=\"tg-grey\" &gt;%Margen&lt;/td&gt;' +\n                    N'&lt;/tr&gt;'\n\n        /*\n            CREATE TABLE #TmpAvanceSupervisor\n            (\n                supervisor      VARCHAR(MAX),\n                venta           FLOAT,\n                cuota           FLOAT,\n                avance          FLOAT,\n                [cantpar]       INT NULL,\n                [cantacc]       INT NULL,\n                [cuotapar]      INT NULL,\n                [cuotaacc]      INT NULL,\n                [avancepar]     FLOAT NULL,\n                [avanceacc]     FLOAT NULL,\n                rownumber       TINYINT,\n                bgcolor         VARCHAR(10),\n                [costo]        FLOAT NULL,\n                [utilidad]     AS (venta -costo),\n                [margen]       AS ((venta -costo) / NULLIF(venta, 0)),\n                [margen2]      VARCHAR(20)\n            )\n        */\n        SELECT @Body = @Body + (\n                   SELECT \n                          --Supervisor\n                          [td/@bgcolor] = T1.[bgcolor],\n                          td = t1.[supervisor],\n                          '',\n\n                          --Venta - Soles\n                          [td/@align] = 'right',\n                          [td/@bgcolor] = T1.[bgcolor],\n                          td = FORMAT(t1.[venta], 'N0', 'es-pe'),\n                          '',\n\n                          --VtaM\u00edn - Soles\n                          [td/@align] = 'right',\n                          [td/@bgcolor] = T1.[bgcolor],\n                          td = FORMAT(t1.[cuota], 'N0', 'es-pe'),\n                          '',\n\n                          --%Avance - Soles\n                          [td/@align] = 'right',\n                          [td/@bgcolor] = T1.[bgcolor],\n                          td = FORMAT( ROUND(((t1.[venta] / nullif(t1.[cuota],0)) * 100), 0), 'N0', 'es-pe') + '%',\n                          '',\n\n                          --Venta - Pares\n                          [td/@align] = 'right',\n                          [td/@bgcolor] = T1.[bgcolor],\n                          td = FORMAT(t1.[cantpar], 'N0', 'es-pe'),\n                          '',                 \n\n                          --VtaM\u00edn - Pares\n                          [td/@align] = 'right',\n                          [td/@bgcolor] = T1.[bgcolor],\n                          td = FORMAT(t1.[cuotapar], 'N0', 'es-pe'),\n                          '',   \n\n                          --%Avance - Pares\n                          [td/@align] = 'right',\n                          [td/@bgcolor] = T1.[bgcolor],\n                          td = FORMAT(ROUND(t1.[avancepar], 0), 'N0', 'es-pe') + '%',\n                          '',\n\n                          --Acces\n                          [td/@align] = 'right',\n                          [td/@bgcolor] = T1.[bgcolor],\n                          td = FORMAT(t1.[cantacc], 'N0', 'es-pe'),\n                          '',\n\n                          --AccVtaM\u00edn - Pares\n                          [td/@align] = 'right',\n                          [td/@bgcolor] = T1.[bgcolor],\n                          td = FORMAT(t1.[cuotaacc], 'N0', 'es-pe'),\n                          '',\n\n                          --\n                          [td/@align] = 'right',\n                          [td/@bgcolor] = T1.[bgcolor],\n                          td = FORMAT(t1.[avanceacc], 'N0', 'es-pe') + '%',\n                          '',\n                          [td/@align] = 'right',\n                          [td/@bgcolor] = T1.[bgcolor],\n                          td = t1.[margen2],\n                          ''\n                   FROM   #TmpAvanceSupervisor AS t1 \n                   WHERE t1.supervisor NOT IN ('Ruth V\u00e1squez','W CierraPuertas','Jessica La Rosa','Antony Morales')\n                   --WHERE t1.cuota&gt;0\n                          FOR XML PATH('tr') ---- instead of for xml raw(tr), element\n               ) + '&lt;/table&gt;';\n        --SELECT * FROM #TmpAvanceSupervisor\n        SET @tableHTML += @Body +\n            N'&lt;/body&gt;&lt;/html&gt;';\n\n        --------------------------\n        -- Enviar Correo\n        --------------------------\n        --SET @email = N'Miguel Vergara &lt;miguel.vergara@footloose.pe&gt;;'\n        --   +N'Ra\u00fal Vergara &lt;raul.vergara@footloose.pe&gt;;'\n        --   +N'Valeria Vergara &lt;valeria.vergara@footloose.pe&gt;;'\n        --   +N'John Valle &lt;john.valle@footloose.pe&gt;;'\n        --   +N'Gabriela \u00d1ahuis &lt;gabriela.nahuis@footloose.pe&gt;;'\n        --   +N'Cesar Jimenez&lt;cesar.jimenez@footloose.pe&gt;;'\n        --   +N'Erick Loarte&lt;erick.loarte@footloose.pe&gt;;'\n        --   +N'Maria Sevillano&lt;analista.comercial@footloose.pe&gt;;'\n        --   +N'Ruth Vasquez &lt;ruth.vasquez@footloose.pe&gt;;'\n        --   +N'Muriel Catacora &lt;muriel.catacora@footloose.pe&gt;;'\n        --   +N'Virginia Vergara &lt;virginia.vergara@footloose.pe&gt;;'\n        --   +N'Irene Aquino &lt;irene.aquino@footloose.pe&gt;;'\n        --   +N'Orlando C\u00f3rdova &lt;orlando.cordova@footloose.pe&gt;;'\n        --   +N'Anderson Naveda &lt;anderson.naveda@footloose.pe&gt;;'\n        --   +N'Magda Vilchez &lt;magda.vilchez@footloose.pe&gt;;'\n        --   +N'Isabel Yovera &lt;isabel.yovera@footloose.pe&gt;;'\n        --   +N'Tesorer\u00eda &lt;tesoreria@footloose.pe&gt;;'\n        --   +N'Nillmer Capacyachi &lt;nillmer.capacyachi@footloose.pe&gt;;'\n        --   +N'Alexander R\u00edos &lt;alexander.rios@footloose.pe&gt;;'\n        --   +N'Jaritza Yanayaco &lt;jaritza.yanayaco@footloose.pe&gt;;'\n        --   +N'Cristian Lachira &lt;cristian.lachira@footloose.pe&gt;;'\n        --   +N'Elvis Orbezo &lt;elvis.orbezo@footloose.pe&gt;;'\n        --   +N'Analista ECommerce &lt;analista.ecommerce@footloose.pe&gt;;'\n        --   +N'Felipe Flores &lt;felipe.flores@footloose.pe&gt;;'   \n        --   +N'Aldo Barco &lt;aldo.barco@footloose.pe&gt;;'   \n        --   +N'Walter Rimac &lt;walter.rimac@footloose.pe&gt;;'   \n        --   +N'Jannoh Aquije &lt;jannoh.aquije@footloose.pe&gt;;'\n\n        --EXEC msdb.dbo.sp_send_dbmail \n        --     @profile_name='DBA_Passarela'\n        --    ,@recipients= 'ach.info@footloose.pe' --@email\n        --  --,@recipients= 'alertas.ti@footloose.pe'\n        --    ,@subject=@asunto\n        --    ,@body=@tableHTML\n        --    ,@blind_copy_recipients='&lt;rony.janampa@footloose.pe&gt;;'\n        --    ,@body_format='HTML';\n\n        SELECT @tableHTML AS [@tableHTML];\n\n    END\n\n    /**********************************/\n    -- Proceso: Avance de Venta - Tienda\n    /**********************************/\n    BEGIN\n        SET @asunto = ('ACH02 Avance de ventas m\u00ednimas hoy ' + @fecha) + ' ...por tienda (SIN IGV)'\n        INSERT INTO #TmpVentaCuotas\n          (\n            canal,\n            subcanal,\n            medioventa,\n            total,\n            cuota,\n            avance,\n            cantpar,\n            cantacc,\n            cuotapar,\n            cuotaacc,\n            avancepar,\n            avanceacc,\n            ntran,\n            costo\n          )\n        SELECT x.canal,x.subcanal,x.medioventa,\n               SUM(x.total)     AS total,\n               SUM(x.cuota)     AS cuota,\n               CAST(\n                   (\n                       (\n                           CASE \n                                WHEN SUM(x.total) = 0 THEN 0\n                                ELSE SUM(x.total) / (IIF(SUM(x.cuota) &lt;= 1, SUM(x.total), SUM(x.cuota))) * 100\n                           END\n                       )\n                   )\n                   AS NUMERIC(18, 2)\n               )                AS avance,\n               SUM(x.cantpar)   AS cantpar,\n               SUM(x.cantacc)   AS cantacc,\n               SUM(x.cuotapar)  AS cuotapar,\n               SUM(x.cuotaacc)  AS cuotaacc,\n               CAST(\n                   CASE \n                        WHEN SUM(x.cantpar) &lt; 1 THEN 0\n                        ELSE CASE \n                                  WHEN SUM(x.cuotapar) &lt; 1 THEN 100\n                                  ELSE SUM(x.cantpar) * 100 / SUM(x.cuotapar)\n                             END\n                   END AS DECIMAL(8, 2)\n               )                AS avancepar,\n               CAST(\n                   CASE \n                        WHEN SUM(x.cantacc) &lt; 1 THEN 0\n                        ELSE CASE \n                                  WHEN SUM(x.cuotaacc) &lt; 1 THEN 100\n                                  ELSE SUM(x.cantacc) * 100 / SUM(x.cuotaacc)\n                             END\n                   END AS DECIMAL(8, 2)\n               )                AS avancepar,\n               SUM(x.ntran)     AS ntran,\n               SUM(x.costo) AS costo\n        FROM   (\n                   SELECT v.canal,\n                          v.subcanal,\n                          v.medioventa,\n                          v.venta  AS total,\n                          0      AS cuota,\n                          v.cantpar,\n                          v.cantacc,\n                          0      AS cuotapar,\n                          0      AS cuotaacc,\n                          v.ntran,\n                          v.costo\n                   FROM   #Reportev2 v\n                          INNER JOIN #tmpSupervisor01 su\n                               ON  su.canal = v.canal\n                               AND su.subcanal = v.subcanal\n                               AND su.medioventa = v.medioventa\n                   WHERE  v.fecha = @fecha\n\n                   UNION ALL\n\n                   SELECT p.canal,\n                          p.subcanal,\n                          p.medioventa,\n                          0               AS total,\n                          monto           AS cuota,\n                          0               AS cantpar,\n                          0               AS cantacc,\n                          Par             AS cuotapar,\n                          Acc             AS cuotaacc,\n                          0               AS ntran,\n                          0 AS costo\n                   FROM   #Tproyecciones  AS p\n                   WHERE  fecha = @fecha2\n               )                   x\n        GROUP BY\n               canal,subcanal,medioventa;\n\n        ---------------------------\n        -- Obtener \u00faltima trasacci\u00f3n - Tienda\n        ---------------------------\n        INSERT INTO #TmpVentaCuota\n          (\n            canal,\n            subcanal,\n            medioventa,\n            total,\n            cuota,\n            avance,\n            cantpar,\n            cantacc,\n            cuotapar,\n            cuotaacc,\n            avancepar,\n            avanceacc,\n            hora,\n            NTRAN,\n            TRAF_TOTAL,\n            TKAVG,\n            RATIO_CONV,\n            costo\n          )\n        SELECT ven.canal, ven.subcanal, ven.medioventa,\n               IIF(ISNULL(ven.total,0) &lt; 20, 0, ven.total) AS total,\n               IIF(ISNULL(ven.cuota,0) &lt; 20, 0, ven.cuota) AS cuota,\n               ISNULL(ven.avance,0)      AS avance,\n               IIF(ISNULL(ven.cantpar,0) &lt; 1, 0, ven.cantpar) AS cantpar,\n               IIF(ISNULL(ven.cantacc,0) &lt; 1, 0, ven.cantacc) AS cantacc,\n               IIF(ISNULL(ven.cuotapar,0) &lt; 1, 0, ven.cuotapar) AS cuotapar,\n               IIF(ISNULL(ven.cuotaacc,0) &lt; 1, 0, ven.cuotaacc) AS cuotaacc,\n               ISNULL(ven.avancepar,0)          AS avancepar,\n               ISNULL(ven.avanceacc,0)          AS avanceacc,\n               (\n                   SELECT TOP 1      gloa_3\n                   FROM   servnprod.bd_passarela.dbo.fag0300 fact WITH (NOLOCK)\n                   WHERE  fact.tienda_3 = ven.medioventa\n                          AND fact.fcom_3 = @fecha\n                   ORDER BY\n                          gloa_3     DESC\n               )                      AS hora,\n               CASE \n                    WHEN pf.NTRAN IS NULL THEN ven.[ntran]\n                    ELSE pf.NTRAN\n               END                    AS NTRAN,\n               pf.TRAF_TOTAL,\n               pf.TKAVG,\n               pf.RATIO_CONV,\n               ven.costo\n        FROM  #TmpVentaCuotas ven\n               LEFT JOIN poken_fecha  AS pf\n                    ON  pf.tienda = ven.medioventa\n                    AND pf.FECHA = @fechhoy\n        --WHERE ti.tienda NOT IN ('D6','E9')    \n\n        UPDATE #TmpVentaCuota\n        SET    bgcolor = CASE \n                              WHEN avancepar &lt; 90 THEN '#FFE5F4' /*rojo*/\n                              ELSE CASE \n                                        WHEN avancepar &lt; 100 THEN '#FFBF00' /*ambar*/\n                                        ELSE '#00FF40' /*verde*/\n                                   END\n                         END;\n\n        UPDATE t SET    bgcolor = '#F78181'\n        FROM #TmpVentaCuota AS t\n        WHERE t.margen &lt; 0.30;\n\n        UPDATE t SET t.margen2 = FORMAT(margen,'##.0%')\n        FROM #TmpVentaCuota AS t\n\n        -- Tarea: Lista de Supervisores\n        INSERT INTO #tmpSupervisor\n          (\n            supervisor,\n            rownumber\n          )\n        SELECT DISTINCT supervisor,\n               rownumber\n        FROM   #TmpAvanceSupervisor\n        --WHERE supervisor NOT IN ('Juan Diego La Rosa')\n\n        SET @rownumber = (\n                SELECT MIN(rownumber)\n                FROM   #tmpSupervisor\n            )\n\n        ---------------------------\n        -- Presentaci\u00f3n de correo - Avance Supervisor\n        ---------------------------\n        SET @Body = '';\n\n--      SET @tableHTML = \n--          N'  &lt;html&gt;\n--                  &lt;head&gt;\n--                      &lt;style type=\"text/css\"&gt;\n--                          h1 {color:red;}\n--                          p {color:blue;}\n--                          table, td, th {border: 1px solid #2C76DF;}\n--                          table {border-collapse: collapse;}\n--                          table th {background-color: #2C76DF;color: white;}\n--                          tr:nth-child(even) {background-color: #f2f2f2}\n--                          table tr:nth-child(1) {text-align: left;}\n--                          tr td:nth-child(n+3) {text-align: right;}\n--                      &lt;/style&gt;\n--                  &lt;/head&gt;\n--                  &lt;body&gt;'\n\n        SET @tableHTML = N'&lt;html&gt;'+\n                         N'&lt;head&gt;'+\n                             N'&lt;style type=\"text/css\"&gt;'+\n                                 N'.tg  {border-collapse:collapse;border-spacing:0;height:10px;}'+\n                                 --N'table, td, th {border: 1px solid #3f4449;}'+\n                                 --N'table th {background-color: #2C76DF;color: white;}'+\n                                 N'.tg td{font-family:Arial, sans-serif;font-size:14px;padding:2px 0px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:#2C76DF;}'+\n                                 N'.tg th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:2px 0px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:#2C76DF;}'+\n                                 N'.tg .tg-f7xs{font-weight:bold;background-color:#ed1c24;color:#ffffff;border-color:#ed1c24;text-align:center;vertical-align:top}'+\n                                 N'.tg .tg-d4sb{background-color:#f79646;border-color:#f79646;text-align:center;vertical-align:top}'+\n                                 N'.tg .tg-f60r{background-color:#e26b0a;border-color:#e26b0a;text-align:center;vertical-align:top}'+\n                                 N'.tg .tg-ubmm{background-color:#ffc7ce;color:#9c0006;border-color:#c0c0c0;text-align:center;vertical-align:top}'+\n                                 N'.tg .tg-9m3w{font-weight:bold;background-color:#f79646;border-color:#f79646;text-align:center;vertical-align:top}'+\n                                 N'.tg .tg-pksw{font-weight:bold;background-color:#f79646;color:#ffffff;border-color:#f79646;text-align:center;vertical-align:top}'+\n                                 N'.tg .tg-pesd{border-color:#c0c0c0;vertical-align:top}'+\n                                 N'.tg .tg-fkia{font-weight:bold;background-color:#FFDD00;color:#000000;border-color:#FFDD00;text-align:center;vertical-align:top}'+\n                                 N'.tg .tg-fzdr{border-color:#c0c0c0;text-align:center;vertical-align:top}'+\n                                 N'.tg .tg-o0c0{background-color:#ffeb9c;color:#cf7e00;border-color:#c0c0c0;text-align:center;vertical-align:top}'+\n                                 N'.tg .tg-rfq8{background-color:#c6efce;color:#226c49;border-color:#c0c0c0;text-align:center;vertical-align:top}'+\n                                 N'.tg .tg-7l0w{font-weight:bold;background-color:#e26b0a;color:#ffffff;border-color:#e26b0a;text-align:center;vertical-align:top}'+\n                                 N'.tg .tg-ecu-blue{font-weight:bold;background-color:#034ea2;color:#ffffff;border-color:#034ea2;text-align:center;vertical-align:top}'+\n                                 N'.tg .tg-grey{font-weight:bold;background-color:#3f4449;color:#ffffff;border-color:#034ea2;text-align:center;vertical-align:top}'+\n                             N'&lt;/style&gt;'+\n                         N'&lt;/head&gt;'+\n                         N'&lt;body&gt;';\n\n        SET @rownumber = (\n            SELECT COUNT(DISTINCT supervisor)\n            FROM   #TmpVentaCuota AS T1\n                    INNER JOIN #tmpSupervisor01 AS s\n                        ON  s.canal = T1.canal\n                            AND s.subcanal = T1.subcanal\n                            AND s.medioventa = T1.medioventa\n                                --ON  S.tienda = T1.tienda\n            WHERE  t1.[cuota] &lt;&gt; 0\n                    AND NOT EXISTS (SELECT 1 FROM vw_tiendag AS vt WHERE vt.tiendag=T1.medioventa AND vt.estado='Cerr')\n        )\n\n\n        WHILE @rownumber &gt; 0\n        BEGIN\n            SELECT @supervisor = supervisor\n            FROM   #tmpSupervisor\n            WHERE  rownumber = @rownumber\n\n\n            IF NOT EXISTS(\n                SELECT TOP 1 1 \n                FROM   #TmpVentaCuota AS T1\n                    INNER JOIN #tmpSupervisor01 AS s\n                        ON  s.canal = T1.canal\n                            AND s.subcanal = T1.subcanal\n                            AND s.medioventa = T1.medioventa\n                                --ON  S.tienda = T1.tienda\n                WHERE  S.supervisor = @supervisor AND t1.[cuota] &lt;&gt; 0\n                        --AND T1.cuota&gt;0\n                        AND NOT EXISTS (SELECT 1 FROM vw_tiendag AS vt WHERE vt.tiendag=T1.medioventa AND vt.estado='Cerr')\n            )\n            BEGIN\n                SET @rownumber = @rownumber - 1\n                CONTINUE\n            END\n\n            SET @montosup = (\n                    SELECT SUM(total)\n                    FROM   #TmpVentaCuota v\n                           INNER JOIN #tmpSupervisor01 su\n                                ON  su.canal = v.canal\n                                AND su.subcanal = v.subcanal\n                                AND su.medioventa = v.medioventa\n                    WHERE  su.supervisor = @supervisor\n                )\n\n            SET @cuotasup = (\n                    SELECT SUM(v.cuota)\n                    FROM   #TmpVentaCuota v\n                           INNER JOIN #tmpSupervisor01 su\n                                ON  su.canal = v.canal\n                                AND su.subcanal = v.subcanal\n                                AND su.medioventa = v.medioventa\n                    WHERE  su.supervisor = @supervisor)\n\n            SET @avanceparsup = (\n                    SELECT CASE \n                                WHEN SUM(cantpar) &lt; 1 THEN 0\n                                ELSE CASE \n                                          WHEN ISNULL(SUM(cuotapar), 0) = 0 THEN 100\n                                          ELSE SUM(cantpar) * 100 / SUM(cuotapar)\n                                     END\n                           END\n                    FROM   #TmpVentaCuota v\n                           INNER JOIN #tmpSupervisor01 su\n                                ON  su.canal = v.canal\n                                AND su.subcanal = v.subcanal\n                                AND su.medioventa = v.medioventa\n                    WHERE  su.supervisor = @supervisor\n                )\n\n            SET @avanceaccsup = (\n                    SELECT CASE \n                                WHEN SUM(cantacc) &lt; 1 THEN 0\n                                ELSE CASE \n                                          WHEN ISNULL(SUM(cuotaacc), 0) = 0 THEN 100\n                                          ELSE SUM(cantacc) * 100 / SUM(cuotaacc)\n                                     END\n                           END\n                    FROM   #TmpVentaCuota v\n                           INNER JOIN #tmpSupervisor01 su\n                                ON  su.canal = v.canal\n                                AND su.subcanal = v.subcanal\n                                AND su.medioventa = v.medioventa\n                    WHERE  su.supervisor = @supervisor\n                )\n\n            SET @cuotadetsup = CASE \n                                    WHEN ISNULL(@cuotasup, 0) &lt; 20 THEN 100\n                                    ELSE ((@montosup / @cuotasup) * 100)\n                               END \n\n            --SELECT @montosup [@montosup],@cuotasup [@cuotasup], @avanceparsup [@avanceparsup],@avanceaccsup [@avanceaccsup], @cuotadetsup [@cuotadetsup];\n\n            IF (ISNULL(@montosup, 0)&gt;0)\n            BEGIN\n                SET @tableHTML+=\n                    --N'&lt;H2&gt;Avance de tiendas del Supervisor: '+@supervisor+ IIF(@cuotadetsup=100,'',' teniendo como avance: '+ cast(@cuotadetsup as varchar)+'%')+'&lt;/H2&gt;'+\n                    N'&lt;H2&gt;Avance de tiendas del Supervisor: '+@supervisor+' con venta de '+CAST(FORMAT(@montosup ,'N0' ,'es-pe') AS VARCHAR)\n                   +IIF(\n                        @avanceparsup=100\n                       ,''\n                       ,', teniendo como avance de calzados: '+CAST(FORMAT(@avanceparsup ,'N0' ,'es-pe') AS VARCHAR) \n                       +'%'+\n                        ' y avance de accesorios: '+CAST(FORMAT(@avanceaccsup ,'N0' ,'es-pe') AS VARCHAR)+'%'\n                    )+'&lt;/H2&gt;' \n\n                SET @tableHTML+=\n                    --N'&lt;table position=\"\" center=\"\" border=\"1\" cellpadding=\"0\" cellspacing=\"0\"&gt;'+\n                    N'&lt;table class=\"tg\" style=\"undefined;table-layout: fixed; width: 1000px\"&gt;'+\n\n                    N'&lt;colgroup&gt;' +\n                    N'&lt;col style=\"width:100px\"&gt;' +\n                    N'&lt;col style=\"width:60px\"&gt;' +\n                    N'&lt;col style=\"width:50px\"&gt;' +\n                    N'&lt;col style=\"width:60px\"&gt;' +\n                    N'&lt;col style=\"width:60px\"&gt;' +\n                    N'&lt;col style=\"width:50px\"&gt;' +\n                    N'&lt;col style=\"width:60px\"&gt;' +\n                    N'&lt;col style=\"width:60px\"&gt;' +\n                    N'&lt;col style=\"width:80px\"&gt;' +\n                    N'&lt;col style=\"width:50px\"&gt;' +\n                    N'&lt;col style=\"width:50px\"&gt;' +\n                    N'&lt;col style=\"width:50px\"&gt;' +\n                    N'&lt;col style=\"width:50px\"&gt;' +\n                    N'&lt;col style=\"width:80px\"&gt;' +\n                    N'&lt;/colgroup&gt;' +\n\n                    N'&lt;tr&gt;'+\n                    N'&lt;td class=\"tg-grey\"&gt;Medio Venta&lt;/td&gt;'+\n                    N'&lt;td class=\"tg-grey\"&gt;Venta - Soles&lt;/td&gt;'+\n                    N'&lt;td class=\"tg-grey\"&gt;VtaM\u00edn - Soles&lt;/td&gt;'+\n                    N'&lt;td class=\"tg-grey\"&gt;%Avance - Soles&lt;/td&gt;'+\n                    N'&lt;td class=\"tg-grey\"&gt;Venta - Pares&lt;/td&gt;'+\n                    N'&lt;td class=\"tg-grey\"&gt;VtaM\u00edn - Pares&lt;/td&gt;'+\n                    N'&lt;td class=\"tg-grey\"&gt;%Avance - Pares&lt;/td&gt;'+\n                    N'&lt;td class=\"tg-grey\"&gt;Acces&lt;/td&gt;'+\n                    N'&lt;td class=\"tg-grey\"&gt;VtaM\u00edn&lt;/td&gt;'+\n                    N'&lt;td class=\"tg-grey\"&gt;%Avance&lt;/td&gt;'+\n                    N'&lt;td class=\"tg-grey\"&gt;%Margen&lt;/td&gt;'+\n                    N'&lt;td class=\"tg-grey\"&gt;Transac&lt;/td&gt;'+\n                    N'&lt;td class=\"tg-grey\"&gt;Personas&lt;/td&gt;'+\n                    N'&lt;td class=\"tg-grey\"&gt;TkProm&lt;/td&gt;'+\n                    N'&lt;td class=\"tg-grey\"&gt;RatConv&lt;/td&gt;'+\n                    N'&lt;td class=\"tg-grey\"&gt;Ultima transac.&lt;/td&gt;'+\n                    N'&lt;/tr&gt;'+\n                    CAST(\n                        (\n                            SELECT [td/@align] = 'center'\n                                  ,[td/@bgcolor] = T1.[bgcolor]\n                                  ,td = T1.[medioventa]\n                                  ,N''\n\n                                  --Venta - Soles\n                                  ,[td/@align] = 'right'\n                                  ,[td/@bgcolor] = T1.[bgcolor]\n                                  ,td = FORMAT(T1.[total] ,'N0' ,'es-pe')\n                                  ,''\n\n                                  --VtaM\u00edn - Soles\n                                  ,[td/@align] = 'right'\n                                  ,[td/@bgcolor] = T1.[bgcolor]\n                                  ,td = FORMAT(T1.cuota ,'N0' ,'es-pe')\n                                  ,''\n\n                                  --%Avance - Soles\n                                  ,[td/@align] = 'right'\n                                  ,[td/@bgcolor] = T1.[bgcolor]\n                                  ,td = FORMAT( ROUND(((t1.[total] / nullif(t1.[cuota],0)) * 100), 0), 'N0', 'es-pe') + '%'\n                                  ,''\n\n                                  --Venta - Pares\n                                  ,[td/@align] = 'right'\n                                  ,[td/@bgcolor] = T1.[bgcolor]\n                                  ,td = FORMAT(T1.[cantpar] ,'N0' ,'es-pe')\n                                  ,''\n\n                                  --VtaM\u00edn - Pares\n                                  ,[td/@align] = 'right'\n                                  ,[td/@bgcolor] = T1.[bgcolor]\n                                  ,td = FORMAT(T1.[cuotapar] ,'N0' ,'es-pe')\n                                  ,''\n\n\n                                  ,[td/@align] = 'right'\n                                  ,[td/@bgcolor] = T1.[bgcolor]\n                                  ,td = IIF(\n                                       T1.[avancepar]=100\n                                      ,'100%'\n                                      ,FORMAT(T1.[avancepar] ,'N0' ,'es-pe')+'%'\n                                   )\n                                  ,''\n                                  ,[td/@align] = 'right'\n                                  ,[td/@bgcolor] = T1.[bgcolor]\n                                  ,td = FORMAT(T1.[cantacc] ,'N0' ,'es-pe')\n                                  ,''\n                                  ,[td/@align] = 'right'\n                                  ,[td/@bgcolor] = T1.[bgcolor]\n                                  ,td = FORMAT(T1.[cuotaacc] ,'N0' ,'es-pe')\n                                  ,''\n                                  ,[td/@align] = 'right'\n                                  ,[td/@bgcolor] = T1.[bgcolor]\n                                  ,td = IIF(\n                                       T1.[avanceacc]=100\n                                      ,'100%'\n                                      ,FORMAT(T1.[avanceacc] ,'N0' ,'es-pe')+'%'\n                                   )\n                                  ,''\n                                  ,[td/@align] = 'right'\n                                  ,[td/@bgcolor] = T1.[bgcolor]\n                                  ,td = T1.[margen2]\n                                  ,''\n                                  ,[td/@align] = 'right'\n                                  ,[td/@bgcolor] = T1.[bgcolor]\n                                  ,td = FORMAT(T1.[NTRAN] ,'N0' ,'es-pe')\n                                  ,''\n                                  ,[td/@align] = 'right'\n                                  ,[td/@bgcolor] = T1.[bgcolor]\n                                  ,td = FORMAT(T1.[TRAF_TOTAL] ,'N0' ,'es-pe')\n                                  ,''\n                                  ,[td/@align] = 'right'\n                                  ,[td/@bgcolor] = T1.[bgcolor]\n                                  ,td = FORMAT(T1.[TKAVG] ,'N2' ,'es-pe')\n                                  ,''\n                                  ,[td/@align] = 'right'\n                                  ,[td/@bgcolor] = T1.[bgcolor]\n                                  ,td = FORMAT(T1.[RATIO_CONV] ,'N2' ,'es-pe')+'%'\n                                  ,''\n                                  ,[td/@align] = 'center'\n                                  ,[td/@bgcolor] = T1.[bgcolor]\n                                  ,td = IIF(T1.hora IS NULL ,' ' ,RTRIM(T1.hora))\n                                  ,''\n                            FROM   #TmpVentaCuota AS T1\n                                   INNER JOIN #tmpSupervisor01 AS s\n                                        ON  s.canal = T1.canal\n                                            AND s.subcanal = T1.subcanal\n                                            AND s.medioventa = T1.medioventa\n                                                --ON  S.tienda = T1.tienda\n                            WHERE  S.supervisor = @supervisor AND t1.[cuota] &lt;&gt; 0\n                                   --AND T1.cuota&gt;0\n                                   AND NOT EXISTS (SELECT 1 FROM vw_tiendag AS vt WHERE vt.tiendag=T1.medioventa AND vt.estado='Cerr')\n                            ORDER BY\n                                   T1.[avancepar] ASC\n                                   FOR XML PATH('tr')\n                                  ,TYPE\n                        ) AS VARCHAR(MAX)\n                    )+\n                    N'          &lt;/table&gt;'\n            END         \n\n            SET @rownumber = @rownumber - 1\n        END\n\n        SET @tableHTML +=\n            N'      &lt;/body&gt;\n                    &lt;/html&gt;'\n\n        ---------------------------\n        -- Enviar Correo\n        ---------------------------\n--      SET @email = N'Miguel Vergara &lt;miguel.vergara@footloose.pe&gt;;'\n--         +N'Ra\u00fal Vergara &lt;raul.vergara@footloose.pe&gt;;'\n--         +N'Valeria Vergara &lt;valeria.vergara@footloose.pe&gt;;'\n--         +N'John Valle &lt;john.valle@footloose.pe&gt;;'\n--         +N'Gabriela \u00d1ahuis &lt;gabriela.nahuis@footloose.pe&gt;;'\n--         +N'Cesar Jimenez&lt;cesar.jimenez@footloose.pe&gt;;'\n--         +N'Erick Loarte&lt;erick.loarte@footloose.pe&gt;;'\n--         +N'Maria Sevillano&lt;analista.comercial@footloose.pe&gt;;'\n--         +N'Ruth Vasquez &lt;ruth.vasquez@footloose.pe&gt;;'\n--         +N'Orlando C\u00f3rdova &lt;orlando.cordova@footloose.pe&gt;;'\n--         +N'Anderson Naveda &lt;anderson.naveda@footloose.pe&gt;;'\n--         +N'Irene Aquino &lt;irene.aquino@footloose.pe&gt;;'\n--         +N'Magda Vilchez &lt;magda.vilchez@footloose.pe&gt;;'\n--         +N'Isabel Yovera &lt;isabel.yovera@footloose.pe&gt;;'\n--         +N'Tesorer\u00eda &lt;tesoreria@footloose.pe&gt;;'\n--         +N'Alexander R\u00edos &lt;alexander.rios@footloose.pe&gt;;'\n--         +N'Jaritza Yanayaco &lt;jaritza.yanayaco@footloose.pe&gt;;'\n--         +N'Elvis Orbezo &lt;elvis.orbezo@footloose.pe&gt;;'\n--         +N'Analista ECommerce &lt;analista.ecommerce@footloose.pe&gt;;'\n--         +N'Felipe Flores &lt;felipe.flores@footloose.pe&gt;;'   \n--         +N'Aldo Barco &lt;aldo.barco@footloose.pe&gt;;'   \n--         +N'Walter Rimac &lt;walter.rimac@footloose.pe&gt;;'   \n--         +N'Jannoh Aquije &lt;jannoh.aquije@footloose.pe&gt;;'\n\n        --EXEC msdb.dbo.sp_send_dbmail \n        --     @profile_name='DBA_Passarela'\n        --    ,@recipients= 'ach.info@footloose.pe' --@email\n        --  --,@recipients= 'alertas.ti@footloose.pe@footloose.pe' --@email\n        --    ,@subject=@asunto\n        --    ,@body=@tableHTML\n        --    ,@blind_copy_recipients='&lt;rony.janampa@footloose.pe&gt;;'\n        --    ,@body_format='HTML';\n\n        SELECT @tableHTML AS [@tableHTML];\n    END\nreturn\n    /************************************/\n    -- Tarea: Avance de Venta - Supervisor\n    /************************************/\n    BEGIN\n        DECLARE @rownumbersup         INT = NULL,\n                @email_supervisor     VARCHAR(200) = NULL,\n                @rownumbermaxsup      INT = NULL\n\n        INSERT INTO #TmpAvanceSupervisores\n          (\n            supervisor,\n            email,\n            avance,\n            rownumber\n          )\n        SELECT t2.supervisor,\n               t2.email,\n               t2.avance,\n               ROW_NUMBER() OVER(ORDER BY avance ASC) AS rownumber\n        FROM   (\n                   SELECT t1.supervisor,\n                          t1.email,\n                          CASE \n                               WHEN t1.venta &lt; 20 THEN 0\n                               ELSE CASE \n                                         WHEN t1.cuota &lt; 5 THEN 100\n                                         ELSE t1.venta * 100 / t1.cuota\n                                    END\n                          END  AS avance\n                   FROM   (\n                              SELECT sup.supervisor,\n                                     ISNULL(sup.email, '') AS email,\n                                     SUM(ISNULL(rep.venta,0)) AS venta,\n                                     SUM(ISNULL(rep.cuota,0)) AS cuota\n                              FROM   #Reportev2 rep\n                                    INNER JOIN #tmpSupervisor01 sup ON sup.canal = rep.canal AND sup.subcanal = rep.subcanal AND sup.medioventa = rep.medioventa\n                              WHERE  ISNULL(sup.email, '') != ''\n                              GROUP BY\n                                     sup.supervisor,\n                                     sup.email\n                          )    AS t1\n               ) AS t2\n\n        /*****************************/\n        -- Tarea: Lista de Supervisores\n        /*****************************/\n        INSERT INTO #tmpSupervisores\n          (\n            supervisor,\n            rownumber,\n            email\n          )\n        SELECT DISTINCT supervisor,\n               rownumber,\n               email\n        FROM   #TmpAvanceSupervisores\n\n        SET @rownumber = (\n                SELECT MIN(rownumber)\n                FROM   #tmpSupervisores\n            )\n\n        SET @rownumbersup = (\n                SELECT MIN(rownumber)\n                FROM   #tmpSupervisores\n            )\n\n        SET @rownumbermaxsup = (\n                SELECT MAX(rownumber)\n                FROM   #tmpSupervisores\n            )\n\n        SET @rownumbersup = 0\n\n        WHILE @rownumbersup &lt;= @rownumbermaxsup\n        BEGIN\n            SET @tableHTMLSup = \n                N'  &lt;html&gt;\n                &lt;head&gt;\n                    &lt;style type=\"text/css\"&gt;\n                        h1 {color:red;}\n                        p {color:blue;}\n                        table, td, th {border: 1px solid #2C76DF;}\n                        table {border-collapse: collapse;}\n                        table th {background-color: #2C76DF;color: white;}\n                        tr:nth-child(even) {background-color: #f2f2f2}\n                        table tr:nth-child(1) {text-align: left;}\n                        tr td:nth-child(n+3) {text-align: right;}\n                    &lt;/style&gt;\n                &lt;/head&gt;\n                &lt;body&gt;'\n\n            /*************************************/\n            -- Tarea: Venta, Cuota, Avance - Tienda\n            /*************************************/\n            SET @rownumbersup = @rownumbersup + 1\n            SELECT @supervisor = supervisor,\n                   @email_supervisor     = email\n            FROM   #tmpSupervisores\n            WHERE  rownumber             = @rownumbersup\n\n            SET @montosup = (\n                    SELECT ISNULL(SUM(total), '0')\n                    FROM   #TmpVentaCuota v\n                           INNER JOIN #tmpSupervisor01 su ON su.canal = v.canal AND su.subcanal = v.subcanal AND su.medioventa = v.medioventa\n                    WHERE  su.supervisor = @supervisor\n                )\n\n            SET @cuotasup = (\n                    SELECT ISNULL(SUM(cuota), '1')\n                    FROM   #TmpVentaCuota v\n                           INNER JOIN #tmpSupervisor01 su ON su.canal = v.canal AND su.subcanal = v.subcanal AND su.medioventa = v.medioventa\n                    WHERE  su.supervisor = @supervisor\n                )\n\n            SET @cuotadetsup = CASE \n                                    WHEN @montosup &lt; 20 THEN 0\n                                    ELSE CASE \n                                              WHEN @cuotasup &lt; 5 THEN 100\n                                              ELSE (@montosup / @cuotasup) * 100\n                                         END\n                               END\n\n            SET @avanceparsup = (\n                    SELECT CASE \n                                WHEN SUM(cantpar) &lt; 1 THEN 0\n                                ELSE CASE \n                                          WHEN ISNULL(SUM(cuotapar), 0) = 0 THEN 100\n                                          ELSE SUM(cantpar) * 100 / SUM(cuotapar)\n                                     END\n                           END\n                    FROM   #TmpVentaCuota v\n                           INNER JOIN #tmpSupervisor01 su ON su.canal = v.canal AND su.subcanal = v.subcanal AND su.medioventa = v.medioventa\n                    WHERE  su.supervisor = @supervisor\n                )\n\n            SET @avanceaccsup = (\n                    SELECT CASE \n                                WHEN SUM(cantacc) &lt; 1 THEN 0\n                                ELSE CASE \n                                          WHEN ISNULL(SUM(cuotaacc), 0) = 0 THEN 100\n                                          ELSE SUM(cantacc) * 100 / SUM(cuotaacc)\n                                     END\n                           END\n                    FROM   #TmpVentaCuota v\n                           INNER JOIN #tmpSupervisor01 su ON su.canal = v.canal AND su.subcanal = v.subcanal AND su.medioventa = v.medioventa\n                    WHERE  su.supervisor = @supervisor\n                )\n\n            SET @tableHTMLSup +=\n                --N'&lt;H2&gt;Avance de tiendas del Supervisor: '+@supervisor+ ' con venta de '+cast(@montosup AS VARCHAR)+IIF(@avanceparsup=100,'',', teniendo como avance de calzados: '+ cast(@avanceparsup as varchar)+'%' + ' y avance de accesorios: '+ cast(@avanceaccsup as varchar)+'%')+'&lt;/H2&gt;'+\n                N'&lt;H2&gt;Avance de tiendas del Supervisor: ' + @supervisor + ' con venta de ' + CAST(@montosup AS VARCHAR) \n                +\n                '&lt;/H2&gt;' +\n                N'&lt;table position=\"\" center=\"\" border=\"1\" cellpadding=\"0\" cellspacing=\"0\"&gt;' +\n                N'&lt;tr&gt;' +\n                N'&lt;td width=50px style=\"font-weight:bold; text-align:center; background-color:#E6E6FA\"&gt;Medio Venta&lt;/td&gt;' +\n                N'&lt;td width=60px style=\"font-weight:bold; text-align:right; background-color:#E6E6FA\"&gt;Monto&lt;/td&gt;' +\n                N'&lt;td width=60px style=\"font-weight:bold; text-align:right; background-color:#E6E6FA\"&gt;Pares&lt;/td&gt;' +\n                N'&lt;td width=60px style=\"font-weight:bold; text-align:right; background-color:#E6E6FA\"&gt;VtaM\u00edn&lt;/td&gt;' +\n                N'&lt;td width=60px style=\"font-weight:bold; text-align:right; background-color:#E6E6FA\"&gt;%Avance&lt;/td&gt;' +\n                N'&lt;td width=50px style=\"font-weight:bold; text-align:right; background-color:#E6E6FA\"&gt;Acces&lt;/td&gt;' +\n                N'&lt;td width=60px style=\"font-weight:bold; text-align:right; background-color:#E6E6FA\"&gt;VtaM\u00edn&lt;/td&gt;' +\n                N'&lt;td width=60px style=\"font-weight:bold; text-align:right; background-color:#E6E6FA\"&gt;%Avance&lt;/td&gt;' +\n                N'&lt;td width=50px style=\"font-weight:bold; text-align:right; background-color:#E6E6FA\"&gt;Transac&lt;/td&gt;' +\n                N'&lt;td width=50px style=\"font-weight:bold; text-align:right; background-color:#E6E6FA\"&gt;Personas&lt;/td&gt;' +\n                N'&lt;td width=50px style=\"font-weight:bold; text-align:right; background-color:#E6E6FA\"&gt;TkProm&lt;/td&gt;' +\n                N'&lt;td width=50px style=\"font-weight:bold; text-align:right; background-color:#E6E6FA\"&gt;RatConv&lt;/td&gt;' +\n                N'&lt;td width=80px style=\"font-weight:bold; text-align:center; background-color:#E6E6FA\"&gt;Ultima transac.&lt;/td&gt;' \n                +\n                N'&lt;/tr&gt;' +\n                CAST(\n                    (\n                        SELECT [td/@align] = 'center',\n                               [td/@bgcolor] = T1.[bgcolor],\n                               td = T1.[medioventa],\n                               N'',\n                               [td/@align] = 'right',\n                               [td/@bgcolor] = T1.[bgcolor],\n                               td = FORMAT(T1.[total], 'N0', 'es-pe'),\n                               '',\n                               [td/@align] = 'right',\n                               [td/@bgcolor] = T1.[bgcolor],\n                               td = FORMAT(T1.[cantpar], 'N0', 'es-pe'),\n                               '',\n                               [td/@align] = 'right',\n                               [td/@bgcolor] = T1.[bgcolor],\n                               td = FORMAT(T1.[cuotapar], 'N0', 'es-pe'),\n                               '',\n                               [td/@align] = 'right',\n                               [td/@bgcolor] = T1.[bgcolor],\n                               td = IIF(\n                                   T1.[avancepar] = 100,\n                                   '-',\n                                   FORMAT(T1.[avancepar], 'N0', 'es-pe') + '%'\n                               ),\n                               '',\n                               [td/@align] = 'right',\n                               [td/@bgcolor] = T1.[bgcolor],\n                               td = FORMAT(T1.[cantacc], 'N0', 'es-pe'),\n                               '',\n                               [td/@align] = 'right',\n                               [td/@bgcolor] = T1.[bgcolor],\n                               td = FORMAT(T1.[cuotaacc], 'N0', 'es-pe'),\n                               '',\n                               [td/@align] = 'right',\n                               [td/@bgcolor] = T1.[bgcolor],\n                               td = IIF(\n                                   T1.[avanceacc] = 100,\n                                   '-',\n                                   FORMAT(T1.[avanceacc], 'N0', 'es-pe') + '%'\n                               ),\n                               '',\n                               [td/@align] = 'right',\n                               [td/@bgcolor] = T1.[bgcolor],\n                               td = FORMAT(T1.[NTRAN], 'N0', 'es-pe'),\n                               '',\n                               [td/@align] = 'right',\n                               [td/@bgcolor] = T1.[bgcolor],\n                               td = FORMAT(T1.[TRAF_TOTAL], 'N0', 'es-pe'),\n                               '',\n                               [td/@align] = 'right',\n                               [td/@bgcolor] = T1.[bgcolor],\n                               td = FORMAT(T1.[TKAVG], 'N2', 'es-pe'),\n                               '',\n                               [td/@align] = 'right',\n                               [td/@bgcolor] = T1.[bgcolor],\n                               td = FORMAT(T1.[RATIO_CONV], 'N2', 'es-pe') + '%',\n                               '',\n                               [td/@align] = 'center',\n                               [td/@bgcolor] = T1.[bgcolor],\n                               td = IIF(T1.hora IS NULL, ' ', RTRIM(T1.hora)),\n                               ''\n                        FROM   #TmpVentaCuota AS T1\n                               INNER JOIN #tmpSupervisor01 AS S ON S.canal = T1.canal AND S.subcanal = T1.subcanal AND S.medioventa = T1.medioventa\n                        WHERE  s.email = @email_supervisor\n                               AND s.supervisor = @supervisor\n                               AND T1.cuota&gt;0\n                        ORDER BY\n                               T1.[avancepar] ASC\n                               FOR XML PATH('tr'),\n                               TYPE\n                    ) AS VARCHAR(MAX)\n                ) +\n                '   &lt;/table&gt;'\n\n            /***********/\n            /*Comentado*/\n            /***********/\n\n            EXEC msdb.dbo.sp_send_dbmail\n                 @profile_name = 'DBA_Passarela',\n                 @recipients = @email_supervisor,\n                 --@recipients= 'jordan.chuquimajo@footloose.pe',\n                 @subject = @asunto,\n                 @body = @tableHTMLSup,\n                 @body_format = 'HTML';\n\n            PRINT @tableHTMLSup\n            SET @tableHTMLSup = ''\n        END\n    END\n\n    /**********************************/\n    -- Tarea: Eliminar tablas Temporales\n    /**********************************/\n    IF OBJECT_ID('tempdb..#tmpVentas') IS NOT NULL\n        DROP TABLE #tmpVentas;\n    IF OBJECT_ID('tempdb..#Reportev1') IS NOT NULL\n        DROP TABLE #Reportev1;\n    IF OBJECT_ID('tempdb..#Reportev2') IS NOT NULL\n        DROP TABLE #Reportev2;\n    IF OBJECT_ID('tempdb..#ReporteSupervisorAgrupado') IS NOT NULL\n        DROP TABLE #ReporteSupervisorAgrupado;\n    IF OBJECT_ID('tempdb..#tmpX') IS NOT NULL\n        DROP TABLE #tmpX;\n\n    IF OBJECT_ID('tempdb..#TmpAvanceSupervisor') IS NOT NULL\n        DROP TABLE #TmpAvanceSupervisor;\n    IF OBJECT_ID('tempdb..#TmpVentaCuota') IS NOT NULL\n        DROP TABLE #TmpVentaCuota;\n    IF OBJECT_ID('tempdb..#TmpVentaCuotas') IS NOT NULL\n        DROP TABLE #TmpVentaCuotas;\n    IF OBJECT_ID('tempdb..#tmpSupervisor') IS NOT NULL\n        DROP TABLE #tmpSupervisor;\n    IF OBJECT_ID('tempdb..#TmpAvanceSupervisores') IS NOT NULL\n        DROP TABLE #TmpAvanceSupervisores;\n    IF OBJECT_ID('tempdb..#tmpSupervisores') IS NOT NULL\n        DROP TABLE #tmpSupervisores;\nEND\n</code></pre>"},{"location":"procesos/data-warehouse/reportes/ach/entidades/","title":"Modelo Entidad-Relaci\u00f3n","text":""},{"location":"procesos/data-warehouse/reportes/ach/entidades/#2-diagrama-de-entidad-relacion-der","title":"2. Diagrama de Entidad-Relaci\u00f3n (DER)","text":"<pre><code>erDiagram\n    PROYECCIONES ||--o{ TB_MEDIOVENTA : tiene\n    PROYECCIONES ||--o{ TB_SUBCANAL : pertenece\n    TB_SUBCANAL ||--o{ TB_CANAL : pertenece\n    TB_MEDIOVENTA ||--o{ TB_SUBCANAL : pertenece\n    SUPERVISOR ||--o{ PROYECCIONES : supervisa\n    FACTURAS ||--o{ FACTURAS_DETALLE : contiene\n    FACTURAS ||--o{ TIPO_VENTA_MEDIOPAGO : tiene\n    FACTURAS ||--o{ PRODUCTOS : referencia\n    FACTURAS ||--o{ TIENDAS : pertenece\n    FACTURAS ||--o{ VENDEDORES : tiene\n    PRODUCTOS ||--o{ TIPO_ARTICULO : clasifica\n\n    PROYECCIONES {\n        string fecha PK\n        string canalventa\n        decimal monto\n        int Par\n        int Acc\n        int id_medioventa FK\n        string Supervisor\n    }\n\n    TB_MEDIOVENTA {\n        int id_medioventa PK\n        string medioventa\n        int id_subcanal FK\n        bit estado\n    }\n\n    TB_SUBCANAL {\n        int id_subcanal PK\n        string subcanal\n        int id_canal FK\n    }\n\n    TB_CANAL {\n        int id_canal PK\n        string canal\n    }\n\n    SUPERVISOR {\n        string nombre\n        string email\n        string canalventa\n        bit estado\n    }\n\n    FACTURAS {\n        string transacabid PK\n        string tienda_3 FK\n        string fichv_3 FK\n        date fcom_3\n        string tidoc_3\n        string sfacu_3\n        string nfactu_3\n        string gloa_3\n    }\n\n    FACTURAS_DETALLE {\n        string transacabid FK\n        string linea_3a FK\n        float cant_3a\n        decimal vvta1_3a\n    }\n\n    TIPO_VENTA_MEDIOPAGO {\n        string TIPODOC PK\n        string SERIE PK\n        string NRODOC PK\n        string MEDIOPAGOID\n        string TIPODEVENTA\n    }\n\n    PRODUCTOS {\n        string producto PK\n        string tipoarticulo FK\n        decimal precio\n        decimal preciocosto\n    }\n\n    TIPO_ARTICULO {\n        string tipoarticulo PK\n        string aplicapercepcion\n    }\n\n    TIENDAS {\n        string tienda PK\n        string descripcion\n    }\n\n    VENDEDORES {\n        string codigo PK\n        string nombre\n    }</code></pre> Notas importantes sobre el diagrama"},{"location":"procesos/data-warehouse/reportes/ach/entidades/#explicacion-del-diagrama-entidad-relacion","title":"Explicaci\u00f3n del Diagrama Entidad-Relaci\u00f3n","text":"<ul> <li>Representa las principales entidades involucradas en el proceso y sus relaciones.</li> <li>Las entidades principales son:<ul> <li><code>PROYECCIONES</code>: Datos de metas/objetivos de venta</li> <li><code>FACTURAS</code> y <code>FACTURAS_DETALLE</code>: Datos transaccionales de ventas</li> <li><code>TB_CANAL</code>, <code>TB_SUBCANAL</code>, <code>TB_MEDIOVENTA</code>: Estructura organizacional de canales de venta</li> <li><code>SUPERVISOR</code>: Responsables de cada canal/medio de venta</li> <li><code>PRODUCTOS</code> y <code>TIPO_ARTICULO</code>: Cat\u00e1logo de productos</li> </ul> </li> </ul>"},{"location":"procesos/data-warehouse/reportes/ach/flujo/","title":"An\u00e1lisis del Stored Procedure <code>job_email_ACH_2024.sql</code>","text":""},{"location":"procesos/data-warehouse/reportes/ach/flujo/#1-diagrama-de-flujo-de-datos-dfd","title":"1. Diagrama de Flujo de Datos (DFD)","text":"<pre><code>flowchart TD\n    A[Inicio] --&gt; B[Declarar variables y par\u00e1metros]\n    B --&gt; C[Crear tablas temporales]\n    C --&gt; D[Obtener datos de proyecciones]\n    D --&gt; E[Obtener datos de ventas]\n    E --&gt; F[Procesar datos de ventas]\n    F --&gt; G[Calcular m\u00e9tricas de avance]\n    G --&gt; H[Generar reporte consolidado]\n    H --&gt; I[Generar HTML para correo general]\n    I --&gt; J[Enviar correo general]\n    H --&gt; K[Generar reporte por supervisor]\n    K --&gt; L[Generar HTML para correos por supervisor]\n    L --&gt; M[Enviar correos individuales]\n    M --&gt; N[Limpiar tablas temporales]\n    N --&gt; O[Fin]</code></pre> Notas importantes sobre el diagrama"},{"location":"procesos/data-warehouse/reportes/ach/flujo/#explicacion-del-diagrama-de-flujo-de-datos","title":"Explicaci\u00f3n del Diagrama de Flujo de Datos","text":"<ul> <li>Muestra el proceso principal del stored procedure desde la inicializaci\u00f3n hasta el env\u00edo de correos.</li> <li>Destaca las etapas clave como obtenci\u00f3n de datos, procesamiento, generaci\u00f3n de reportes y env\u00edo de correos.</li> </ul> <p>El stored procedure es complejo y realiza m\u00faltiples funciones: - Consulta datos de ventas reales vs proyecciones - Calcula m\u00e9tricas de desempe\u00f1o (avances, m\u00e1rgenes) - Genera reportes HTML detallados - Distribuye la informaci\u00f3n por correo electr\u00f3nico a diferentes destinatarios seg\u00fan su rol</p>"},{"location":"procesos/data-warehouse/reportes/vdm/codigo/","title":"C\u00f3digo","text":"job_email_ACH_2024.sql<pre><code>USE [passareladwh]\nGO\n/****** Object:  StoredProcedure [dbo].[job_email_VDM_6]    Script Date: 11/06/2025 09:39:32 ******/\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\n-- =============================================\n-- Author:      &lt;Miguel Ayte&gt;\n-- Create date: &lt;2020-08-12&gt;\n-- Description: &lt;Informe de ventas del d\u00eda, en funci\u00f3n a Costos SAP&gt;\n-- Change01:    &lt;2023-12-28 Ventas y Costos Sin IGV&gt;\n-- =============================================\n\nALTER PROCEDURE [dbo].[job_email_VDM_6] AS\nBEGIN\n    SET NOCOUNT ON\n  BEGIN /* Variables Fecha */\n    DECLARE @fec DATE = DATEADD(DAY, -1, GETDATE())\n        -- set @fec='2025-06-01';\n\n    DECLARE @FechaIniTY DATE = (SELECT\n                DATEADD(MONTH, DATEDIFF(MONTH, '19000101', @fec), '19000101'))\n           ,@FechaFinTY DATE = (SELECT\n                DATEADD(MONTH, DATEDIFF(MONTH, '18991231', @fec), '18991231'))\n    DECLARE @FechaIniSFTY CHAR(8) = FORMAT(@FechaIniTY, 'yyyyMMdd')\n           ,@FechaFinSFTY CHAR(8) = FORMAT(@FechaFinTY, 'yyyyMMdd')\n    DECLARE @FechaIniLY DATE = (SELECT\n                DATEADD(MONTH, DATEDIFF(MONTH, '19000101', DATEADD(YEAR, -1, @fec)), '19000101'))\n           ,@FechaFinLY DATE = (SELECT\n                DATEADD(MONTH, DATEDIFF(MONTH, '18991231', DATEADD(YEAR, -1, @fec)), '18991231'))\n    DECLARE @FechaIniSFLY CHAR(8) = FORMAT(@FechaIniLY, 'yyyyMMdd')\n           ,@FechaFinSFLY CHAR(8) = FORMAT(@FechaFinLY, 'yyyyMMdd')\n\n        SELECT @fec [@fec]\n                    ,@FechaIniTY [@FechaIniTY]\n                    ,@FechaFinTY [@FechaFinTY]\n                    ,@FechaIniLY [@FechaIniLY]\n                    ,@FechaFinLY [@FechaFinLY];\n  END\n\n  BEGIN /* Variables de Detalle*/\n        DECLARE @Fecha            DATE\n               ,@dia              INT\n               ,@NDiaSemana       VARCHAR(20)\n               ,@UndParTY         INT\n               ,@UndAccTY         INT\n               ,@VtaParTY         DECIMAL(10 ,2)\n               ,@VtaAccTY         DECIMAL(10 ,2)\n               ,@UndParLY         INT\n               ,@UndAccLY         INT\n               ,@VtaParLY         DECIMAL(10 ,2)\n               ,@VtaAccLY         DECIMAL(10 ,2)\n               ,@CtoParTY         DECIMAL(10 ,2)\n               ,@CtoAccTY         DECIMAL(10 ,2)\n               ,@CtoParLY         DECIMAL(10 ,2)\n               ,@CtoAccLY         DECIMAL(10 ,2)\n               ,@unidadTY         INT\n               ,@ventaTY          DECIMAL(10 ,2)\n               ,@unidadLY         DECIMAL(10 ,2)\n               ,@ventaLY          DECIMAL(10 ,2)\n               ,@costoTY          DECIMAL(10 ,2)\n               ,@costoLY          DECIMAL(10 ,2)\n               ,@CtaUndParTY      INT\n               ,@CtaVtaParTY      DECIMAL(10 ,2)\n               ,@CtaUndAccTY      INT\n               ,@CtaVtaAccTY      DECIMAL(10 ,2)\n               ,@CtaUndTY         INT\n               ,@CtaVtaTY         DECIMAL(10 ,2)\n               ,@UtilTY           DECIMAL(10 ,2)\n               ,@UtilLY           DECIMAL(10 ,2)\n               ,@MargenTY         DECIMAL(9 ,3)\n               ,@MargenLY         DECIMAL(9 ,3)\n               ,@DifParTYvsLY     DECIMAL(9 ,3)\n               ,@DifVtaTYvsLY     DECIMAL(9 ,3)\n               ,@DifMrgTYvsLY     DECIMAL(9 ,3)\n               ,@AvaUndParTY      DECIMAL(9 ,3)\n               ,@AvaVtaParTY      DECIMAL(9 ,3)\n               ,@AvaUndAccTY      DECIMAL(9 ,3)\n               ,@AvaVtaAccTY      DECIMAL(9 ,3)\n               ,@AvaUndTY         DECIMAL(9 ,3)\n               ,@AvaVtaTY         DECIMAL(9 ,3)\n\n               ,@VtaMinTY         DECIMAL(10 ,2)\n               ,@CVtaMinTY        DECIMAL(9 ,3)\n               ,@VarVtaMinTY      DECIMAL(10 ,2)   \n               ,@CtaVtaTYMin      DECIMAL(10 ,2)   \n  END\n\n    BEGIN /* Variables HTML */\n            DECLARE @email VARCHAR(MAX) = N'';\n\n            DECLARE @asunto VARCHAR(100) = ''\n                                            ,@tableHTML NVARCHAR(MAX) = ''\n\n            DECLARE @hTML_Rpt_Diario             NVARCHAR(MAX)=''\n                            ,@hTML_Rpt_Diario_AccPeq      NVARCHAR(MAX)=''\n                            ,@hTML_Rpt_Diario_AccGra      NVARCHAR(MAX)=''\n                            ,@hTML_Rpt_Diario_Pares       NVARCHAR(MAX)=''\n                            ,@hTML_Rpt_Diario_Unids       NVARCHAR(MAX)=''\n                            ,@hTML_Rpt_Diario_Monto       NVARCHAR(MAX)=''\n                            ,@hTML_Rpt_Diario_Util        NVARCHAR(MAX)=''\n                            ,@hTML_Rpt_Diario_Margen      NVARCHAR(MAX)=''\n                            ,@hTML_Rpt_Diario_AccPTY      NVARCHAR(MAX)=''\n                            ,@hTML_Rpt_Diario_AccGTY      NVARCHAR(MAX)=''\n                            ,@hTML_Rpt_Diario_ParCTY      NVARCHAR(MAX)=''\n                            ,@hTML_Rpt_Diario_UnidadesDif NVARCHAR(MAX)=''\n                            ,@hTML_Rpt_Diario_MontoDif NVARCHAR(MAX)=''\n                            ,@hTML_Rpt_Diario_UtilDif     NVARCHAR(MAX)=''\n                            ,@hTML_Rpt_Diario_MontoCta NVARCHAR(MAX)=''\n                            ,@hTML_Rpt_Diario_AvanceCta NVARCHAR(MAX)=''\n                            /*Cuota Unidades Inicio*/\n                            ,@hTML_Rpt_Diario_White       NVARCHAR(MAX)=''\n                            ,@hTML_Rpt_Diario_CuotaPar NVARCHAR(MAX)=''\n                            ,@hTML_Rpt_Diario_CuotaAcc NVARCHAR(MAX)=''\n                            ,@hTML_Rpt_Diario_AvanceCtaPar NVARCHAR(MAX)=''\n                            ,@hTML_Rpt_Diario_AvanceCtaAcc NVARCHAR(MAX)=''\n\n                            ,@hTML_Rpt_Diario_VtaMin NVARCHAR(MAX)=''\n                            ,@hTML_Rpt_Diario_CVtaMin NVARCHAR(MAX)=''\n                            ,@hTML_Rpt_Diario_VarVtaMin NVARCHAR(MAX)=''\n\n            DECLARE @v_VtaTY DECIMAL(10, 2) = 0\n                                            ,@v_VarVenTY DECIMAL(19, 4) = 0 --Cambio de longitud por error de Arimetic de 7 a 19\n                                            ,@v_VtaLY DECIMAL(10, 2) = 0 \n    END\n\n\n    BEGIN\n        --Eliminar Tabla Temporal\n        IF OBJECT_ID('tempdb..#TVentas1') IS NOT NULL DROP TABLE #TVentas1 ;\n\n        CREATE TABLE #TVentas1\n        (\n            Fecha            DATE\n           ,dia              INT\n           ,NDiaSemana       VARCHAR(20)\n           ,canal            VARCHAR(50)\n           ,tipoarticulo     VARCHAR(50)\n           ,unidadTY         INT\n           ,ventaTY          DECIMAL(10 ,2)\n           ,unidadLY         INT\n           ,ventaLY          DECIMAL(10 ,2)\n           ,costoTY          DECIMAL(10 ,2)\n           ,costoLY          DECIMAL(10 ,2)\n        )\n\n        INSERT INTO #TVentas1\n        (\n            Fecha,\n            dia,\n            NDiaSemana,\n            canal,\n            tipoarticulo,\n            unidadTY,\n            ventaTY,\n            unidadLY,\n            ventaLY,\n            costoTY,\n            costoLY\n        )\n\n        SELECT t1.Fecha\n              ,t1.Dia\n              ,t1.NDiaSemana\n              ,t1.canal\n              ,t1.tipoarticulo\n              ,SUM(t1.unidadTY) AS unidadTY\n              ,SUM(t1.ventaTY) AS ventaTY\n              ,SUM(t1.unidadLY) AS unidadLY\n              ,SUM(t1.ventaLY) AS ventaLY\n              ,SUM(ISNULL(t1.costoTY, 0)) AS costoTY\n              ,SUM(t1.costoLY) AS costoLY\n        FROM   (\n        SELECT\n            tv.Fecha,\n            tv.Dia,\n            tv.NDiaSemana,\n            --CONCAT(vp.id_compradora,'-',c.rubro) AS rubro,\n            tc.canal,\n            t.aplicapercepcion AS tipoarticulo,\n            --vv.cantidad as unidadTY,\n            CASE \n                 WHEN vv.precio&gt;10.01 THEN ISNULL(vv.cantidad ,0)\n                 ELSE 0\n            END AS unidadTY,\n            vv.subtotal as ventaTY,             -- vv.totaldetalle as ventaTY\n            0 AS unidadLY,\n            0.00 AS ventaLY,\n            vv.SAPcostodetalle AS costoTY,  -- Cast(vv.SAPcostodetalle*1.18 AS DECIMAL(10,2)) AS costoTY\n            0.00 AS costoLY\n        FROM\n            TiempoVersus AS tv\n        INNER JOIN VentasVersus2025 AS vv ON tv.idFecha=vv.idFecha\n        INNER JOIN vw_Producto AS vp ON vp.producto = vv.producto\n        LEFT JOIN tipoarticulo AS t ON t.tipoarticulo = vp.tipoarticulo\n        --INNER JOIN compradora AS c ON c.id_compradora = vp.id_compradora\n        LEFT JOIN tb_medioventa AS tm ON tm.id_medioventa = vv.id_medioventa\n        LEFT JOIN tb_subcanal AS ts ON ts.id_subcanal = tm.id_subcanal\n        LEFT JOIN tb_canal AS tc ON tc.id_canal = ts.id_canal\n        WHERE tv.Fecha BETWEEN @FechaIniTY AND @fec\n        AND tc.id_canal IN (1,2,3,4,5)\n        --AND NOT (vv.tipimp_3a='9996' AND vv.aigv_3a='12')\n        UNION ALL\n        SELECT\n            tv.Fecha,\n            tv.Dia,\n            tv.NDiaSemana,\n            --CONCAT(vp.id_compradora,'-',c.rubro) AS rubro,\n            tc.canal,\n            t.aplicapercepcion AS tipoarticulo,\n            0 AS unidadTY,\n            0.00 AS ventaTY,\n            --vv.cantidad AS unidadLY,\n            CASE \n                 WHEN vv.precio&gt;=8 THEN ISNULL(vv.cantidad ,0)\n                 ELSE 0\n            END AS unidadLY,\n            vv.subtotal as ventalY,             -- vv.totaldetalle as ventaly\n            0.00 AS costoTY,\n            vv.SAPcostodetalle AS costoLY   -- 0.00 AS costoLY\n        FROM\n            TiempoVersus AS tv\n        INNER JOIN VentasVersus2024 AS vv ON tv.idFecha=vv.idFecha\n        INNER JOIN vw_Producto AS vp ON vp.producto = vv.producto\n        LEFT JOIN tipoarticulo AS t ON t.tipoarticulo = vp.tipoarticulo\n        --INNER JOIN compradora AS c ON c.id_compradora = vp.id_compradora\n        LEFT JOIN tb_medioventa AS tm ON tm.id_medioventa = vv.id_medioventa\n        LEFT JOIN tb_subcanal AS ts ON ts.id_subcanal = tm.id_subcanal\n        LEFT JOIN tb_canal AS tc ON tc.id_canal = ts.id_canal\n        WHERE tv.Fecha BETWEEN @FechaIniTY AND @fec\n        AND tc.id_canal IN (1,2,3,4,5)\n        --AND NOT (vv.tipimp_3a='9996' AND vv.aigv_3a='12')\n        ) AS t1\n        GROUP BY t1.Fecha, t1.Dia, t1.NDiaSemana, t1.canal, t1.tipoarticulo\n        ORDER BY t1.Fecha, t1.Dia, t1.canal, t1.tipoarticulo\n\n        IF OBJECT_ID('tempdb..#TVentas2') IS NOT NULL DROP TABLE #TVentas2 ;\n\n        CREATE TABLE #TVentas2\n        (\n            Fecha          DATE\n           ,dia            INT\n           ,NDiaSemana     VARCHAR(20)\n           ,canal          VARCHAR(50)\n           ,UndParTY       INT\n           ,UndAccTY       INT\n           ,VtaParTY       DECIMAL(10 ,2)\n           ,VtaAccTY       DECIMAL(10 ,2)\n           ,UndParLY       INT\n           ,UndAccLY       INT\n           ,VtaParLY       DECIMAL(10 ,2)\n           ,VtaAccLY       DECIMAL(10 ,2)\n           ,CtoParTY       DECIMAL(10 ,2)\n           ,CtoAccTY       DECIMAL(10 ,2)\n           ,CtoParLY       DECIMAL(10 ,2)\n           ,CtoAccLY       DECIMAL(10 ,2)\n           ,unidadTY       AS (UndParTY+UndAccTY)\n           ,ventaTY        AS (VtaParTY+VtaAccTY)\n           ,unidadLY       AS (UndParLY+UndAccLY)\n           ,ventaLY        AS (VtaParLY+VtaAccLY)\n           ,costoTY        AS (CtoParTY+CtoAccTY)\n           ,costoLY        AS (CtoParLY+CtoAccLY)\n\n           ,UtilTY         AS ((VtaParTY+VtaAccTY)-(CtoParTY+CtoAccTY))\n           ,UtilLY         AS ((VtaParLY+VtaAccLY)-(CtoParLY+CtoAccLY))\n           ,MargenTY       AS (CASE WHEN (VtaParTY+VtaAccTY)=0 THEN 0.00 ELSE ((VtaParTY+VtaAccTY)-(CtoParTY+CtoAccTY))/(VtaParTY+VtaAccTY) END)\n           ,MargenLY       AS (CASE WHEN (VtaParLY+VtaAccLY)=0 THEN 0.00 ELSE ((VtaParLY+VtaAccLY)-(CtoParLY+CtoAccLY))/(VtaParLY+VtaAccLY) END)\n\n          ,DifParTYvsLY   AS (CASE WHEN (UndParLY)=0 THEN 0.00 ELSE ((CAST(UndParTY AS DECIMAL(10,2))/CAST(UndParLY AS DECIMAL(10,2)))-1) END)\n            ,DifVtaTYvsLY   AS (CASE WHEN (VtaParLY+VtaAccLY)=0 THEN 0.00 ELSE (((VtaParTY+VtaAccTY)-(VtaParLY+VtaAccLY))/(VtaParLY+VtaAccLY)) END)\n          ,DifMrgTYvsLY   AS (CASE WHEN ((VtaParLY+VtaAccLY)-(CtoParLY+CtoAccLY))=0 THEN 0.00 ELSE ((((VtaParTY+VtaAccTY)-(CtoParTY+CtoAccTY))/((VtaParLY+VtaAccLY)-(CtoParLY+CtoAccLY)))-1) END)\n\n        )\n\n        INSERT INTO #TVentas2\n        (\n            Fecha,\n            dia,\n            NDiaSemana,\n            canal,\n            UndParTY,\n            UndAccTY,\n            VtaParTY,\n            VtaAccTY,\n            UndParLY,\n            UndAccLY,\n            VtaParLY,\n            VtaAccLY,\n            CtoParTY,\n            CtoAccTY,\n            CtoParLY,\n            CtoAccLY\n        )\n\n        SELECT \n            Fecha,\n            dia,\n            NDiaSemana,\n            canal,\n\n            SUM(isnull([PARES],0)) as 'UndParTY',\n            SUM(isnull([ACCESORIOS],0)) as 'UndAccTY',\n            SUM(isnull([PARES1],0)) as 'VtaParTY',\n            SUM(isnull([ACCESORIOS1],0)) as 'VtaAccTY',\n\n            SUM(isnull([PARES2],0)) as 'UndParLY',\n            SUM(isnull([ACCESORIOS2],0)) as 'UndAccLY',\n            SUM(isnull([PARES3],0)) as 'VtaParLY',\n            SUM(isnull([ACCESORIOS3],0)) as 'VtaAccLY',\n\n            SUM(isnull([PARES4],0)) as 'CtoParTY',\n            SUM(isnull([ACCESORIOS4],0)) as 'CtoAccLY',\n            SUM(isnull([PARES5],0)) as 'CtoParLY',\n            SUM(isnull([ACCESORIOS5],0)) as 'CtoAccLY'\n        FROM (\n        SELECT\n            t.Fecha,\n            t.dia,\n            t.NDiaSemana,\n            t.canal,\n            t.tipoarticulo,\n            t.tipoarticulo+'1' As tipoarticulo1,\n            t.tipoarticulo+'2' As tipoarticulo2,\n            t.tipoarticulo+'3' As tipoarticulo3,\n            t.tipoarticulo+'4' As tipoarticulo4,\n            t.tipoarticulo+'5' As tipoarticulo5,\n            t.unidadTY,\n            t.ventaTY,\n            t.unidadLY,\n            t.ventaLY,\n            t.costoTY,\n            t.costoLY\n        FROM\n            #TVentas1 AS t\n        ) AS Points\n\n        -- unidadTY\n        PIVOT\n        (\n            SUM(unidadTY)\n            FOR tipoarticulo IN ([PARES],[ACCESORIOS])\n        ) AS pv1\n        -- ventaTY\n        PIVOT\n        (\n            SUM(ventaTY)\n            FOR tipoarticulo1 IN ([PARES1],[ACCESORIOS1])\n        ) AS pv2\n        -- unidadLY\n        PIVOT\n        (\n            SUM(unidadLY)\n            FOR tipoarticulo2 IN ([PARES2],[ACCESORIOS2])\n        ) AS pv3\n        -- ventaLY\n        PIVOT\n        (\n            SUM(ventaLY)\n            FOR tipoarticulo3 IN ([PARES3],[ACCESORIOS3])\n        ) AS pv4\n        -- costoTY\n        PIVOT\n        (\n            SUM(costoTY)\n            FOR tipoarticulo4 IN ([PARES4],[ACCESORIOS4])\n        ) AS pv5\n        -- costoLY\n        PIVOT\n        (\n            SUM(costoLY)\n            FOR tipoarticulo5 IN ([PARES5],[ACCESORIOS5])\n        ) AS pv6\n        GROUP BY \n            Fecha,\n            dia,\n            NDiaSemana,\n            canal\n\n        --\n        -- Bloque #01\n\n        IF OBJECT_ID('tempdb..#TVentasB1') IS NOT NULL DROP TABLE #TVentasB1 ;\n        CREATE TABLE #TVentasB1\n        (\n            Fecha          DATE\n           ,dia            INT\n           ,NDiaSemana     VARCHAR(20)\n           ,UndParTY       INT\n           ,UndAccTY       INT\n           ,VtaParTY       DECIMAL(10 ,2)\n           ,VtaAccTY       DECIMAL(10 ,2)\n           ,UndParLY       INT\n           ,UndAccLY       INT\n           ,VtaParLY       DECIMAL(10 ,2)\n           ,VtaAccLY       DECIMAL(10 ,2)\n           ,CtoParTY       DECIMAL(10 ,2)\n           ,CtoAccTY       DECIMAL(10 ,2)\n           ,CtoParLY       DECIMAL(10 ,2)\n           ,CtoAccLY       DECIMAL(10 ,2)\n           ,unidadTY       INT\n           ,ventaTY        DECIMAL(10 ,2)\n           ,unidadLY       INT\n           ,ventaLY        DECIMAL(10 ,2)\n           ,costoTY        DECIMAL(10 ,2)\n           ,costoLY        DECIMAL(10 ,2)\n\n           ,CtaUndParTY     INT\n           ,CtaVtaParTY     DECIMAL(10 ,2)\n           ,CtaUndAccTY     INT\n           ,CtaVtaAccTY     DECIMAL(10 ,2)\n           ,CtaUndTY        INT\n           ,CtaVtaTY        DECIMAL(10 ,2)\n\n           ,UtilTY         AS ((VtaParTY+VtaAccTY)-(CtoParTY+CtoAccTY))\n           ,UtilLY         AS ((VtaParLY+VtaAccLY)-(CtoParLY+CtoAccLY))\n           ,MargenTY       AS (CASE WHEN (VtaParTY+VtaAccTY)=0 THEN 0.00 ELSE ((VtaParTY+VtaAccTY)-(CtoParTY+CtoAccTY))/(VtaParTY+VtaAccTY) END)\n           ,MargenLY       AS (CASE WHEN (VtaParLY+VtaAccLY)=0 THEN 0.00 ELSE ((VtaParLY+VtaAccLY)-(CtoParLY+CtoAccLY))/(VtaParLY+VtaAccLY) END)\n           ,DifParTYvsLY   AS (CASE WHEN (UndParLY)=0 THEN 0.00 ELSE ((CAST(UndParTY AS DECIMAL(10,2))/CAST(UndParLY AS DECIMAL(10,2)))-1) END)\n           ,DifVtaTYvsLY   AS (CASE WHEN (VtaParLY+VtaAccLY)=0 THEN 0.00 ELSE (((VtaParTY+VtaAccTY)-(VtaParLY+VtaAccLY))/(VtaParLY+VtaAccLY)) END)\n           ,DifMrgTYvsLY   AS (CASE WHEN ((VtaParLY+VtaAccLY)-(CtoParLY+CtoAccLY))=0 THEN 0.00 ELSE ((((VtaParTY+VtaAccTY)-(CtoParTY+CtoAccTY))/((VtaParLY+VtaAccLY)-(CtoParLY+CtoAccLY)))-1) END)\n\n           ,AvaUndParTY     AS (CASE WHEN (CtaUndParTY)=0 THEN 0.00 ELSE (CAST(UndParTY AS DECIMAL(10,2))/CAST(CtaUndParTY AS DECIMAL(10,2))) END)\n           ,AvaVtaParTY     AS (CASE WHEN (CtaVtaParTY)=0 THEN 0.00 ELSE (VtaParTY/CtaVtaParTY) END)\n           ,AvaUndAccTY     AS (CASE WHEN (CtaUndAccTY)=0 THEN 0.00 ELSE (CAST(UndAccTY AS DECIMAL(10,2))/CAST(CtaUndAccTY AS DECIMAL(10,2))) END)\n           ,AvaVtaAccTY     AS (CASE WHEN (CtaVtaAccTY)=0 THEN 0.00 ELSE (VtaAccTY/CtaVtaAccTY) END)\n           ,AvaUndTY        AS (CASE WHEN (CtaUndTY)=0 THEN 0.00 ELSE (CAST(unidadTY AS DECIMAL(10,2))/CAST(CtaUndTY AS DECIMAL(10,2))) END)\n           ,AvaVtaTY        AS (CASE WHEN (CtaVtaTY)=0 THEN 0.00 ELSE (ventaTY/CtaVtaTY) END)\n        )\n\n        IF OBJECT_ID('tempdb..#TProyeccion') IS NOT NULL DROP TABLE #TProyeccion ;\n        CREATE TABLE #TProyeccion\n        (\n            Fecha           DATE\n           ,dia             INT\n           ,NDiaSemana      VARCHAR(20)\n           ,CtaUndParTY     INT\n           ,CtaVtaParTY     DECIMAL(10 ,2)\n           ,CtaUndAccTY     INT\n           ,CtaVtaAccTY     DECIMAL(10 ,2)\n           ,CtaUndTY        INT\n           ,CtaVtaTY        DECIMAL(10 ,2)\n        )\n\n        INSERT INTO #TProyeccion\n        (\n            Fecha,\n            dia,\n            NDiaSemana,\n            CtaUndParTY,\n            CtaVtaParTY,\n            CtaUndAccTY,\n            CtaVtaAccTY,\n            CtaUndTY,\n            CtaVtaTY\n        )\n        SELECT\n            tv.Fecha,\n            tv.Dia,\n            tv.NDiaSemana,\n            SUM(vpv.Par) AS CtaUndParTY,\n            SUM(vpv.VtaPar_TY) AS CtaVtaParTY,\n            SUM(vpv.Acc) AS CtaUndAccTY,\n            SUM(vpv.VtaAcc_TY) AS CtaVtaAccTY,\n            SUM(vpv.Par)+SUM(vpv.Acc) AS CtaUndTY,\n            --SUM(IIF(vpv.monto = 0, 1, vpv.monto)) AS CtaVtaTY\n            SUM(vpv.monto) AS CtaVtaTY\n        FROM\n            TiempoVersus AS tv\n        INNER JOIN vw_proyecciones_TY AS vpv ON vpv.Fecha = tv.FechaSK\n        WHERE tv.Fecha BETWEEN @FechaIniTY AND @fec\n        GROUP BY tv.Fecha, tv.Dia, tv.NDiaSemana\n\n        --SELECT * FROM #TProyeccion\n        --SELECT * FROM #TVentas1\n        --return\n        INSERT INTO #TVentasB1\n        (\n            Fecha,\n            dia,\n            NDiaSemana,\n            UndParTY,\n            UndAccTY,\n            VtaParTY,\n            VtaAccTY,\n            UndParLY,\n            UndAccLY,\n            VtaParLY,\n            VtaAccLY,\n            CtoParTY,\n            CtoAccTY,\n            CtoParLY,\n            CtoAccLY,\n            unidadTY,\n            ventaTY,\n            unidadLY,\n            ventaLY,\n            costoTY,\n            costoLY,\n            CtaUndParTY,\n            CtaVtaParTY,\n            CtaUndAccTY,\n            CtaVtaAccTY,\n            CtaUndTY,\n            CtaVtaTY\n        )\n        SELECT tv.Fecha\n              ,tv.dia\n              ,tv.NDiaSemana\n              ,SUM(t.UndParTY)         AS UndParTY\n              ,SUM(t.UndAccTY)         AS UndAccTY\n              ,SUM(t.VtaParTY)         AS VtaParTY\n              ,SUM(t.VtaAccTY)         AS VtaAccTY\n              ,SUM(t.UndParLY)         AS UndParLY\n              ,SUM(t.UndAccLY)         AS UndAccLY\n              ,SUM(t.VtaParLY)         AS VtaParLY\n              ,SUM(t.VtaAccLY)         AS VtaAccLY\n              ,SUM(t.CtoParTY)         AS CtoParTY\n              ,SUM(t.CtoAccTY)         AS CtoAccTY\n              ,SUM(t.CtoParLY)         AS CtoParLY\n              ,SUM(t.CtoAccLY)         AS CtoAccLY\n              ,SUM(t.unidadTY)         AS unidadTY\n              ,SUM(t.ventaTY)          AS ventaTY\n              ,SUM(t.unidadLY)         AS unidadLY\n              ,SUM(t.ventaLY)          AS ventaLY\n              ,SUM(t.costoTY)          AS costoTY\n              ,SUM(t.costoLY)          AS costoLY\n              ,t2.CtaUndParTY\n              ,t2.CtaVtaParTY\n              ,t2.CtaUndAccTY\n              ,t2.CtaVtaAccTY\n              ,t2.CtaUndTY\n              ,t2.CtaVtaTY\n        FROM   TiempoVersus            AS tv\n               LEFT JOIN #TVentas2     AS t\n                    ON  t.Fecha = tv.Fecha\n               LEFT JOIN #TProyeccion  AS t2\n                    ON  t2.Fecha = t.Fecha\n        WHERE  tv.Fecha BETWEEN @FechaIniTY AND @fec\n        GROUP BY\n               tv.Fecha\n              ,tv.Dia\n              ,tv.NDiaSemana\n              ,t2.CtaUndParTY\n              ,t2.CtaVtaParTY\n              ,t2.CtaUndAccTY\n              ,t2.CtaVtaAccTY\n              ,t2.CtaUndTY\n              ,t2.CtaVtaTY\n\n        --SELECT * FROM #TVentasB1\n        --RETURN\n\n        DECLARE db_cursor CURSOR FOR\n        SELECT\n            tb.Fecha,\n            tb.dia,\n            tb.NDiaSemana,\n            tb.UndParTY,\n            IIF(tb.UndAccTY = 0, 1, tb.UndAccTY) AS UndAccTY,\n            tb.VtaParTY,\n            IIF(tb.VtaAccTY = 0, 1, tb.VtaAccTY) AS VtaAccTY,\n            IIF(tb.UndParLY = 0, 1, tb.UndParLY) AS UndParLY,\n            IIF(tb.UndAccLY = 0, 1, tb.UndAccLY) AS UndAccLY,\n            tb.VtaParLY,\n            IIF(tb.VtaAccLY = 0, 1, tb.VtaAccLY) AS VtaAccLY,\n            tb.CtoParTY,\n            IIF(tb.CtoAccTY = 0, 1, tb.CtoAccTY) AS CtoAccTY,\n            IIF(tb.CtoParLY = 0, 1, tb.CtoParLY) AS CtoParLY,\n            IIF(tb.CtoAccLY = 0, 1, tb.CtoAccLY) AS CtoAccLY,\n            IIF(tb.unidadTY = 0, 1, tb.unidadTY) AS unidadTY,\n            tb.ventaTY,\n            tb.unidadLY,\n            IIF(tb.ventaLY = 0, 1, tb.ventaLY) AS ventaLY,\n            IIF(tb.costoTY = 0, 1, tb.costoTY) AS costoTY,\n            IIF(tb.costoLY = 0, 1, tb.costoLY) AS costoLY,\n            IIF(tb.CtaUndParTY = 0, 1, tb.CtaUndParTY) AS CtaUndParTY,\n            IIF(tb.CtaVtaParTY = 0, 1, tb.CtaVtaParTY) AS CtaVtaParTY,\n            IIF(tb.CtaUndAccTY = 0, 1, tb.CtaUndAccTY) AS CtaUndAccTY,\n            IIF(tb.CtaVtaAccTY = 0, 1, tb.CtaVtaAccTY) AS CtaVtaAccTY,\n            IIF(tb.CtaUndTY = 0, 1, tb.CtaUndTY) AS CtaUndTY,\n            IIF(tb.CtaVtaTY = 0, 1, tb.CtaVtaTY) AS CtaVtaTY,\n            IIF(tb.UtilTY = 0, 1, tb.UtilTY) AS UtilTY,\n            IIF(tb.UtilLY = 0, 1, tb.UtilLY) AS UtilLY,\n            IIF(tb.MargenTY= 0, 1, tb.MargenTY) AS MargenTY,\n            IIF(tb.MargenLY = 0, 1, tb.MargenLY) AS MargenLY,\n            IIF(tb.DifParTYvsLY = 0, 1, tb.DifParTYvsLY) AS DifParTYvsLY,\n            IIF(tb.DifVtaTYvsLY = 0, 1, tb.DifVtaTYvsLY) AS DifVtaTYvsLY,\n            IIF(tb.DifMrgTYvsLY = 0, 1, tb.DifMrgTYvsLY) AS DifMrgTYvsLY,\n            IIF(tb.AvaUndParTY = 0, 1, tb.AvaUndParTY) AS AvaUndParTY,\n            IIF(tb.AvaVtaParTY = 0, 1, tb.AvaVtaParTY) AS AvaVtaParTY,\n            IIF(tb.AvaUndAccTY = 0, 1, tb.AvaUndAccTY) AS AvaUndAccTY,\n            IIF(tb.AvaVtaAccTY = 0, 1, tb.AvaVtaAccTY) AS AvaVtaAccTY,\n            IIF(tb.AvaUndTY = 0, 1, tb.AvaUndTY) AS AvaUndTY,\n            IIF(tb.AvaVtaTY = 0, 1, tb.AvaVtaTY) AS AvaVtaTY\n        FROM\n            #TVentasB1 AS tb\n\n        OPEN db_cursor\n        FETCH NEXT FROM db_cursor INTO\n            @Fecha,\n            @dia,\n            @NDiaSemana,\n            @UndParTY,\n            @UndAccTY,\n            @VtaParTY,\n            @VtaAccTY,\n            @UndParLY,\n            @UndAccLY,\n            @VtaParLY,\n            @VtaAccLY,\n            @CtoParTY,\n            @CtoAccTY,\n            @CtoParLY,\n            @CtoAccLY,\n            @unidadTY,\n            @ventaTY,\n            @unidadLY,\n            @ventaLY,\n            @costoTY,\n            @costoLY,\n            @CtaUndParTY,\n            @CtaVtaParTY,\n            @CtaUndAccTY,\n            @CtaVtaAccTY,\n            @CtaUndTY,\n            @CtaVtaTY,\n            @UtilTY,\n            @UtilLY,\n            @MargenTY,\n            @MargenLY,\n            @DifParTYvsLY,\n            @DifVtaTYvsLY,\n            @DifMrgTYvsLY,\n            @AvaUndParTY,\n            @AvaVtaParTY,\n            @AvaUndAccTY,\n            @AvaVtaAccTY,\n            @AvaUndTY,\n            @AvaVtaTY\n\n        WHILE @@FETCH_STATUS = 0\n        BEGIN\n\n            SET @hTML_Rpt_Diario += '&lt;tr&gt;'\n            SET @hTML_Rpt_Diario += '   &lt;td class=\"tg-pesd2\"&gt;' + LEFT(@NDiaSemana, 2) + '&lt;/td&gt;'\n            SET @hTML_Rpt_Diario += '   &lt;td class=\"tg-fzdr2\"&gt;' + CAST(@Dia AS VARCHAR) + '&lt;/td&gt;'\n            SET @hTML_Rpt_Diario += '   &lt;td class=\"tg-fzdr2\"&gt;' + CAST(FORMAT(@UndParTY, '###,###,###') AS VARCHAR) + '&lt;/td&gt;'\n            SET @hTML_Rpt_Diario += '   &lt;td class=\"tg-d4sb2\"&gt;' + CAST(FORMAT(@ventaTY, '###,###,###') AS VARCHAR) + '&lt;/td&gt;'\n            SET @hTML_Rpt_Diario += '   &lt;td class=\"tg-fzdr2\"&gt;' + CAST(FORMAT(@UtilTY, '###,###,###') AS VARCHAR) + ' &lt;/td&gt;'\n            SET @hTML_Rpt_Diario += '   &lt;td class=\"tg-fzdr2\"&gt;' + CAST(FORMAT(@CtaVtaTY, '###,###,###') AS VARCHAR) + ' &lt;/td&gt;'\n            PRINT @CtaVtaTY;\n            SET @hTML_Rpt_Diario += '   &lt;td class=\"' +\n\n            CASE\n                WHEN (((@ventaTY / @CtaVtaTY) * 100) &gt;= 95) THEN 'tg-rfq82'\n                WHEN ((@ventaTY / @CtaVtaTY) * 100) &gt;= 80  THEN 'tg-o0c02'\n                ELSE 'tg-ubmm2'\n            END \n            + '\"&gt;' + + CAST(ROUND(CAST((@ventaTY / @CtaVtaTY) * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR) + '%' + '&lt;/td&gt;'\n            SET @hTML_Rpt_Diario += '   &lt;td class=\"tg-fzdr2\"&gt;' + CAST(FORMAT(@ventaTY - @CtaVtaTY, '###,###,###') AS VARCHAR) + ' &lt;/td&gt;'\n            SET @hTML_Rpt_Diario += '   &lt;td class=\"tg-fzdr2\"&gt;' + CAST(ROUND(CAST(@MargenTY * 100 AS NUMERIC(10, 1)), 1) AS VARCHAR) + '%' + '&lt;/td&gt;'\n            SET @hTML_Rpt_Diario += '   &lt;td class=\"tg-fzdr2\"&gt;' + CAST(ROUND(CAST(@DifParTYvsLY * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR) + '%' + '&lt;/td&gt;'\n\n            SET @hTML_Rpt_Diario += '   &lt;td class=\"' +\n            CASE\n                WHEN (@DifVtaTYvsLY &gt;= 0.2058) THEN 'tg-rfq82'\n                WHEN (@DifVtaTYvsLY &gt;= 0 AND\n                    @DifVtaTYvsLY &lt; 0.2058) THEN 'tg-o0c02'\n                WHEN @DifVtaTYvsLY &lt; 0 THEN 'tg-ubmm2'\n            END \n            + '\"&gt;' + CAST(ROUND(CAST(@DifVtaTYvsLY * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR) + '%' + '&lt;/td&gt;'\n\n            SET @hTML_Rpt_Diario += '   &lt;td class=\"tg-fzdr2\"&gt;' + CAST(ROUND(CAST(@DifMrgTYvsLY * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR) + '%' + '&lt;/td&gt;'\n            SET @hTML_Rpt_Diario += '   &lt;td class=\"tg-fzdr2\"&gt;&lt;/td&gt;'\n            SET @hTML_Rpt_Diario += '   &lt;td class=\"tg-fzdr2\"&gt;' + CAST(FORMAT(@UndParTY, '###,###,###') AS VARCHAR) + '&lt;/td&gt;'\n            SET @hTML_Rpt_Diario += '   &lt;td class=\"tg-d4sb2\"&gt;' + CAST(FORMAT(@CtaUndParTY, '###,###,###') AS VARCHAR) + ' &lt;/td&gt;'\n            SET @hTML_Rpt_Diario += '   &lt;td class=\"tg-d4sb2\"&gt;' + CAST(ROUND(CAST(@AvaUndParTY * 100 AS NUMERIC(10, 0)), 0) AS VARCHAR) + '%' + '&lt;/td&gt;'\n            SET @hTML_Rpt_Diario += '   &lt;td class=\"tg-fzdr2\"&gt;' + CAST(FORMAT(@UndAccTY, '###,###,###') AS VARCHAR) + '&lt;/td&gt;'\n            SET @hTML_Rpt_Diario += '   &lt;td class=\"tg-d4sb2\"&gt;' + CAST(FORMAT(@CtaUndAccTY, '###,###,###') AS VARCHAR) + ' &lt;/td&gt;'\n            SET @hTML_Rpt_Diario += '   &lt;td class=\"tg-d4sb2\"&gt;' + CAST(ROUND(CAST(@AvaUndAccTY * 100 AS NUMERIC(10, 0)), 0) AS VARCHAR) + '%' + '&lt;/td&gt;'\n\n            SET @hTML_Rpt_Diario += '&lt;/tr&gt;'\n\n            -- Siguiente registro\n            FETCH NEXT FROM db_cursor INTO\n                   @Fecha\n                  ,@dia\n                  ,@NDiaSemana\n                  ,@UndParTY\n                  ,@UndAccTY\n                  ,@VtaParTY\n                  ,@VtaAccTY\n                  ,@UndParLY\n                  ,@UndAccLY\n                  ,@VtaParLY\n                  ,@VtaAccLY\n                  ,@CtoParTY\n                  ,@CtoAccTY\n                  ,@CtoParLY\n                  ,@CtoAccLY\n                  ,@unidadTY\n                  ,@ventaTY\n                  ,@unidadLY\n                  ,@ventaLY\n                  ,@costoTY\n                  ,@costoLY\n                  ,@CtaUndParTY\n                  ,@CtaVtaParTY\n                  ,@CtaUndAccTY\n                  ,@CtaVtaAccTY\n                  ,@CtaUndTY\n                  ,@CtaVtaTY\n                  ,@UtilTY\n                  ,@UtilLY\n                  ,@MargenTY\n                  ,@MargenLY\n                  ,@DifParTYvsLY\n                  ,@DifVtaTYvsLY\n                  ,@DifMrgTYvsLY\n                  ,@AvaUndParTY\n                  ,@AvaVtaParTY\n                  ,@AvaUndAccTY\n                  ,@AvaVtaAccTY\n                  ,@AvaUndTY\n                  ,@AvaVtaTY\n        END\n        CLOSE db_cursor\n        DEALLOCATE db_cursor\n\n        --\n        -- Impresi\u00f3n de FOOTER\n\n    SET @hTML_Rpt_Diario_AccPeq = ''\n    SET @hTML_Rpt_Diario_AccGra = ''\n    SET @hTML_Rpt_Diario_Pares = ''\n    SET @hTML_Rpt_Diario_Unids = ''\n    SET @hTML_Rpt_Diario_Monto = ''\n    SET @hTML_Rpt_Diario_Util = ''\n    SET @hTML_Rpt_Diario_Margen = ''\n    SET @hTML_Rpt_Diario_AccPTY = ''\n    SET @hTML_Rpt_Diario_AccGTY = ''\n    SET @hTML_Rpt_Diario_ParCTY = ''\n    SET @hTML_Rpt_Diario_UnidadesDif = ''\n    SET @hTML_Rpt_Diario_MontoDif = ''\n    SET @hTML_Rpt_Diario_UtilDif = ''\n    SET @hTML_Rpt_Diario_MontoCta = ''\n    SET @hTML_Rpt_Diario_AvanceCta = ''\n    SET @hTML_Rpt_Diario_White = ''\n\n    SET @hTML_Rpt_Diario_CuotaPar = ''\n    SET @hTML_Rpt_Diario_CuotaAcc = ''\n    SET @hTML_Rpt_Diario_AvanceCtaPar = ''\n    SET @hTML_Rpt_Diario_AvanceCtaAcc = ''\n\n    SET @hTML_Rpt_Diario_VtaMin = ''\n    SET @hTML_Rpt_Diario_CVtaMin = ''\n    SET @hTML_Rpt_Diario_VarVtaMin = ''\n\n    SET @hTML_Rpt_Diario += '\n                                    &lt;tr&gt;\n                                        &lt;td class=\"tg-pesd2\"&gt;&lt;/td&gt;\n                                        &lt;td class=\"tg-x0282\"&gt;Total&lt;/td&gt;\n                                '\n    SELECT\n      @hTML_Rpt_Diario_Unids = '&lt;td class=\"tg-x0282\"&gt;' + Unids + '&lt;/td&gt;'\n     ,@hTML_Rpt_Diario_Monto = '&lt;td class=\"tg-pksw2\"&gt;' + Monto + '&lt;/td&gt;'\n     ,@hTML_Rpt_Diario_Util = '&lt;td class=\"tg-x0282\"&gt;' + Util + '&lt;/td&gt;'\n     ,@hTML_Rpt_Diario_VtaMin = '&lt;td class=\"tg-x0282\"&gt;' + VtaMin + '&lt;/td&gt;'\n     ,@hTML_Rpt_Diario_CVtaMin = '&lt;td class=\"'\n      +\n      CASE\n        WHEN CAST(SUBSTRING(CVtaMin, 1, LEN(CVtaMin) - 1) AS DECIMAL(5,2)) &gt;= 95 THEN 'tg-rfq82'\n        WHEN CAST(SUBSTRING(CVtaMin, 1, LEN(CVtaMin) - 1) AS DECIMAL(5,2)) &gt;= 80 THEN 'tg-o0c02'\n        ELSE 'tg-ubmm2'\n    END\n      + '\"&gt;' + CVtaMin + '&lt;/td&gt;'\n     ,@hTML_Rpt_Diario_VarVtaMin = '&lt;td class=\"tg-x0282\"&gt;' + VarVtaMin + '&lt;/td&gt;'\n     ,@hTML_Rpt_Diario_Margen = '&lt;td class=\"tg-x0282\"&gt;' + Margen + '&lt;/td&gt;'\n      --,@hTML_Rpt_Diario_UnidadesDif='&lt;td class=\"tg-x028\"&gt;'+UnidadesDif+'&lt;/td&gt;'\n     ,@hTML_Rpt_Diario_UnidadesDif = '&lt;td class=\"tg-x0282\"&gt;' + UnidParCTY + '&lt;/td&gt;'\n     ,@hTML_Rpt_Diario_MontoDif = '&lt;td class=\"'\n      +\n      CASE\n        WHEN (MontoDifx &gt;= 0.2058) THEN 'tg-rfq82'\n        WHEN (MontoDifx &gt;= 0 AND\n          MontoDifx &lt; 0.2058) THEN 'tg-o0c02'\n        WHEN MontoDifx &lt; 0 THEN 'tg-ubmm2'\n      END\n      + '\"&gt;' + MontoDif + '&lt;/td&gt;'\n     ,@hTML_Rpt_Diario_UtilDif = '&lt;td class=\"tg-x0282\"&gt;' + UtilDif + '&lt;/td&gt;'\n      --,@hTML_Rpt_Diario_MontoCta='&lt;td class=\"tg-7l0w\"&gt;'+MontoCta+'&lt;/td&gt;'\n      --,@hTML_Rpt_Diario_AvanceCta='&lt;td class=\"tg-7l0w\"&gt;'+AvanceCta+'&lt;/td&gt;'\n\n     ,@hTML_Rpt_Diario_White = '&lt;td class=\"tg-fzdr2\"&gt;&lt;/td&gt;'\n\n     ,@hTML_Rpt_Diario_Pares = '&lt;td class=\"tg-x0282\"&gt;' + Pares + '&lt;/td&gt;'\n     ,@hTML_Rpt_Diario_CuotaPar = '&lt;td class=\"tg-7l0w2\"&gt;' + CuotaPar + '&lt;/td&gt;'\n     ,@hTML_Rpt_Diario_AvanceCtaPar = '&lt;td class=\"tg-7l0w2\"&gt;' + AvanceCtaPar + '&lt;/td&gt;'\n\n     ,@hTML_Rpt_Diario_AccGra = '&lt;td class=\"tg-x0282\"&gt;' + Accesorios + '&lt;/td&gt;'\n     ,@hTML_Rpt_Diario_CuotaAcc = '&lt;td class=\"tg-7l0w2\"&gt;' + CuotaAcc + '&lt;/td&gt;'\n     ,@hTML_Rpt_Diario_AvanceCtaAcc = '&lt;td class=\"tg-7l0w2\"&gt;' + AvanceCtaAcc + '&lt;/td&gt;'\n    FROM (SELECT\n       CAST(FORMAT(Accesorios, '###,###,###') AS VARCHAR(100)) AS Accesorios\n       ,CAST(FORMAT(Pares, '###,###,###') AS VARCHAR(100)) AS Pares\n       ,CAST(FORMAT(Unids, '###,###,###') AS VARCHAR(100)) AS Unids\n       ,CAST(FORMAT(Monto, '###,###,###') AS VARCHAR(100)) AS Monto\n       ,CAST(FORMAT(Util, '###,###,###') AS VARCHAR(100)) AS Util\n       ,CAST(FORMAT(VtaMin, '###,###,###') AS VARCHAR(100)) AS VtaMin\n       ,CAST(ROUND(CAST(CVtaMin * 100 AS NUMERIC(18, 2)), 2) AS VARCHAR(100)) + '%' AS CVtaMin\n       ,CAST(FORMAT(VarVtaMin, '###,###,###') AS VARCHAR(100)) AS VarVtaMin\n       ,CAST(ROUND(CAST(Margen * 100 AS NUMERIC(18, 2)), 2) AS VARCHAR(100)) + '%' AS Margen\n\n--        ,CAST(ROUND(CAST(UnidAccPTY * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR(100)) + '%' AS UnidAccPTY\n--        ,CAST(ROUND(CAST(UnidAccGTY * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR(100)) + '%' AS UnidAccGTY\n       ,CAST(ROUND(CAST(UnidParCTY * 100 AS NUMERIC(18, 2)), 2) AS VARCHAR(100)) + '%' AS UnidParCTY\n\n       ,CAST(ROUND(CAST(UnidadesDif * 100 AS NUMERIC(18, 2)), 2) AS VARCHAR(100)) + '%' AS UnidadesDif\n       ,CAST(ROUND(CAST(MontoDif * 100 AS NUMERIC(18, 2)), 2) AS VARCHAR(100)) + '%' AS MontoDif\n       ,MontoDif AS MontoDifx\n       ,CAST(ROUND(CAST(UtilDif * 100 AS NUMERIC(18, 2)), 2) AS VARCHAR(100)) + '%' AS UtilDif\n       ,CAST(FORMAT(MontoCta, '###,###,###') AS VARCHAR(100)) AS MontoCta\n       ,CAST(ROUND(CAST(AvanceCta * 100 AS NUMERIC(18, 1)), 1) AS VARCHAR(100)) + '%' AS AvanceCta\n\n       ,CAST(FORMAT(CuotaPar, '###,###,###') AS VARCHAR(100)) AS CuotaPar\n       ,CAST(FORMAT(CuotaAcc, '###,###,###') AS VARCHAR(100)) AS CuotaAcc\n       ,CAST(ROUND(CAST(AvanceCtaPar * 100 AS NUMERIC(18, 0)), 0) AS VARCHAR(100)) + '%' AS AvanceCtaPar\n       ,CAST(ROUND(CAST(AvanceCtaAcc * 100 AS NUMERIC(18, 0)), 0) AS VARCHAR(100)) + '%' AS AvanceCtaAcc\n      FROM (SELECT\n         SUM(a.UndAccTY) AS Accesorios\n         ,SUM(a.UndParTY) AS Pares\n         ,SUM(a.unidadTY) AS Unids\n         ,SUM(a.ventaTY) AS Monto\n         ,SUM(a.UtilTY) AS Util\n         ,SUM(a.CtaVtaTY) AS VtaMin\n         ,CASE WHEN SUM(a.CtaVtaTY)=0 THEN 0.00 ELSE (SUM(a.ventaTY) / IIF(SUM(a.CtaVtaTY) = 0, 1, SUM(a.CtaVtaTY) )) END AS CVtaMin\n         ,(SUM(a.ventaTY) - SUM(a.CtaVtaTY)) AS VarVtaMin\n         --,(SUM(a.UtilTY) / SUM(a.ventaTY)) AS Margen\n         ,CASE WHEN SUM(a.ventaTY)=0 THEN 0.00 ELSE (SUM(a.UtilTY) / IIF(SUM(a.ventaTY) = 0, 1, SUM(a.ventaTY))) END AS Margen\n\n         ,CAST(CAST(SUM(a.UndAccTY) AS NUMERIC(10, 2)) / CAST(IIF(SUM(a.UndAccLY) = 0, 1, SUM(a.UndAccLY) ) AS NUMERIC(10, 2)) - 1 AS NUMERIC(18, 4)) AS UnidAccGTY\n         ,CAST(CAST(SUM(a.UndParTY) AS NUMERIC(10, 2)) / CAST(IIF(SUM(a.UndParLY) = 0, 1, SUM(a.UndParLY)) AS NUMERIC(10, 2)) - 1 AS NUMERIC(18, 4)) AS UnidParCTY\n\n         ,CAST(CAST(SUM(a.unidadTY) AS NUMERIC(10, 2)) / CAST(IIF(SUM(a.unidadLY) = 0, 1, SUM(a.unidadLY)) AS NUMERIC(10, 2)) - 1 AS NUMERIC(18, 4)) AS UnidadesDif\n         ,(SUM(a.ventaTY) / IIF(SUM(a.ventaLY) = 0, 1, SUM(a.ventaLY)) ) - 1 AS MontoDif\n         ,(SUM(a.UtilTY) / IIF(SUM(a.UtilLY) = 0, 1, SUM(a.UtilLY)) ) - 1 AS UtilDif\n         ,SUM(a.CtaVtaTY) AS MontoCta\n         ,SUM(a.ventaTY) / SUM(a.CtaVtaTY) AS AvanceCta\n\n         ,SUM(a.CtaUndParTY) AS CuotaPar\n         ,SUM(a.CtaUndAccTY) AS CuotaAcc\n         ,CAST(IIF(SUM(CAST(a.CtaUndParTY AS FLOAT)) = 0, 0, SUM(CAST(a.UndParTY AS FLOAT)) / SUM(CAST(a.CtaUndParTY AS FLOAT))) AS NUMERIC(10, 4)) AS AvanceCtaPar\n         ,CAST(IIF(SUM(CAST(a.CtaUndAccTY AS FLOAT)) = 0, 0, (SUM(CAST(a.UndAccTY AS FLOAT))) / SUM(CAST(a.CtaUndAccTY AS FLOAT))) AS NUMERIC(10, 4)) AS AvanceCtaAcc\n      FROM #TVentasB1 AS a) AS A) AS A\n\n      --select * from #TVentasB1\n      --return\n            -- cr: info footer\n            SET @hTML_Rpt_Diario += CONCAT(\n            --@hTML_Rpt_Diario_Unids\n            @hTML_Rpt_Diario_Pares\n            , @hTML_Rpt_Diario_Monto\n            , @hTML_Rpt_Diario_Util\n            , @hTML_Rpt_Diario_VtaMin\n            , @hTML_Rpt_Diario_CVtaMin\n            , @hTML_Rpt_Diario_VarVtaMin\n            , @hTML_Rpt_Diario_Margen\n            , @hTML_Rpt_Diario_UnidadesDif\n            , @hTML_Rpt_Diario_MontoDif\n            , @hTML_Rpt_Diario_UtilDif\n            --,@hTML_Rpt_Diario_MontoCta\n            --,@hTML_Rpt_Diario_AvanceCta\n            , @hTML_Rpt_Diario_White\n            , @hTML_Rpt_Diario_Pares\n            , @hTML_Rpt_Diario_CuotaPar\n            , @hTML_Rpt_Diario_AvanceCtaPar\n            , @hTML_Rpt_Diario_AccGra\n            , @hTML_Rpt_Diario_CuotaAcc\n            , @hTML_Rpt_Diario_AvanceCtaAcc\n            ) + '&lt;/tr&gt;'\n\n            SET @asunto = 'VDM01 Venta diaria del mes, al ' + FORMAT(@fec, 'dd-MM-yyyy') + ' (SIN IGV)'\n            SET @tableHTML = ''\n\n            SET @v_VtaTY = (SELECT tb.ventaTY\n                                            FROM   #TVentasB1 AS tb\n                                            WHERE  tb.dia = DAY(@fec))\n            SET @v_VarVenTY = (SELECT tb.DifVtaTYvsLY\n                                                 FROM   #TVentasB1 AS tb\n                                                 WHERE  tb.dia = DAY(@fec))\n            SET @v_VtaLY = (SELECT tb.ventaLY\n                                            FROM   #TVentasB1 AS tb\n                                            WHERE  tb.dia = DAY(@fec))\n\n            SET @v_VtaTY = ISNULL(@v_VtaTY, 0)\n            SET @v_VarVenTY = ISNULL(@v_VarVenTY, 0)\n            SET @v_VtaLY = ISNULL(@v_VtaLY, 0)\n\n            SELECT\n                'TOTAL EMPRESA' AS [bloque]\n             ,@fec [@fec]\n             ,@v_VtaTY [@v_VtaTY]\n             ,@v_VarVenTY [@v_VarVenTY]\n             ,@v_VtaLY [@v_VtaLY];\n\n            SET @tableHTML = N'&lt;html&gt;'+\n                                         N'&lt;head&gt;'+\n                                             N'&lt;style type=\"text/css\"&gt;'+\n                                                 N'.tg  {border-collapse:collapse;border-spacing:0;height:10px;}'+\n                                                 N'.tg td{font-family:Arial, sans-serif;font-size:14px;padding:2px 0px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}'+\n                                                 N'.tg th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:2px 0px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;}'+\n                                                 N'.tg .tg-f7xs{font-weight:bold;background-color:#fe0000;color:#ffffff;border-color:#fe0000;text-align:center;vertical-align:top}'+\n                                                 N'.tg .tg-x028{font-weight:bold;background-color:#000000;color:#ffffff;border-color:#000000;text-align:center;vertical-align:top}'+\n                                                 N'.tg .tg-d4sb{background-color:#f79646;border-color:#f79646;text-align:center;vertical-align:top}'+\n                                                 N'.tg .tg-f60r{background-color:#e26b0a;border-color:#e26b0a;text-align:center;vertical-align:top}'+\n                                                 N'.tg .tg-ubmm{background-color:#ffc7ce;color:#9c0006;border-color:#c0c0c0;text-align:center;vertical-align:top}'+\n                                                 N'.tg .tg-9m3w{font-weight:bold;background-color:#f79646;border-color:#f79646;text-align:center;vertical-align:top}'+\n                                                 N'.tg .tg-pksw{font-weight:bold;background-color:#f79646;color:#ffffff;border-color:#f79646;text-align:center;vertical-align:top}'+\n                                                 N'.tg .tg-pesd{border-color:#c0c0c0;vertical-align:top}'+\n                                                 N'.tg .tg-fkia{font-weight:bold;background-color:#632523;color:#ffffff;border-color:#680100;text-align:center;vertical-align:top}'+\n                                                 N'.tg .tg-fzdr{border-color:#c0c0c0;text-align:center;vertical-align:top}'+\n                                                 N'.tg .tg-o0c0{background-color:#ffeb9c;color:#cf7e00;border-color:#c0c0c0;text-align:center;vertical-align:top}'+\n                                                 N'.tg .tg-rfq8{background-color:#c6efce;color:#226c49;border-color:#c0c0c0;text-align:center;vertical-align:top}'+\n                                                 N'.tg .tg-7l0w{font-weight:bold;background-color:#e26b0a;color:#ffffff;border-color:#e26b0a;text-align:center;vertical-align:top}'+\n\n                                                  N'.tg .tg-f7xs2{font-size:10px;padding:2px;font-weight:bold;background-color:#fe0000;color:#ffffff;border-color:#fe0000;text-align:center;vertical-align:top}'+\n                                                 N'.tg .tg-x0282{font-size:10px;padding:2px;font-weight:bold;background-color:#000000;color:#ffffff;border-color:#000000;text-align:center;vertical-align:top}'+\n                                                 N'.tg .tg-x0282n{font-size:10px;padding:2px;font-weight:bold;background-color:#faff00;color:#ff0000;border-color:#000000;text-align:center;vertical-align:top}'+\n                                                 N'.tg .tg-x0282nn{font-size:14px;padding:2px;font-weight:bold;background-color:#faff00;color:#ff0000;border-color:#000000;text-align:center;vertical-align:top}'+\n                                                 N'.tg .tg-d4sb2{font-size:10px;padding:2px;background-color:#f79646;border-color:#f79646;text-align:center;vertical-align:top}'+\n                                                 N'.tg .tg-f60r2{font-size:10px;padding:2px;background-color:#e26b0a;border-color:#e26b0a;text-align:center;vertical-align:top}'+\n                                                 N'.tg .tg-ubmm2{font-size:10px;padding:2px;background-color:#ffc7ce;color:#9c0006;border-color:#c0c0c0;text-align:center;vertical-align:top}'+\n                                                 N'.tg .tg-9m3w2{font-size:10px;padding:2px;font-weight:bold;background-color:#f79646;border-color:#f79646;text-align:center;vertical-align:top}'+\n                                                 N'.tg .tg-pksw2{font-size:10px;padding:2px;font-weight:bold;background-color:#f79646;color:#ffffff;border-color:#f79646;text-align:center;vertical-align:top}'+\n                                                 N'.tg .tg-pesd2{font-size:10px;padding:2px;border-color:#c0c0c0;vertical-align:top}'+\n                                                 N'.tg .tg-fkia2{font-size:10px;padding:2px;font-weight:bold;background-color:#632523;color:#ffffff;border-color:#680100;text-align:center;vertical-align:top}'+\n                                                 N'.tg .tg-fzdr2{font-size:10px;padding:2px;border-color:#c0c0c0;text-align:center;vertical-align:top}'+\n                                                 N'.tg .tg-o0c02{font-size:10px;padding:2px;background-color:#ffeb9c;color:#cf7e00;border-color:#c0c0c0;text-align:center;vertical-align:top}'+\n                                                 N'.tg .tg-rfq82{font-size:10px;padding:2px;background-color:#c6efce;color:#226c49;border-color:#c0c0c0;text-align:center;vertical-align:top}'+\n                                                 N'.tg .tg-7l0w2{font-size:10px;padding:2px;font-weight:bold;background-color:#e26b0a;color:#ffffff;border-color:#e26b0a;text-align:center;vertical-align:top}'+\n                                             N'&lt;/style&gt;'+\n                                         N'&lt;/head&gt;'+\n                                         N'&lt;body&gt;';\n\n            SET @tableHTML = @tableHTML +\n            N'&lt;div&gt;&lt;b&gt;Buenos d\u00edas.&lt;/b&gt;&lt;/div&gt;' +\n            N'&lt;br&gt;' +\n            N'&lt;div&gt;&lt;b&gt;VENTAS TOTAL EMPRESA AL '+ FORMAT(@fec, 'dd-MM-yyyy') + ' (S/) :&lt;/b&gt;&lt;/div&gt;&lt;br&gt;' +\n            N'&lt;div&gt;La venta total es de ' + CAST(FORMAT(@v_VtaTY, '###,###,###') AS VARCHAR(20)) + '; ' +\n            CASE \n                    WHEN @v_VtaLY&gt;0 THEN '&lt;b&gt;' + (CAST(ROUND(CAST(@v_VarVenTY * 100 AS NUMERIC(7, 2)), 2) AS VARCHAR(100)) + '%') + '&lt;/b&gt;  de diferencia con el a\u00f1o pasado  que  fue de ' + (CAST(FORMAT(@v_VtaLY, '###,###,###') AS VARCHAR(20)))\n                    ELSE ' Sin ventas registradas en a\u00f1o pasado'\n            END +' .&lt;div&gt;&lt;br&gt;' +\n            --(CAST(ROUND(CAST(@v_VarVenTY * 100 AS NUMERIC(7, 2)), 2) AS VARCHAR(100)) + '%') + '  de diferencia con el a\u00f1o pasado  que  fue de ' + (CAST(FORMAT(@v_VtaLY, '###,###,###') AS VARCHAR(20))) + ' .&lt;div&gt;&lt;br&gt;' +\n            --N'&lt;div&gt;&lt;b style=\"color:#FF0000\";&gt;A\u00f1o Base: 2024&lt;/b&gt;&lt;div&gt;&lt;br&gt;'+\n            N'&lt;div&gt;&lt;div&gt;&lt;br&gt;'+ \n            --N'&lt;div&gt;&lt;b&gt;Nomenclatura:&lt;/b&gt;&lt;br&gt;'+ \n            --N'&lt;b&gt;AccSec:&lt;/b&gt; Accesorios Secundarios o Menores&lt;br&gt;&lt;b&gt;AccPri:&lt;/b&gt; Accesorios Principales o Mayores&lt;br&gt;&lt;b&gt;Pares:&lt;/b&gt; Calzados&lt;div&gt;&lt;br&gt;'+ \n            N'&lt;table class=\"tg\" style=\"undefined;table-layout: auto; width: 100%;\"&gt;' +\n\n            N'&lt;colgroup&gt;' +\n            N'&lt;col style=\"width: auto;\"&gt;' +\n            N'&lt;col style=\"width: auto;\"&gt;' +\n\n            N'&lt;col style=\"width: auto;\"&gt;' +\n            N'&lt;col style=\"width: auto;\"&gt;' +\n            N'&lt;col style=\"width: auto;\"&gt;' +\n            N'&lt;col style=\"width: auto;\"&gt;' +\n\n            N'&lt;col style=\"width: auto;\"&gt;' +\n            N'&lt;col style=\"width: auto;\"&gt;' +\n            N'&lt;col style=\"width: auto;\"&gt;' +\n\n            --N'&lt;col style=\"width: 61px\"&gt;'+ \n            --N'&lt;col style=\"width: 68px\"&gt;'+ \n\n            N'&lt;col style=\"width: auto;\"&gt;' +\n\n            N'&lt;col style=\"width: auto;\"&gt;' +\n            N'&lt;col style=\"width: auto;\"&gt;' +\n            N'&lt;col style=\"width: auto;\"&gt;' +\n            N'&lt;col style=\"width: auto;\"&gt;' +\n            N'&lt;col style=\"width: auto;\"&gt;' +\n            N'&lt;col style=\"width: auto;\"&gt;' +\n            N'&lt;/colgroup&gt;' +\n\n            N'&lt;tr&gt;' +\n            N'&lt;th class=\"tg-pesd2\"&gt;&lt;/th&gt;' +\n            N'&lt;th class=\"tg-pesd2\"&gt;&lt;/th&gt;' +\n            N'&lt;th class=\"tg-fkia\" colspan=\"7\"&gt;2025&lt;/th&gt;' +\n            N'&lt;th class=\"tg-f7xs\" colspan=\"3\"&gt;DIFERENCIA&lt;/th&gt;' +\n            --N'&lt;th class=\"tg-9m3w\" colspan=\"2\"&gt;VENTA S/.&lt;/th&gt;'+\n            N'&lt;th class=\"tg-fzdr\" colspan=\"1\"&gt;  &lt;/th&gt;' +\n            N'&lt;th class=\"tg-7l0w\" colspan=\"6\"&gt;VENTA UNIDADES&lt;/th&gt;' +\n            N'&lt;/tr&gt;' +\n            N'&lt;tr&gt;' +\n            N'&lt;td class=\"tg-pesd2\"&gt;&lt;/td&gt;' +\n            N'&lt;td class=\"tg-x0282\"&gt;Dia&lt;/td&gt;' +\n            --N'&lt;td class=\"tg-x028\"&gt;AccSec&lt;/td&gt;'+ \n            --N'&lt;td class=\"tg-x028\"&gt;AccPri&lt;/td&gt;'+ \n            N'&lt;td class=\"tg-x0282\"&gt;Pares&lt;/td&gt;' +\n            N'&lt;td class=\"tg-x0282\"&gt;Monto&lt;/td&gt;' +\n            N'&lt;td class=\"tg-x0282\"&gt;U.B.&lt;/td&gt;' +\n            N'&lt;td class=\"tg-x0282n\"&gt;Vta M\u00ednima&lt;/td&gt;' +\n            N'&lt;td class=\"tg-x0282n\"&gt;% Cumpl&lt;/td&gt;' +\n            N'&lt;td class=\"tg-x0282n\"&gt;Var&lt;/td&gt;' +\n            N'&lt;td class=\"tg-x0282\"&gt;Margen&lt;/td&gt;' +\n\n            --N'&lt;td class=\"tg-x028\"&gt;AccSec&lt;/td&gt;'+ \n            --N'&lt;td class=\"tg-x028\"&gt;AccPri&lt;/td&gt;'+ \n            N'&lt;td class=\"tg-x0282\"&gt;Pares&lt;/td&gt;' +\n            --N'&lt;td class=\"tg-x028\"&gt;Unidades&lt;/td&gt;'+ \n\n            N'&lt;td class=\"tg-x0282\"&gt;Monto&lt;/td&gt;' +\n            N'&lt;td class=\"tg-x0282\"&gt;U.B.&lt;/td&gt;' +\n            --N'&lt;td class=\"tg-x028\"&gt;M\u00ednimo&lt;/td&gt;'+ \n            --N'&lt;td class=\"tg-x028\"&gt;Avance&lt;/td&gt;'+ \n            N'&lt;td class=\"tg-fzdr2\"&gt;&lt;/td&gt;' +\n            N'&lt;td class=\"tg-x0282\"&gt;Pares&lt;/td&gt;' +\n            N'&lt;td class=\"tg-x0282\"&gt;M\u00ednimo&lt;/td&gt;' +\n            N'&lt;td class=\"tg-x0282\"&gt;Avance&lt;/td&gt;' +\n            N'&lt;td class=\"tg-x0282\"&gt;Acces&lt;/td&gt;' +\n            N'&lt;td class=\"tg-x0282\"&gt;M\u00ednimo&lt;/td&gt;' +\n            N'&lt;td class=\"tg-x0282\"&gt;Avance&lt;/td&gt;' +\n            N'&lt;/tr&gt;' + @hTML_Rpt_Diario +\n            N'&lt;/table&gt;';\n        --  &lt;/body&gt;\n        --&lt;/html&gt;';\n\n\n        BEGIN   /* Tabla Temporal de detalle para Bloque 2 */\n\n            IF OBJECT_ID('tempdb..#TVentasB2') IS NOT NULL DROP TABLE #TVentasB2 ;\n            CREATE TABLE #TVentasB2\n            (\n                Fecha          DATE\n                 ,dia            INT\n                 ,NDiaSemana     VARCHAR(20)\n                 ,UndParTY       INT\n                 ,UndAccTY       INT\n                 ,VtaParTY       DECIMAL(10 ,2)\n                 ,VtaAccTY       DECIMAL(10 ,2)\n                 ,UndParLY       INT\n                 ,UndAccLY       INT\n                 ,VtaParLY       DECIMAL(10 ,2)\n                 ,VtaAccLY       DECIMAL(10 ,2)\n                 ,CtoParTY       DECIMAL(10 ,2)\n                 ,CtoAccTY       DECIMAL(10 ,2)\n                 ,CtoParLY       DECIMAL(10 ,2)\n                 ,CtoAccLY       DECIMAL(10 ,2)\n                 ,unidadTY       INT\n                 ,ventaTY        DECIMAL(10 ,2)\n                 ,unidadLY       INT\n                 ,ventaLY        DECIMAL(10 ,2)\n                 ,costoTY        DECIMAL(10 ,2)\n                 ,costoLY        DECIMAL(10 ,2)\n                 ,CtaVtaTYM      DECIMAL(10 ,2)\n\n                 ,UtilTY         AS ((VtaParTY+VtaAccTY)-(CtoParTY+CtoAccTY))\n                 ,UtilLY         AS ((VtaParLY+VtaAccLY)-(CtoParLY+CtoAccLY))\n                 ,MargenTY       AS (CASE WHEN (VtaParTY+VtaAccTY)=0 THEN 0.00 ELSE ((VtaParTY+VtaAccTY)-(CtoParTY+CtoAccTY))/(VtaParTY+VtaAccTY) END)\n                 ,MargenLY       AS (CASE WHEN (VtaParLY+VtaAccLY)=0 THEN 0.00 ELSE ((VtaParLY+VtaAccLY)-(CtoParLY+CtoAccLY))/(VtaParLY+VtaAccLY) END)\n                 ,DifParTYvsLY   AS (CASE WHEN (UndParLY)=0 THEN 0.00 ELSE ((CAST(UndParTY AS DECIMAL(10,2))/CAST(UndParLY AS DECIMAL(10,2)))-1) END)\n                 ,DifVtaTYvsLY   AS (CASE WHEN (VtaParLY+VtaAccLY)=0 THEN 0.00 ELSE (((VtaParTY+VtaAccTY)-(VtaParLY+VtaAccLY))/(VtaParLY+VtaAccLY)) END)\n                 ,DifMrgTYvsLY   AS (CASE WHEN ((VtaParLY+VtaAccLY)-(CtoParLY+CtoAccLY))=0 THEN 0.00 ELSE ((((VtaParTY+VtaAccTY)-(CtoParTY+CtoAccTY))/((VtaParLY+VtaAccLY)-(CtoParLY+CtoAccLY)))-1) END)\n\n            )\n\n        END\n\n\n        --\n        -- Bloque 2.1 RETAIL\n        BEGIN\n            DECLARE @hTML_Rpt_Diario_21 NVARCHAR(MAX) = '';\n\n            IF OBJECT_ID('tempdb..#TProyeccionRetail') IS NOT NULL DROP TABLE #TProyeccionRetail;\n        CREATE TABLE #TProyeccionRetail\n        (\n            Fecha           DATE\n           ,dia             INT\n           ,NDiaSemana      VARCHAR(20)\n           ,CtaUndParTY     INT\n           ,CtaVtaParTY     DECIMAL(10 ,2)\n           ,CtaUndAccTY     INT\n           ,CtaVtaAccTY     DECIMAL(10 ,2)\n           ,CtaUndTY        INT\n           ,CtaVtaTY        DECIMAL(10 ,2)\n        )\n            INSERT INTO #TProyeccionRetail\n        (\n            Fecha,\n            dia,\n            NDiaSemana,\n            CtaUndParTY,\n            CtaVtaParTY,\n            CtaUndAccTY,\n            CtaVtaAccTY,\n            CtaUndTY,\n            CtaVtaTY\n        )\n        SELECT\n            tv.Fecha,\n            tv.Dia,\n            tv.NDiaSemana,\n            SUM(vpv.Par) AS CtaUndParTY,\n            SUM(vpv.VtaPar_TY) AS CtaVtaParTY,\n            SUM(vpv.Acc) AS CtaUndAccTY,\n            SUM(vpv.VtaAcc_TY) AS CtaVtaAccTY,\n            SUM(vpv.Par)+SUM(vpv.Acc) AS CtaUndTY,\n            SUM(vpv.monto) AS CtaVtaTY\n        FROM\n            TiempoVersus AS tv\n        LEFT JOIN vw_proyecciones_TY AS vpv ON vpv.Fecha = tv.FechaSK\n        WHERE tv.Fecha BETWEEN @FechaIniTY AND @fec AND vpv.canal = 'Retail'\n        GROUP BY tv.Fecha, tv.Dia, tv.NDiaSemana\n\n            TRUNCATE TABLE #TVentasB2;\n\n            INSERT INTO #TVentasB2\n            (\n                Fecha,\n                dia,\n                NDiaSemana,\n                UndParTY,\n                UndAccTY,\n                VtaParTY,\n                VtaAccTY,\n                UndParLY,\n                UndAccLY,\n                VtaParLY,\n                VtaAccLY,\n                CtoParTY,\n                CtoAccTY,\n                CtoParLY,\n                CtoAccLY,\n                unidadTY,\n                ventaTY,\n                unidadLY,\n                ventaLY,\n                costoTY,\n                costoLY,\n                CtaVtaTYM\n            )\n            SELECT tv.Fecha\n                        ,tv.dia\n                        ,tv.NDiaSemana\n                        ,SUM(t.UndParTY)         AS UndParTY\n                        ,SUM(t.UndAccTY)         AS UndAccTY\n                        ,SUM(t.VtaParTY)         AS VtaParTY\n                        ,SUM(t.VtaAccTY)         AS VtaAccTY\n                        ,SUM(t.UndParLY)         AS UndParLY\n                        ,SUM(t.UndAccLY)         AS UndAccLY\n                        ,SUM(t.VtaParLY)         AS VtaParLY\n                        ,SUM(t.VtaAccLY)         AS VtaAccLY\n                        ,SUM(t.CtoParTY)         AS CtoParTY\n                        ,SUM(t.CtoAccTY)         AS CtoAccTY\n                        ,SUM(t.CtoParLY)         AS CtoParLY\n                        ,SUM(t.CtoAccLY)         AS CtoAccLY\n                        ,SUM(t.unidadTY)         AS unidadTY\n                        ,SUM(t.ventaTY)          AS ventaTY\n                        ,SUM(t.unidadLY)         AS unidadLY\n                        ,SUM(t.ventaLY)          AS ventaLY\n                        ,SUM(t.costoTY)          AS costoTY\n                        ,SUM(t.costoLY)          AS costoLY\n                        ,SUM(tr.CtaVtaTY)       AS CtaVtaTYM\n            FROM   TiempoVersus            AS tv\n                         LEFT JOIN #TVentas2     AS t\n                                    ON  t.Fecha = tv.Fecha\n                        LEFT JOIN #TProyeccionRetail  AS tr\n                    ON  tr.Fecha = t.Fecha\n            WHERE  tv.Fecha BETWEEN @FechaIniTY AND @fec\n            AND t.canal='Retail'\n            GROUP BY\n                         tv.Fecha\n                        ,tv.Dia\n                        ,tv.NDiaSemana\n\n            select * from #TVentasB2\n            SELECT * FROM #TVentas2\n            SELECT * FROM #TProyeccionRetail\n            --return\n\n            DECLARE db_cursor CURSOR FOR\n            SELECT\n                tb.Fecha,\n                tb.dia,\n                tb.NDiaSemana,\n                tb.UndParTY,\n                tb.UndAccTY,\n                tb.VtaParTY,\n                tb.VtaAccTY,\n                tb.UndParLY,\n                tb.UndAccLY,\n                tb.VtaParLY,\n                tb.VtaAccLY,\n                tb.CtoParTY,\n                tb.CtoAccTY,\n                tb.CtoParLY,\n                tb.CtoAccLY,\n                tb.unidadTY,\n                tb.ventaTY,\n                tb.unidadLY,\n                tb.ventaLY,\n                tb.costoTY,\n                tb.costoLY,\n                tb.CtaVtaTYM,\n                tb.UtilTY,\n                tb.UtilLY,\n                tb.MargenTY,\n                tb.MargenLY,\n                tb.DifParTYvsLY,\n                tb.DifVtaTYvsLY,\n                tb.DifMrgTYvsLY\n            FROM\n                #TVentasB2 AS tb\n\n            OPEN db_cursor\n            FETCH NEXT FROM db_cursor INTO\n                @Fecha,\n                @dia,\n                @NDiaSemana,\n                @UndParTY,\n                @UndAccTY,\n                @VtaParTY,\n                @VtaAccTY,\n                @UndParLY,\n                @UndAccLY,\n                @VtaParLY,\n                @VtaAccLY,\n                @CtoParTY,\n                @CtoAccTY,\n                @CtoParLY,\n                @CtoAccLY,\n                @unidadTY,\n                @ventaTY,\n                @unidadLY,\n                @ventaLY,\n                @costoTY,\n                @costoLY,\n                @CtaVtaTYMin,\n                @UtilTY,\n                @UtilLY,\n                @MargenTY,\n                @MargenLY,\n                @DifParTYvsLY,\n                @DifVtaTYvsLY,\n                @DifMrgTYvsLY\n\n            WHILE @@FETCH_STATUS = 0\n            BEGIN\n\n                SET @hTML_Rpt_Diario_21 += '&lt;tr&gt;'\n                SET @hTML_Rpt_Diario_21 += '    &lt;td class=\"tg-pesd\"&gt;' + LEFT(@NDiaSemana, 2) + '&lt;/td&gt;'\n                SET @hTML_Rpt_Diario_21 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(@Dia AS VARCHAR) + '&lt;/td&gt;'\n                SET @hTML_Rpt_Diario_21 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(FORMAT(@UndParTY, '###,###,###') AS VARCHAR) + '&lt;/td&gt;'\n                SET @hTML_Rpt_Diario_21 += '    &lt;td class=\"tg-d4sb\"&gt;' + CAST(FORMAT(@ventaTY, '###,###,###') AS VARCHAR) + '&lt;/td&gt;'\n                SET @hTML_Rpt_Diario_21 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(FORMAT(@UtilTY, '###,###,###') AS VARCHAR) + ' &lt;/td&gt;'\n                SET @hTML_Rpt_Diario_21 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(FORMAT(@CtaVtaTYMin, '###,###,###') AS VARCHAR) + ' &lt;/td&gt;'\n                SET @hTML_Rpt_Diario_21 += '    &lt;td class=\"' +\n                CASE\n                    WHEN @CtaVtaTYMin = 0 THEN 'tg-ubmm'\n                    WHEN (((@ventaTY / @CtaVtaTYMin) * 100) &gt;= 95) THEN 'tg-rfq8'\n                    WHEN ((@ventaTY / @CtaVtaTYMin) * 100) &gt;= 80  THEN 'tg-o0c0'\n                    ELSE 'tg-ubmm'\n                END \n                + '\"&gt;' + + CAST(ROUND(CAST((CASE WHEN @CtaVtaTYMin = 0 THEN 0.00 ELSE (@ventaTY / @CtaVtaTYMin) * 100 END) AS NUMERIC(10, 2)), 2) AS VARCHAR) + '%' + '&lt;/td&gt;'\n            SET @hTML_Rpt_Diario_21 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(FORMAT(@ventaTY - @CtaVtaTYMin, '###,###,###') AS VARCHAR) + ' &lt;/td&gt;'\n                SET @hTML_Rpt_Diario_21 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(ROUND(CAST(@MargenTY * 100 AS NUMERIC(10, 1)), 1) AS VARCHAR) + '%' + '&lt;/td&gt;'\n                SET @hTML_Rpt_Diario_21 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(ROUND(CAST(@DifParTYvsLY * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR) + '%' + '&lt;/td&gt;'\n\n                SET @hTML_Rpt_Diario_21 += '    &lt;td class=\"' +\n                CASE\n                    WHEN (@DifVtaTYvsLY &gt;= 0.2058) THEN 'tg-rfq8'\n                    WHEN (@DifVtaTYvsLY &gt;= 0 AND\n                        @DifVtaTYvsLY &lt; 0.2058) THEN 'tg-o0c0'\n                    WHEN @DifVtaTYvsLY &lt; 0 THEN 'tg-ubmm'\n                END\n                + '\"&gt;' + CAST(ROUND(CAST(@DifVtaTYvsLY * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR) + '%' + '&lt;/td&gt;'\n\n                SET @hTML_Rpt_Diario_21 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(ROUND(CAST(@DifMrgTYvsLY * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR) + '%' + '&lt;/td&gt;'\n--              SET @hTML_Rpt_Diario_21 += '    &lt;td class=\"tg-fzdr\"&gt;&lt;/td&gt;'\n--              SET @hTML_Rpt_Diario_21 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(FORMAT(@UndParTY, '###,###,###') AS VARCHAR) + '&lt;/td&gt;'\n--              SET @hTML_Rpt_Diario_21 += '    &lt;td class=\"tg-d4sb\"&gt;' + CAST(FORMAT(@CtaUndParTY, '###,###,###') AS VARCHAR) + ' &lt;/td&gt;'\n--              SET @hTML_Rpt_Diario_21 += '    &lt;td class=\"tg-d4sb\"&gt;' + CAST(ROUND(CAST(@AvaUndParTY * 100 AS NUMERIC(10, 0)), 0) AS VARCHAR) + '%' + '&lt;/td&gt;'\n--              SET @hTML_Rpt_Diario_21 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(FORMAT(@UndAccTY, '###,###,###') AS VARCHAR) + '&lt;/td&gt;'\n--              SET @hTML_Rpt_Diario_21 += '    &lt;td class=\"tg-d4sb\"&gt;' + CAST(FORMAT(@CtaUndAccTY, '###,###,###') AS VARCHAR) + ' &lt;/td&gt;'\n--              SET @hTML_Rpt_Diario_21 += '    &lt;td class=\"tg-d4sb\"&gt;' + CAST(ROUND(CAST(@AvaUndAccTY * 100 AS NUMERIC(10, 0)), 0) AS VARCHAR) + '%' + '&lt;/td&gt;'\n\n                SET @hTML_Rpt_Diario_21 += '&lt;/tr&gt;'\n\n                -- Siguiente registro\n                FETCH NEXT FROM db_cursor INTO\n                    @Fecha,\n                    @dia,\n                    @NDiaSemana,\n                    @UndParTY,\n                    @UndAccTY,\n                    @VtaParTY,\n                    @VtaAccTY,\n                    @UndParLY,\n                    @UndAccLY,\n                    @VtaParLY,\n                    @VtaAccLY,\n                    @CtoParTY,\n                    @CtoAccTY,\n                    @CtoParLY,\n                    @CtoAccLY,\n                    @unidadTY,\n                    @ventaTY,\n                    @unidadLY,\n                    @ventaLY,\n                    @costoTY,\n                    @costoLY,\n                    @CtaVtaTYMin,\n                    @UtilTY,\n                    @UtilLY,\n                    @MargenTY,\n                    @MargenLY,\n                    @DifParTYvsLY,\n                    @DifVtaTYvsLY,\n                    @DifMrgTYvsLY\n            END\n            CLOSE db_cursor\n            DEALLOCATE db_cursor\n\n            --\n            -- Impresi\u00f3n de FOOTER\n\n            SET @hTML_Rpt_Diario_AccPeq = ''\n            SET @hTML_Rpt_Diario_AccGra = ''\n            SET @hTML_Rpt_Diario_Pares = ''\n            SET @hTML_Rpt_Diario_Unids = ''\n            SET @hTML_Rpt_Diario_Monto = ''\n            SET @hTML_Rpt_Diario_Util = ''\n            SET @hTML_Rpt_Diario_VtaMin = ''\n            SET @hTML_Rpt_Diario_CVtaMIN = ''\n            SET @hTML_Rpt_Diario_VarVtaMin = ''\n            SET @hTML_Rpt_Diario_Margen = ''\n            SET @hTML_Rpt_Diario_AccPTY = ''\n            SET @hTML_Rpt_Diario_AccGTY = ''\n            SET @hTML_Rpt_Diario_ParCTY = ''\n            SET @hTML_Rpt_Diario_UnidadesDif = ''\n            SET @hTML_Rpt_Diario_MontoDif = ''\n            SET @hTML_Rpt_Diario_UtilDif = ''\n            SET @hTML_Rpt_Diario_MontoCta = ''\n            SET @hTML_Rpt_Diario_AvanceCta = ''\n            SET @hTML_Rpt_Diario_White = ''\n\n            SET @hTML_Rpt_Diario_CuotaPar = ''\n            SET @hTML_Rpt_Diario_CuotaAcc = ''\n            SET @hTML_Rpt_Diario_AvanceCtaPar = ''\n            SET @hTML_Rpt_Diario_AvanceCtaAcc = ''\n\n            SET @hTML_Rpt_Diario_21 += '\n                                        &lt;tr&gt;\n                                            &lt;td class=\"tg-pesd\"&gt;&lt;/td&gt;\n                                            &lt;td class=\"tg-x028\"&gt;Total&lt;/td&gt;\n                                        '\n            SELECT\n                @hTML_Rpt_Diario_Pares = '&lt;td class=\"tg-x028\"&gt;' + Pares + '&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_Monto = '&lt;td class=\"tg-pksw\"&gt;' + Monto + '&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_Util = '&lt;td class=\"tg-x028\"&gt;' + Util + '&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_VtaMin = '&lt;td class=\"tg-x028\"&gt;' + VtaMin + '&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_CVtaMin = '&lt;td class=\"'\n                +\n            CASE\n                WHEN CAST(SUBSTRING(CVtaMin, 1, LEN(CVtaMin) - 1) AS DECIMAL(5,2)) &gt;= 95 THEN 'tg-rfq8'\n                WHEN CAST(SUBSTRING(CVtaMin, 1, LEN(CVtaMin) - 1) AS DECIMAL(5,2)) &gt;= 80 THEN 'tg-o0c0'\n                ELSE 'tg-ubmm'\n            END\n            + '\"&gt;' + CVtaMin + '&lt;/td&gt;'\n            ,@hTML_Rpt_Diario_VarVtaMin = '&lt;td class=\"tg-x028\"&gt;' + VarVtaMin + '&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_Margen = '&lt;td class=\"tg-x028\"&gt;' + Margen + '&lt;/td&gt;'\n                --,@hTML_Rpt_Diario_UnidadesDif='&lt;td class=\"tg-x028\"&gt;'+UnidadesDif+'&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_UnidadesDif = '&lt;td class=\"tg-x028\"&gt;' + UnidParDif + '&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_MontoDif = '&lt;td class=\"'\n                +\n                CASE\n                    WHEN (MontoDifx &gt;= 0.2058) THEN 'tg-rfq8'\n                    WHEN (MontoDifx &gt;= 0 AND\n                        MontoDifx &lt; 0.2058) THEN 'tg-o0c0'\n                    WHEN MontoDifx &lt; 0 THEN 'tg-ubmm'\n                END\n                + '\"&gt;' + MontoDif + '&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_UtilDif = '&lt;td class=\"tg-x028\"&gt;' + UtilDif + '&lt;/td&gt;'\n                --,@hTML_Rpt_Diario_MontoCta='&lt;td class=\"tg-7l0w\"&gt;'+MontoCta+'&lt;/td&gt;'\n                --,@hTML_Rpt_Diario_AvanceCta='&lt;td class=\"tg-7l0w\"&gt;'+AvanceCta+'&lt;/td&gt;'\n\n             --,@hTML_Rpt_Diario_White = '&lt;td class=\"tg-fzdr\"&gt;&lt;/td&gt;'\n            FROM (SELECT\n                 CAST(FORMAT(Pares, '###,###,###') AS VARCHAR(100)) AS Pares\n                 ,CAST(FORMAT(Monto, '###,###,###') AS VARCHAR(100)) AS Monto\n                 ,CAST(FORMAT(Util, '###,###,###') AS VARCHAR(100)) AS Util\n                 ,CAST(FORMAT(VtaMin, '###,###,###') AS VARCHAR(100)) AS VtaMin\n                ,CAST(ROUND(CAST(CVtaMin * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR(100)) + '%' AS CVtaMin\n                ,CAST(FORMAT(VarVtaMin, '###,###,###') AS VARCHAR(100)) AS VarVtaMin\n                 ,CAST(ROUND(CAST(Margen * 100 AS NUMERIC(10, 1)), 1) AS VARCHAR(100)) + '%' AS Margen\n\n                 ,CAST(ROUND(CAST(UnidParDif * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR(100)) + '%' AS UnidParDif\n\n                 ,CAST(ROUND(CAST(UnidadesDif * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR(100)) + '%' AS UnidadesDif\n                 ,CAST(ROUND(CAST(MontoDif * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR(100)) + '%' AS MontoDif\n                 ,MontoDif AS MontoDifx\n                 ,CAST(ROUND(CAST(UtilDif * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR(100)) + '%' AS UtilDif\n                FROM (SELECT\n                     SUM(a.UndParTY) AS Pares\n                     ,SUM(a.ventaTY) AS Monto\n                     ,SUM(a.UtilTY) AS Util\n                     ,SUM(a.CtaVtaTYM) AS VtaMin\n                     ,CASE WHEN SUM(a.CtaVtaTYM)=0 THEN 0.00 ELSE (SUM(a.ventaTY) / SUM(a.CtaVtaTYM)) END AS CVtaMin\n                     ,(SUM(a.ventaTY) - SUM(a.CtaVtaTYM)) AS VarVtaMin\n                     --,(SUM(a.UtilTY) / SUM(a.ventaTY)) AS Margen\n                     ,CASE WHEN SUM(a.ventaTY)=0 THEN 0.00 ELSE (SUM(a.UtilTY) / SUM(a.ventaTY)) END AS Margen\n\n                     ,CASE WHEN CAST(SUM(a.UndAccLY) AS NUMERIC(10, 2))=0 THEN 0.00 ELSE CAST(CAST(SUM(a.UndAccTY) AS NUMERIC(10, 2)) / CAST(SUM(a.UndAccLY) AS NUMERIC(10, 2)) - 1 AS NUMERIC(7, 4)) END AS UnidAccDif\n                     ,CASE WHEN CAST(SUM(a.UndParLY) AS NUMERIC(10, 2))=0 THEN 0.00 ELSE CAST(CAST(SUM(a.UndParTY) AS NUMERIC(10, 2)) / CAST(SUM(a.UndParLY) AS NUMERIC(10, 2)) - 1 AS NUMERIC(7, 4)) END AS UnidParDif\n\n                     ,CASE WHEN CAST(SUM(a.unidadLY) AS NUMERIC(10, 2))=0 THEN 0.00 ELSE CAST(CAST(SUM(a.unidadTY) AS NUMERIC(10, 2)) / CAST(SUM(a.unidadLY) AS NUMERIC(10, 2)) - 1 AS NUMERIC(7, 4)) END AS UnidadesDif\n                     ,CASE WHEN SUM(a.ventaLY)=0 THEN 0.00 ELSE (SUM(a.ventaTY) / SUM(a.ventaLY)) - 1 END AS MontoDif\n                     ,CASE WHEN SUM(a.UtilLY)=0 THEN 0.00 ELSE (SUM(a.UtilTY) / SUM(a.UtilLY)) - 1 END AS UtilDif\n                FROM #TVentasB2 AS a) AS A) AS A\n\n                SET @hTML_Rpt_Diario_21 += CONCAT(\n                --@hTML_Rpt_Diario_Unids\n                @hTML_Rpt_Diario_Pares\n                , @hTML_Rpt_Diario_Monto\n                , @hTML_Rpt_Diario_Util\n                , @hTML_Rpt_Diario_VtaMin\n                , @hTML_Rpt_Diario_CVtaMin\n                , @hTML_Rpt_Diario_VarVtaMin\n                , @hTML_Rpt_Diario_Margen\n                , @hTML_Rpt_Diario_UnidadesDif\n                , @hTML_Rpt_Diario_MontoDif\n                , @hTML_Rpt_Diario_UtilDif\n                --,@hTML_Rpt_Diario_MontoCta\n                --,@hTML_Rpt_Diario_AvanceCta\n--              , @hTML_Rpt_Diario_White\n--              , @hTML_Rpt_Diario_Pares\n--              , @hTML_Rpt_Diario_CuotaPar\n--              , @hTML_Rpt_Diario_AvanceCtaPar\n--              , @hTML_Rpt_Diario_AccGra\n--              , @hTML_Rpt_Diario_CuotaAcc\n--              , @hTML_Rpt_Diario_AvanceCtaAcc\n                ) + '&lt;/tr&gt;'\n\n                --SET @tableHTML = ''\n\n                SET @v_VtaTY = (SELECT tb.ventaTY\n                                                FROM   #TVentasB2 AS tb\n                                                WHERE  tb.dia = DAY(@fec))\n                SET @v_VarVenTY = (SELECT tb.DifVtaTYvsLY\n                                                     FROM   #TVentasB2 AS tb\n                                                     WHERE  tb.dia = DAY(@fec))\n                SET @v_VtaLY = (SELECT tb.ventaLY\n                                                FROM   #TVentasB2 AS tb\n                                                WHERE  tb.dia = DAY(@fec))\n\n                SET @v_VtaTY = ISNULL(@v_VtaTY, 0)\n                SET @v_VarVenTY = ISNULL(@v_VarVenTY, 0)\n                SET @v_VtaLY = ISNULL(@v_VtaLY, 0)\n\n                SELECT\n                    'VENTA DEPORTIVO' AS [bloque]\n                 ,@fec [@fec]\n                 ,@v_VtaTY [@v_VtaTY]\n                 ,@v_VarVenTY [@v_VarVenTY]\n                 ,@v_VtaLY [@v_VtaLY];\n\n                SET @tableHTML = @tableHTML +\n                N'&lt;br&gt;&lt;br&gt;&lt;br&gt;' +\n                N'&lt;div&gt;&lt;b&gt;VENTA CANAL RETAIL: &lt;/b&gt;&lt;/div&gt;&lt;br&gt;' +\n                N'&lt;div&gt;La venta total es de ' + CAST(FORMAT(@v_VtaTY, '###,###,###') AS VARCHAR(20)) + '; ' + \n                CASE \n                        WHEN @v_VtaLY&gt;0 THEN '&lt;b&gt;' + (CAST(ROUND(CAST(@v_VarVenTY * 100 AS NUMERIC(7, 2)), 2) AS VARCHAR(100)) + '%') + '&lt;/b&gt;  de diferencia con el a\u00f1o pasado  que  fue de ' + (CAST(FORMAT(@v_VtaLY, '###,###,###') AS VARCHAR(20)))\n                        ELSE ' Sin ventas registradas en a\u00f1o pasado'\n                END + ' .&lt;div&gt;&lt;br&gt;' +\n                N'&lt;br&gt;' +\n                N'&lt;table class=\"tg\" style=\"undefined;table-layout: fixed; width: 751px\"&gt;' +\n\n                N'&lt;colgroup&gt;' +\n                N'&lt;col style=\"width: 40px\"&gt;' +\n                N'&lt;col style=\"width: 40px\"&gt;' +\n\n                N'&lt;col style=\"width: 60px\"&gt;' +\n                N'&lt;col style=\"width: 84px\"&gt;' +\n                N'&lt;col style=\"width: 84px\"&gt;' +\n                N'&lt;col style=\"width: 84px\"&gt;' +\n\n                N'&lt;col style=\"width: 80px\"&gt;' +\n                N'&lt;col style=\"width: 84px\"&gt;' +\n                N'&lt;col style=\"width: 61px\"&gt;' +\n\n                --N'&lt;col style=\"width: 61px\"&gt;'+ \n                --N'&lt;col style=\"width: 68px\"&gt;'+ \n\n                N'&lt;col style=\"width: 68px\"&gt;' +\n\n                N'&lt;col style=\"width: 70px\"&gt;' +\n                N'&lt;col style=\"width: 70px\"&gt;' +\n                N'&lt;col style=\"width: 60px\"&gt;' +\n                N'&lt;col style=\"width: 50px\"&gt;' +\n                N'&lt;col style=\"width: 60px\"&gt;' +\n                N'&lt;col style=\"width: 60px\"&gt;' +\n                N'&lt;/colgroup&gt;' +\n\n                N'&lt;tr&gt;' +\n                N'&lt;th class=\"tg-pesd\"&gt;&lt;/th&gt;' +\n                N'&lt;th class=\"tg-pesd\"&gt;&lt;/th&gt;' +\n                N'&lt;th class=\"tg-fkia\" colspan=\"7\"&gt;2025&lt;/th&gt;' +\n                N'&lt;th class=\"tg-f7xs\" colspan=\"3\"&gt;DIFERENCIA&lt;/th&gt;' +\n                --N'&lt;th class=\"tg-9m3w\" colspan=\"2\"&gt;VENTA S/.&lt;/th&gt;'+\n--              N'&lt;th class=\"tg-fzdr\" colspan=\"1\"&gt;  &lt;/th&gt;' +\n--              N'&lt;th class=\"tg-7l0w\" colspan=\"6\"&gt;VENTA UNIDADES&lt;/th&gt;' +\n                N'&lt;/tr&gt;' +\n                N'&lt;tr&gt;' +\n                N'&lt;td class=\"tg-pesd\"&gt;&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x028\"&gt;Dia&lt;/td&gt;' +\n                --N'&lt;td class=\"tg-x028\"&gt;AccSec&lt;/td&gt;'+ \n                --N'&lt;td class=\"tg-x028\"&gt;AccPri&lt;/td&gt;'+ \n                N'&lt;td class=\"tg-x028\"&gt;Pares&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x028\"&gt;Monto&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x028\"&gt;U.B.&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x0282nn\"&gt;Vta.M\u00ednima&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x0282nn\"&gt;% Cumpl&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x0282nn\"&gt;Var&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x028\"&gt;Margen&lt;/td&gt;' +\n\n                --N'&lt;td class=\"tg-x028\"&gt;AccSec&lt;/td&gt;'+ \n                --N'&lt;td class=\"tg-x028\"&gt;AccPri&lt;/td&gt;'+ \n                N'&lt;td class=\"tg-x028\"&gt;Pares&lt;/td&gt;' +\n                --N'&lt;td class=\"tg-x028\"&gt;Unidades&lt;/td&gt;'+ \n\n                N'&lt;td class=\"tg-x028\"&gt;Monto&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x028\"&gt;U.B.&lt;/td&gt;' +\n                --N'&lt;td class=\"tg-x028\"&gt;M\u00ednimo&lt;/td&gt;'+ \n                --N'&lt;td class=\"tg-x028\"&gt;Avance&lt;/td&gt;'+ \n--              N'&lt;td class=\"tg-fzdr\"&gt;&lt;/td&gt;' +\n--              N'&lt;td class=\"tg-x028\"&gt;Pares&lt;/td&gt;' +\n--              N'&lt;td class=\"tg-x028\"&gt;M\u00ednimo&lt;/td&gt;' +\n--              N'&lt;td class=\"tg-x028\"&gt;Avance&lt;/td&gt;' +\n--              N'&lt;td class=\"tg-x028\"&gt;Acces&lt;/td&gt;' +\n--              N'&lt;td class=\"tg-x028\"&gt;M\u00ednimo&lt;/td&gt;' +\n--              N'&lt;td class=\"tg-x028\"&gt;Avance&lt;/td&gt;' +\n                N'&lt;/tr&gt;' + @hTML_Rpt_Diario_21 +\n                N'&lt;/table&gt;';\n            --  &lt;/body&gt;\n            --&lt;/html&gt;';\n\n        END\n\n        --\n        -- Bloque 2.2 CATALOGO\n        BEGIN\n            DECLARE @hTML_Rpt_Diario_22 NVARCHAR(MAX) = '';\n\n            IF OBJECT_ID('tempdb..#TProyeccionCatalogo') IS NOT NULL DROP TABLE #TProyeccionCatalogo;\n        CREATE TABLE #TProyeccionCatalogo\n        (\n            Fecha           DATE\n           ,dia             INT\n           ,NDiaSemana      VARCHAR(20)\n           ,CtaUndParTY     INT\n           ,CtaVtaParTY     DECIMAL(10 ,2)\n           ,CtaUndAccTY     INT\n           ,CtaVtaAccTY     DECIMAL(10 ,2)\n           ,CtaUndTY        INT\n           ,CtaVtaTY        DECIMAL(10 ,2)\n        )\n            INSERT INTO #TProyeccionCatalogo\n        (\n            Fecha,\n            dia,\n            NDiaSemana,\n            CtaUndParTY,\n            CtaVtaParTY,\n            CtaUndAccTY,\n            CtaVtaAccTY,\n            CtaUndTY,\n            CtaVtaTY\n        )\n        SELECT\n            tv.Fecha,\n            tv.Dia,\n            tv.NDiaSemana,\n            SUM(vpv.Par) AS CtaUndParTY,\n            SUM(vpv.VtaPar_TY) AS CtaVtaParTY,\n            SUM(vpv.Acc) AS CtaUndAccTY,\n            SUM(vpv.VtaAcc_TY) AS CtaVtaAccTY,\n            SUM(vpv.Par)+SUM(vpv.Acc) AS CtaUndTY,\n            SUM(vpv.monto) AS CtaVtaTY\n        FROM\n            TiempoVersus AS tv\n        INNER JOIN vw_proyecciones_TY AS vpv ON vpv.Fecha = tv.FechaSK\n        WHERE tv.Fecha BETWEEN @FechaIniTY AND @fec AND vpv.canal = 'Cat\u00e1logo'\n        GROUP BY tv.Fecha, tv.Dia, tv.NDiaSemana\n\n            TRUNCATE TABLE #TVentasB2;\n\n            INSERT INTO #TVentasB2\n            (\n                Fecha,\n                dia,\n                NDiaSemana,\n                UndParTY,\n                UndAccTY,\n                VtaParTY,\n                VtaAccTY,\n                UndParLY,\n                UndAccLY,\n                VtaParLY,\n                VtaAccLY,\n                CtoParTY,\n                CtoAccTY,\n                CtoParLY,\n                CtoAccLY,\n                unidadTY,\n                ventaTY,\n                unidadLY,\n                ventaLY,\n                costoTY,\n                costoLY,\n                CtaVtaTYM\n            )\n            SELECT tv.Fecha\n                        ,tv.dia\n                        ,tv.NDiaSemana\n                        ,SUM(t.UndParTY)         AS UndParTY\n                        ,SUM(t.UndAccTY)         AS UndAccTY\n                        ,SUM(t.VtaParTY)         AS VtaParTY\n                        ,SUM(t.VtaAccTY)         AS VtaAccTY\n                        ,SUM(t.UndParLY)         AS UndParLY\n                        ,SUM(t.UndAccLY)         AS UndAccLY\n                        ,SUM(t.VtaParLY)         AS VtaParLY\n                        ,SUM(t.VtaAccLY)         AS VtaAccLY\n                        ,SUM(t.CtoParTY)         AS CtoParTY\n                        ,SUM(t.CtoAccTY)         AS CtoAccTY\n                        ,SUM(t.CtoParLY)         AS CtoParLY\n                        ,SUM(t.CtoAccLY)         AS CtoAccLY\n                        ,SUM(t.unidadTY)         AS unidadTY\n                        ,SUM(t.ventaTY)          AS ventaTY\n                        ,SUM(t.unidadLY)         AS unidadLY\n                        ,SUM(t.ventaLY)          AS ventaLY\n                        ,SUM(t.costoTY)          AS costoTY\n                        ,SUM(t.costoLY)          AS costoLY\n                        ,SUM(tr.CtaVtaTY)       AS CtaVtaTYM\n            FROM   TiempoVersus            AS tv\n                         LEFT JOIN #TVentas2     AS t\n                                    ON  t.Fecha = tv.Fecha\n                        LEFT JOIN #TProyeccionCatalogo  AS tr\n                    ON  tr.Fecha = t.Fecha\n            WHERE  tv.Fecha BETWEEN @FechaIniTY AND @fec\n            AND t.canal='Cat\u00e1logo'\n            GROUP BY\n                         tv.Fecha\n                        ,tv.Dia\n                        ,tv.NDiaSemana\n\n\n        select * from #TVentas1\n        select * from #TProyeccionCatalogo\n        select * from #TVentasB2\n\n            DECLARE db_cursor CURSOR FOR\n            SELECT\n                tb.Fecha,\n                tb.dia,\n                tb.NDiaSemana,\n                tb.UndParTY,\n                tb.UndAccTY,\n                tb.VtaParTY,\n                tb.VtaAccTY,\n                tb.UndParLY,\n                tb.UndAccLY,\n                tb.VtaParLY,\n                tb.VtaAccLY,\n                tb.CtoParTY,\n                tb.CtoAccTY,\n                tb.CtoParLY,\n                tb.CtoAccLY,\n                tb.unidadTY,\n                tb.ventaTY,\n                tb.unidadLY,\n                tb.ventaLY,\n                tb.costoTY,\n                tb.costoLY,\n                CtaVtaTYM,\n                tb.UtilTY,\n                tb.UtilLY,\n                tb.MargenTY,\n                tb.MargenLY,\n                tb.DifParTYvsLY,\n                tb.DifVtaTYvsLY,\n                tb.DifMrgTYvsLY\n            FROM\n                #TVentasB2 AS tb\n\n            OPEN db_cursor\n            FETCH NEXT FROM db_cursor INTO\n                @Fecha,\n                @dia,\n                @NDiaSemana,\n                @UndParTY,\n                @UndAccTY,\n                @VtaParTY,\n                @VtaAccTY,\n                @UndParLY,\n                @UndAccLY,\n                @VtaParLY,\n                @VtaAccLY,\n                @CtoParTY,\n                @CtoAccTY,\n                @CtoParLY,\n                @CtoAccLY,\n                @unidadTY,\n                @ventaTY,\n                @unidadLY,\n                @ventaLY,\n                @costoTY,\n                @costoLY,\n                @CtaVtaTYMin,\n                @UtilTY,\n                @UtilLY,\n                @MargenTY,\n                @MargenLY,\n                @DifParTYvsLY,\n                @DifVtaTYvsLY,\n                @DifMrgTYvsLY\n\n            WHILE @@FETCH_STATUS = 0\n            BEGIN\n\n                SET @hTML_Rpt_Diario_22 += '&lt;tr&gt;'\n                SET @hTML_Rpt_Diario_22 += '    &lt;td class=\"tg-pesd\"&gt;' + LEFT(@NDiaSemana, 2) + '&lt;/td&gt;'\n                SET @hTML_Rpt_Diario_22 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(@Dia AS VARCHAR) + '&lt;/td&gt;'\n                SET @hTML_Rpt_Diario_22 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(FORMAT(@UndParTY, '###,###,###') AS VARCHAR) + '&lt;/td&gt;'\n                SET @hTML_Rpt_Diario_22 += '    &lt;td class=\"tg-d4sb\"&gt;' + CAST(FORMAT(@ventaTY, '###,###,###') AS VARCHAR) + '&lt;/td&gt;'\n                SET @hTML_Rpt_Diario_22 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(FORMAT(@UtilTY, '###,###,###') AS VARCHAR) + ' &lt;/td&gt;'\n                SET @hTML_Rpt_Diario_22 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(FORMAT(@CtaVtaTYMin, '###,###,###') AS VARCHAR) + ' &lt;/td&gt;'\n                SET @hTML_Rpt_Diario_22 += '    &lt;td class=\"' +\n                /* MA: 2025-06-02 =&gt; Si no se tiene @CtaVtaTYMin o es menor que 1:  */\n                CASE\n                    WHEN @CtaVtaTYMin &lt; 1 THEN 'tg-ubmm'\n                    WHEN @CtaVtaTYMin &gt; 1 and (((@ventaTY / @CtaVtaTYMin) * 100) &gt;= 100) THEN 'tg-rfq8'\n                    WHEN @CtaVtaTYMin &gt; 1 and ((@ventaTY / @CtaVtaTYMin) * 100) &gt;= 80  THEN 'tg-o0c0'\n                    ELSE 'tg-ubmm'\n                END \n                    + '\"&gt;' + + CAST(ROUND(CAST((CASE WHEN @CtaVtaTYMin &lt; 1 THEN 0.00 ELSE (@ventaTY / @CtaVtaTYMin) * 100 END) AS NUMERIC(10, 2)), 2) AS VARCHAR) + '%' + '&lt;/td&gt;'\n                SET @hTML_Rpt_Diario_22 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(FORMAT(@ventaTY - @CtaVtaTYMin, '###,###,###') AS VARCHAR) + ' &lt;/td&gt;'\n                SET @hTML_Rpt_Diario_22 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(ROUND(CAST(@MargenTY * 100 AS NUMERIC(10, 1)), 1) AS VARCHAR) + '%' + '&lt;/td&gt;'\n                SET @hTML_Rpt_Diario_22 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(ROUND(CAST(@DifParTYvsLY * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR) + '%' + '&lt;/td&gt;'\n\n                SET @hTML_Rpt_Diario_22 += '    &lt;td class=\"' +\n                CASE\n                    WHEN (@DifVtaTYvsLY &gt;= 0.2058) THEN 'tg-rfq8'\n                    WHEN (@DifVtaTYvsLY &gt;= 0 AND\n                        @DifVtaTYvsLY &lt; 0.2058) THEN 'tg-o0c0'\n                    WHEN @DifVtaTYvsLY &lt; 0 THEN 'tg-ubmm'\n                END\n                + '\"&gt;' + CAST(ROUND(CAST(@DifVtaTYvsLY * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR) + '%' + '&lt;/td&gt;'\n\n                SET @hTML_Rpt_Diario_22 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(ROUND(CAST(@DifMrgTYvsLY * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR) + '%' + '&lt;/td&gt;'\n--              SET @hTML_Rpt_Diario_22 += '    &lt;td class=\"tg-fzdr\"&gt;&lt;/td&gt;'\n--              SET @hTML_Rpt_Diario_22 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(FORMAT(@UndParTY, '###,###,###') AS VARCHAR) + '&lt;/td&gt;'\n--              SET @hTML_Rpt_Diario_22 += '    &lt;td class=\"tg-d4sb\"&gt;' + CAST(FORMAT(@CtaUndParTY, '###,###,###') AS VARCHAR) + ' &lt;/td&gt;'\n--              SET @hTML_Rpt_Diario_22 += '    &lt;td class=\"tg-d4sb\"&gt;' + CAST(ROUND(CAST(@AvaUndParTY * 100 AS NUMERIC(10, 0)), 0) AS VARCHAR) + '%' + '&lt;/td&gt;'\n--              SET @hTML_Rpt_Diario_22 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(FORMAT(@UndAccTY, '###,###,###') AS VARCHAR) + '&lt;/td&gt;'\n--              SET @hTML_Rpt_Diario_22 += '    &lt;td class=\"tg-d4sb\"&gt;' + CAST(FORMAT(@CtaUndAccTY, '###,###,###') AS VARCHAR) + ' &lt;/td&gt;'\n--              SET @hTML_Rpt_Diario_22 += '    &lt;td class=\"tg-d4sb\"&gt;' + CAST(ROUND(CAST(@AvaUndAccTY * 100 AS NUMERIC(10, 0)), 0) AS VARCHAR) + '%' + '&lt;/td&gt;'\n\n                SET @hTML_Rpt_Diario_22 += '&lt;/tr&gt;'\n\n                -- Siguiente registro\n                FETCH NEXT FROM db_cursor INTO\n                    @Fecha,\n                    @dia,\n                    @NDiaSemana,\n                    @UndParTY,\n                    @UndAccTY,\n                    @VtaParTY,\n                    @VtaAccTY,\n                    @UndParLY,\n                    @UndAccLY,\n                    @VtaParLY,\n                    @VtaAccLY,\n                    @CtoParTY,\n                    @CtoAccTY,\n                    @CtoParLY,\n                    @CtoAccLY,\n                    @unidadTY,\n                    @ventaTY,\n                    @unidadLY,\n                    @ventaLY,\n                    @costoTY,\n                    @costoLY,\n                    @CtaVtaTYMin,\n                    @UtilTY,\n                    @UtilLY,\n                    @MargenTY,\n                    @MargenLY,\n                    @DifParTYvsLY,\n                    @DifVtaTYvsLY,\n                    @DifMrgTYvsLY\n            END\n            CLOSE db_cursor\n            DEALLOCATE db_cursor\n\n            --\n            -- Impresi\u00f3n de FOOTER\n            SET @hTML_Rpt_Diario_AccPeq = ''\n            SET @hTML_Rpt_Diario_AccGra = ''\n            SET @hTML_Rpt_Diario_Pares = ''\n            SET @hTML_Rpt_Diario_Unids = ''\n            SET @hTML_Rpt_Diario_Monto = ''\n            SET @hTML_Rpt_Diario_Util = ''\n            SET @hTML_Rpt_Diario_VtaMin = ''\n            SET @hTML_Rpt_Diario_CVtaMin = ''\n            SET @hTML_Rpt_Diario_VarVtaMin = ''\n            SET @hTML_Rpt_Diario_Margen = ''\n            SET @hTML_Rpt_Diario_AccPTY = ''\n            SET @hTML_Rpt_Diario_AccGTY = ''\n            SET @hTML_Rpt_Diario_ParCTY = ''\n            SET @hTML_Rpt_Diario_UnidadesDif = ''\n            SET @hTML_Rpt_Diario_MontoDif = ''\n            SET @hTML_Rpt_Diario_UtilDif = ''\n            SET @hTML_Rpt_Diario_MontoCta = ''\n            SET @hTML_Rpt_Diario_AvanceCta = ''\n            SET @hTML_Rpt_Diario_White = ''\n\n            SET @hTML_Rpt_Diario_CuotaPar = ''\n            SET @hTML_Rpt_Diario_CuotaAcc = ''\n            SET @hTML_Rpt_Diario_AvanceCtaPar = ''\n            SET @hTML_Rpt_Diario_AvanceCtaAcc = ''\n\n            SET @hTML_Rpt_Diario_22 += '\n                                        &lt;tr&gt;\n                                            &lt;td class=\"tg-pesd\"&gt;&lt;/td&gt;\n                                            &lt;td class=\"tg-x028\"&gt;Total&lt;/td&gt;\n                                        '\n            SELECT\n                @hTML_Rpt_Diario_Pares = '&lt;td class=\"tg-x028\"&gt;' + Pares + '&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_Monto = '&lt;td class=\"tg-pksw\"&gt;' + Monto + '&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_Util = '&lt;td class=\"tg-x028\"&gt;' + Util + '&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_VtaMin = '&lt;td class=\"tg-x028\"&gt;' + VtaMin + '&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_CVtaMin = '&lt;td class=\"'\n                +\n            CASE\n                WHEN CAST(SUBSTRING(CVtaMin, 1, LEN(CVtaMin) - 1) AS DECIMAL(5,2)) &gt;= 95 THEN 'tg-rfq8'\n                WHEN CAST(SUBSTRING(CVtaMin, 1, LEN(CVtaMin) - 1) AS DECIMAL(5,2)) &gt;= 80 THEN 'tg-o0c0'\n                ELSE 'tg-ubmm'\n            END\n                + '\"&gt;' + CVtaMin + '&lt;/td&gt;'\n            ,@hTML_Rpt_Diario_VarVtaMin = '&lt;td class=\"tg-x028\"&gt;' + VarVtaMin + '&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_Margen = '&lt;td class=\"tg-x028\"&gt;' + Margen + '&lt;/td&gt;'\n                --,@hTML_Rpt_Diario_UnidadesDif='&lt;td class=\"tg-x028\"&gt;'+UnidadesDif+'&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_UnidadesDif = '&lt;td class=\"tg-x028\"&gt;' + UnidParDif + '&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_MontoDif = '&lt;td class=\"'\n                +\n                CASE\n                    WHEN (MontoDifx &gt;= 0.2058) THEN 'tg-rfq8'\n                    WHEN (MontoDifx &gt;= 0 AND\n                        MontoDifx &lt; 0.2058) THEN 'tg-o0c0'\n                    WHEN MontoDifx &lt; 0 THEN 'tg-ubmm'\n                END\n                + '\"&gt;' + MontoDif + '&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_UtilDif = '&lt;td class=\"tg-x028\"&gt;' + UtilDif + '&lt;/td&gt;'\n                --,@hTML_Rpt_Diario_MontoCta='&lt;td class=\"tg-7l0w\"&gt;'+MontoCta+'&lt;/td&gt;'\n                --,@hTML_Rpt_Diario_AvanceCta='&lt;td class=\"tg-7l0w\"&gt;'+AvanceCta+'&lt;/td&gt;'\n\n             --,@hTML_Rpt_Diario_White = '&lt;td class=\"tg-fzdr\"&gt;&lt;/td&gt;'\n            FROM (SELECT\n                 CAST(FORMAT(Pares, '###,###,###') AS VARCHAR(100)) AS Pares\n                 ,CAST(FORMAT(Monto, '###,###,###') AS VARCHAR(100)) AS Monto\n                 ,CAST(FORMAT(Util, '###,###,###') AS VARCHAR(100)) AS Util\n                 ,CAST(FORMAT(VtaMin, '###,###,###') AS VARCHAR(100)) AS VtaMin\n                ,CAST(ROUND(CAST(CVtaMin * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR(100)) + '%' AS CVtaMin\n                ,CAST(FORMAT(VarVtaMin, '###,###,###') AS VARCHAR(100)) AS VarVtaMin\n                 ,CAST(ROUND(CAST(Margen * 100 AS NUMERIC(10, 1)), 1) AS VARCHAR(100)) + '%' AS Margen\n\n                 ,CAST(ROUND(CAST(UnidParDif * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR(100)) + '%' AS UnidParDif\n\n                 ,CAST(ROUND(CAST(UnidadesDif * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR(100)) + '%' AS UnidadesDif\n                 ,CAST(ROUND(CAST(MontoDif * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR(100)) + '%' AS MontoDif\n                 ,MontoDif AS MontoDifx\n                 ,CAST(ROUND(CAST(UtilDif * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR(100)) + '%' AS UtilDif\n                FROM (SELECT\n                     SUM(a.UndParTY) AS Pares\n                     ,SUM(a.ventaTY) AS Monto\n                     ,SUM(a.UtilTY) AS Util\n                     ,SUM(a.CtaVtaTYM) AS VtaMin\n                     ,CASE WHEN SUM(a.CtaVtaTYM)&lt;1 THEN 0.00 ELSE (SUM(a.ventaTY) / SUM(a.CtaVtaTYM)) END AS CVtaMin\n                     ,(SUM(a.ventaTY) - SUM(a.CtaVtaTYM)) AS VarVtaMin\n\n                     --,(SUM(a.UtilTY) / SUM(a.ventaTY)) AS Margen\n                     ,CASE WHEN SUM(a.ventaTY) = 0 THEN 0.00 ELSE SUM(a.UtilTY) / SUM(a.ventaTY) END AS Margen\n\n\n                     ,CASE WHEN CAST(SUM(a.UndAccLY) AS NUMERIC(10, 2))=0 THEN 0.00 ELSE CAST(CAST(SUM(a.UndAccTY) AS NUMERIC(10, 2)) / CAST(SUM(a.UndAccLY) AS NUMERIC(10, 2)) - 1 AS NUMERIC(7, 4)) END AS UnidAccDif\n                     ,CASE WHEN CAST(SUM(a.UndParLY) AS NUMERIC(10, 2))=0 THEN 0.00 ELSE CAST(CAST(SUM(a.UndParTY) AS NUMERIC(10, 2)) / CAST(SUM(a.UndParLY) AS NUMERIC(10, 2)) - 1 AS NUMERIC(7, 4)) END AS UnidParDif\n\n                     ,CASE WHEN CAST(SUM(a.unidadLY) AS NUMERIC(10, 2))=0 THEN 0.00 ELSE CAST(CAST(SUM(a.unidadTY) AS NUMERIC(10, 2)) / CAST(SUM(a.unidadLY) AS NUMERIC(10, 2)) - 1 AS NUMERIC(7, 4)) END AS UnidadesDif\n                     ,CASE WHEN SUM(a.ventaLY)=0 THEN 0.00 ELSE (SUM(a.ventaTY) / SUM(a.ventaLY)) - 1 END AS MontoDif\n                     ,CASE WHEN SUM(a.UtilLY)=0 THEN 0.00 ELSE (SUM(a.UtilTY) / SUM(a.UtilLY)) - 1 END AS UtilDif\n                FROM #TVentasB2 AS a) AS A) AS A\n\n                SET @hTML_Rpt_Diario_22 += CONCAT(\n                --@hTML_Rpt_Diario_Unids\n                @hTML_Rpt_Diario_Pares\n                , @hTML_Rpt_Diario_Monto\n                , @hTML_Rpt_Diario_Util\n                , @hTML_Rpt_Diario_VtaMin\n                , @hTML_Rpt_Diario_CVtaMin\n                , @hTML_Rpt_Diario_VarVtaMin\n                , @hTML_Rpt_Diario_Margen\n                , @hTML_Rpt_Diario_UnidadesDif\n                , @hTML_Rpt_Diario_MontoDif\n                , @hTML_Rpt_Diario_UtilDif\n                --,@hTML_Rpt_Diario_MontoCta\n                --,@hTML_Rpt_Diario_AvanceCta\n--              , @hTML_Rpt_Diario_White\n--              , @hTML_Rpt_Diario_Pares\n--              , @hTML_Rpt_Diario_CuotaPar\n--              , @hTML_Rpt_Diario_AvanceCtaPar\n--              , @hTML_Rpt_Diario_AccGra\n--              , @hTML_Rpt_Diario_CuotaAcc\n--              , @hTML_Rpt_Diario_AvanceCtaAcc\n                ) + '&lt;/tr&gt;'\n\n                --SET @tableHTML = ''\n\n                SET @v_VtaTY = (SELECT tb.ventaTY\n                                                FROM   #TVentasB2 AS tb\n                                                WHERE  tb.dia = DAY(@fec))\n                SET @v_VarVenTY = (SELECT tb.DifVtaTYvsLY\n                                                     FROM   #TVentasB2 AS tb\n                                                     WHERE  tb.dia = DAY(@fec))\n                SET @v_VtaLY = (SELECT tb.ventaLY\n                                                FROM   #TVentasB2 AS tb\n                                                WHERE  tb.dia = DAY(@fec))\n\n                SET @v_VtaTY = ISNULL(@v_VtaTY, 0)\n                SET @v_VarVenTY = ISNULL(@v_VarVenTY, 0)\n                SET @v_VtaLY = ISNULL(@v_VtaLY, 0)\n\n                SELECT\n                    'VENTA CANAL CATALOGO' AS [bloque]\n                 ,@fec [@fec]\n                 ,@v_VtaTY [@v_VtaTY]\n                 ,@v_VarVenTY [@v_VarVenTY]\n                 ,@v_VtaLY [@v_VtaLY];\n\n                SET @tableHTML = @tableHTML +\n                N'&lt;br&gt;&lt;br&gt;&lt;br&gt;' +\n                N'&lt;div&gt;&lt;b&gt;VENTA CANAL CATALOGO: &lt;/b&gt;&lt;/div&gt;&lt;br&gt;' +\n                N'&lt;div&gt;La venta total es de ' + CAST(FORMAT(@v_VtaTY, '###,###,###') AS VARCHAR(20)) + '; ' + \n                CASE \n                        WHEN @v_VtaLY&gt;0 THEN '&lt;b&gt;' + (CAST(ROUND(CAST(@v_VarVenTY * 100 AS NUMERIC(7, 2)), 2) AS VARCHAR(100)) + '%') + '&lt;/b&gt;  de diferencia con el a\u00f1o pasado  que  fue de ' + (CAST(FORMAT(@v_VtaLY, '###,###,###') AS VARCHAR(20)))\n                        ELSE ' Sin ventas registradas en a\u00f1o pasado'\n                END + ' .&lt;div&gt;&lt;br&gt;' +\n                N'&lt;br&gt;' +\n                N'&lt;table class=\"tg\" style=\"undefined;table-layout: fixed; width: 751px\"&gt;' +\n\n                N'&lt;colgroup&gt;' +\n                N'&lt;col style=\"width: 40px\"&gt;' +\n                N'&lt;col style=\"width: 48px\"&gt;' +\n\n                N'&lt;col style=\"width: 48px\"&gt;' +\n                N'&lt;col style=\"width: 84px\"&gt;' +\n                N'&lt;col style=\"width: 80px\"&gt;' +\n                N'&lt;col style=\"width: 90px\"&gt;' +\n\n                N'&lt;col style=\"width: 80px\"&gt;' +\n                N'&lt;col style=\"width: 70px\"&gt;' +\n                N'&lt;col style=\"width: 61px\"&gt;' +\n\n                --N'&lt;col style=\"width: 61px\"&gt;'+ \n                --N'&lt;col style=\"width: 68px\"&gt;'+ \n\n                N'&lt;col style=\"width: 70px\"&gt;' +\n\n                N'&lt;col style=\"width: 70px\"&gt;' +\n                N'&lt;col style=\"width: 70px\"&gt;' +\n                N'&lt;col style=\"width: 60px\"&gt;' +\n                N'&lt;col style=\"width: 50px\"&gt;' +\n                N'&lt;col style=\"width: 60px\"&gt;' +\n                N'&lt;col style=\"width: 60px\"&gt;' +\n                N'&lt;/colgroup&gt;' +\n\n                N'&lt;tr&gt;' +\n                N'&lt;th class=\"tg-pesd\"&gt;&lt;/th&gt;' +\n                N'&lt;th class=\"tg-pesd\"&gt;&lt;/th&gt;' +\n                N'&lt;th class=\"tg-fkia\" colspan=\"7\"&gt;2025&lt;/th&gt;' +\n                N'&lt;th class=\"tg-f7xs\" colspan=\"3\"&gt;DIFERENCIA&lt;/th&gt;' +\n                --N'&lt;th class=\"tg-9m3w\" colspan=\"2\"&gt;VENTA S/.&lt;/th&gt;'+\n--              N'&lt;th class=\"tg-fzdr\" colspan=\"1\"&gt;  &lt;/th&gt;' +\n--              N'&lt;th class=\"tg-7l0w\" colspan=\"6\"&gt;VENTA UNIDADES&lt;/th&gt;' +\n                N'&lt;/tr&gt;' +\n                N'&lt;tr&gt;' +\n                N'&lt;td class=\"tg-pesd\"&gt;&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x028\"&gt;Dia&lt;/td&gt;' +\n                --N'&lt;td class=\"tg-x028\"&gt;AccSec&lt;/td&gt;'+ \n                --N'&lt;td class=\"tg-x028\"&gt;AccPri&lt;/td&gt;'+ \n                N'&lt;td class=\"tg-x028\"&gt;Pares&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x028\"&gt;Monto&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x028\"&gt;U.B.&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x0282nn\"&gt;Vta M\u00ednima&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x0282nn\"&gt;% Cumpl&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x0282nn\"&gt;Var&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x028\"&gt;Margen&lt;/td&gt;' +\n\n                --N'&lt;td class=\"tg-x028\"&gt;AccSec&lt;/td&gt;'+ \n                --N'&lt;td class=\"tg-x028\"&gt;AccPri&lt;/td&gt;'+ \n                N'&lt;td class=\"tg-x028\"&gt;Pares&lt;/td&gt;' +\n                --N'&lt;td class=\"tg-x028\"&gt;Unidades&lt;/td&gt;'+ \n\n                N'&lt;td class=\"tg-x028\"&gt;Monto&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x028\"&gt;U.B.&lt;/td&gt;' +\n                --N'&lt;td class=\"tg-x028\"&gt;M\u00ednimo&lt;/td&gt;'+ \n                --N'&lt;td class=\"tg-x028\"&gt;Avance&lt;/td&gt;'+ \n--              N'&lt;td class=\"tg-fzdr\"&gt;&lt;/td&gt;' +\n--              N'&lt;td class=\"tg-x028\"&gt;Pares&lt;/td&gt;' +\n--              N'&lt;td class=\"tg-x028\"&gt;M\u00ednimo&lt;/td&gt;' +\n--              N'&lt;td class=\"tg-x028\"&gt;Avance&lt;/td&gt;' +\n--              N'&lt;td class=\"tg-x028\"&gt;Acces&lt;/td&gt;' +\n--              N'&lt;td class=\"tg-x028\"&gt;M\u00ednimo&lt;/td&gt;' +\n--              N'&lt;td class=\"tg-x028\"&gt;Avance&lt;/td&gt;' +\n                N'&lt;/tr&gt;' + @hTML_Rpt_Diario_22 +\n                N'&lt;/table&gt;';\n            --  &lt;/body&gt;\n            --&lt;/html&gt;';\n\n        END\n\n        --\n        -- Bloque 2.3 Canal E-Commerce\n        IF 1=1\n        BEGIN\n            DECLARE @hTML_Rpt_Diario_23 NVARCHAR(MAX) = '';\n\n            IF OBJECT_ID('tempdb..#TProyeccionEcommerce') IS NOT NULL DROP TABLE #TProyeccionEcommerce;\n        CREATE TABLE #TProyeccionEcommerce\n        (\n            Fecha           DATE\n           ,dia             INT\n           ,NDiaSemana      VARCHAR(20)\n           ,CtaUndParTY     INT\n           ,CtaVtaParTY     DECIMAL(10 ,2)\n           ,CtaUndAccTY     INT\n           ,CtaVtaAccTY     DECIMAL(10 ,2)\n           ,CtaUndTY        INT\n           ,CtaVtaTY        DECIMAL(10 ,2)\n        )\n            INSERT INTO #TProyeccionEcommerce\n        (\n            Fecha,\n            dia,\n            NDiaSemana,\n            CtaUndParTY,\n            CtaVtaParTY,\n            CtaUndAccTY,\n            CtaVtaAccTY,\n            CtaUndTY,\n            CtaVtaTY\n        )\n        SELECT\n            tv.Fecha,\n            tv.Dia,\n            tv.NDiaSemana,\n            SUM(vpv.Par) AS CtaUndParTY,\n            SUM(vpv.VtaPar_TY) AS CtaVtaParTY,\n            SUM(vpv.Acc) AS CtaUndAccTY,\n            SUM(vpv.VtaAcc_TY) AS CtaVtaAccTY,\n            SUM(vpv.Par)+SUM(vpv.Acc) AS CtaUndTY,\n            SUM(vpv.monto) AS CtaVtaTY\n        FROM\n            TiempoVersus AS tv\n        INNER JOIN vw_proyecciones_TY AS vpv ON vpv.Fecha = tv.FechaSK\n        WHERE tv.Fecha BETWEEN @FechaIniTY AND @fec AND vpv.canal = 'E-commerce'\n        GROUP BY tv.Fecha, tv.Dia, tv.NDiaSemana\n\n            TRUNCATE TABLE #TVentasB2;\n\n            INSERT INTO #TVentasB2\n            (\n                Fecha,\n                dia,\n                NDiaSemana,\n                UndParTY,\n                UndAccTY,\n                VtaParTY,\n                VtaAccTY,\n                UndParLY,\n                UndAccLY,\n                VtaParLY,\n                VtaAccLY,\n                CtoParTY,\n                CtoAccTY,\n                CtoParLY,\n                CtoAccLY,\n                unidadTY,\n                ventaTY,\n                unidadLY,\n                ventaLY,\n                costoTY,\n                costoLY,\n                CtaVtaTYM\n            )\n            SELECT tv.Fecha\n                        ,tv.dia\n                        ,tv.NDiaSemana\n                        ,SUM(t.UndParTY)         AS UndParTY\n                        ,SUM(t.UndAccTY)         AS UndAccTY\n                        ,SUM(t.VtaParTY)         AS VtaParTY\n                        ,SUM(t.VtaAccTY)         AS VtaAccTY\n                        ,SUM(t.UndParLY)         AS UndParLY\n                        ,SUM(t.UndAccLY)         AS UndAccLY\n                        ,SUM(t.VtaParLY)         AS VtaParLY\n                        ,SUM(t.VtaAccLY)         AS VtaAccLY\n                        ,SUM(t.CtoParTY)         AS CtoParTY\n                        ,SUM(t.CtoAccTY)         AS CtoAccTY\n                        ,SUM(t.CtoParLY)         AS CtoParLY\n                        ,SUM(t.CtoAccLY)         AS CtoAccLY\n                        ,SUM(t.unidadTY)         AS unidadTY\n                        ,SUM(t.ventaTY)          AS ventaTY\n                        ,SUM(t.unidadLY)         AS unidadLY\n                        ,SUM(t.ventaLY)          AS ventaLY\n                        ,SUM(t.costoTY)          AS costoTY\n                        ,SUM(t.costoLY)          AS costoLY\n                        ,SUM(ISNULL(tr.CtaVtaTY, 1))        AS CtaVtaTYM\n            FROM   TiempoVersus            AS tv\n                         LEFT JOIN #TVentas2     AS t\n                                    ON  t.Fecha = tv.Fecha\n                        LEFT JOIN #TProyeccionEcommerce  AS tr\n                    ON  tr.Fecha = t.Fecha\n            WHERE  tv.Fecha BETWEEN @FechaIniTY AND @fec\n            AND t.canal='E-commerce'\n            GROUP BY\n                         tv.Fecha\n                        ,tv.Dia\n                        ,tv.NDiaSemana\n\n            select * from #TVentasB2\n\n            DECLARE db_cursor CURSOR FOR\n            SELECT\n                tb.Fecha,\n                tb.dia,\n                tb.NDiaSemana,\n                tb.UndParTY,\n                tb.UndAccTY,\n                tb.VtaParTY,\n                tb.VtaAccTY,\n                tb.UndParLY,\n                tb.UndAccLY,\n                tb.VtaParLY,\n                tb.VtaAccLY,\n                tb.CtoParTY,\n                tb.CtoAccTY,\n                tb.CtoParLY,\n                tb.CtoAccLY,\n                tb.unidadTY,\n                tb.ventaTY,\n                tb.unidadLY,\n                tb.ventaLY,\n                tb.costoTY,\n                tb.costoLY,\n                tb.CtaVtaTYM,\n                tb.UtilTY,\n                tb.UtilLY,\n                tb.MargenTY,\n                tb.MargenLY,\n                tb.DifParTYvsLY,\n                tb.DifVtaTYvsLY,\n                tb.DifMrgTYvsLY\n            FROM\n                #TVentasB2 AS tb\n\n            OPEN db_cursor\n            FETCH NEXT FROM db_cursor INTO\n                @Fecha,\n                @dia,\n                @NDiaSemana,\n                @UndParTY,\n                @UndAccTY,\n                @VtaParTY,\n                @VtaAccTY,\n                @UndParLY,\n                @UndAccLY,\n                @VtaParLY,\n                @VtaAccLY,\n                @CtoParTY,\n                @CtoAccTY,\n                @CtoParLY,\n                @CtoAccLY,\n                @unidadTY,\n                @ventaTY,\n                @unidadLY,\n                @ventaLY,\n                @costoTY,\n                @costoLY,\n                @CtaVtaTYMin,\n                @UtilTY,\n                @UtilLY,\n                @MargenTY,\n                @MargenLY,\n                @DifParTYvsLY,\n                @DifVtaTYvsLY,\n                @DifMrgTYvsLY\n\n            WHILE @@FETCH_STATUS = 0\n            BEGIN\n\n                SET @hTML_Rpt_Diario_23 += '&lt;tr&gt;'\n                SET @hTML_Rpt_Diario_23 += '    &lt;td class=\"tg-pesd\"&gt;' + LEFT(@NDiaSemana, 2) + '&lt;/td&gt;'\n                SET @hTML_Rpt_Diario_23 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(@Dia AS VARCHAR) + '&lt;/td&gt;'\n                SET @hTML_Rpt_Diario_23 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(FORMAT(@UndParTY, '###,###,###') AS VARCHAR) + '&lt;/td&gt;'\n                SET @hTML_Rpt_Diario_23 += '    &lt;td class=\"tg-d4sb\"&gt;' + CAST(FORMAT(@ventaTY, '###,###,###') AS VARCHAR) + '&lt;/td&gt;'\n                SET @hTML_Rpt_Diario_23 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(FORMAT(@UtilTY, '###,###,###') AS VARCHAR) + ' &lt;/td&gt;'\n                SET @hTML_Rpt_Diario_23 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(FORMAT(@CtaVtaTYMin, '###,###,###') AS VARCHAR) + ' &lt;/td&gt;'\n                SET @hTML_Rpt_Diario_23 += '    &lt;td class=\"' +\n                /* MA: 2025-06-02 =&gt; Si no se tiene @CtaVtaTYMin o es menor que 1:  */\n                CASE\n                    WHEN @CtaVtaTYMin &lt; 1 THEN 'tg-ubmm'\n                    WHEN @CtaVtaTYMin &gt; 1 and (((@ventaTY / @CtaVtaTYMin) * 100) &gt;= 100) THEN 'tg-rfq8'\n                    WHEN @CtaVtaTYMin &gt; 1 and ((@ventaTY / @CtaVtaTYMin) * 100) &gt;= 80  THEN 'tg-o0c0'\n                    ELSE 'tg-ubmm'\n                END \n            + '\"&gt;' + + CAST(ROUND(CAST((CASE WHEN @CtaVtaTYMin &lt; 1 THEN 0.00 ELSE (@ventaTY / @CtaVtaTYMin) * 100 END) AS NUMERIC(10, 2)), 2) AS VARCHAR) + '%' + '&lt;/td&gt;'\n                SET @hTML_Rpt_Diario_23 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(FORMAT(@ventaTY - @CtaVtaTYMin, '###,###,###') AS VARCHAR) + ' &lt;/td&gt;'\n\n                SET @hTML_Rpt_Diario_23 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(ROUND(CAST(@MargenTY * 100 AS NUMERIC(10, 1)), 1) AS VARCHAR) + '%' + '&lt;/td&gt;'\n                --SELECT @hTML_Rpt_Diario_23 [PRUEBA3]\n\n                SET @hTML_Rpt_Diario_23 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(ROUND(CAST(@DifParTYvsLY * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR) + '%' + '&lt;/td&gt;'\n\n                SET @hTML_Rpt_Diario_23 += '    &lt;td class=\"' +\n                CASE\n                    WHEN (@DifVtaTYvsLY &gt;= 0.2058) THEN 'tg-rfq8'\n                    WHEN (@DifVtaTYvsLY &gt;= 0 AND\n                        @DifVtaTYvsLY &lt; 0.2058) THEN 'tg-o0c0'\n                    WHEN @DifVtaTYvsLY &lt; 0 THEN 'tg-ubmm'\n                END\n                + '\"&gt;' + CAST(ROUND(CAST(@DifVtaTYvsLY * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR) + '%' + '&lt;/td&gt;'\n\n                SET @hTML_Rpt_Diario_23 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(ROUND(CAST(@DifMrgTYvsLY * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR) + '%' + '&lt;/td&gt;'\n\n\n                SET @hTML_Rpt_Diario_23 += '&lt;/tr&gt;'\n\n                -- Siguiente registro\n                FETCH NEXT FROM db_cursor INTO\n                    @Fecha,\n                    @dia,\n                    @NDiaSemana,\n                    @UndParTY,\n                    @UndAccTY,\n                    @VtaParTY,\n                    @VtaAccTY,\n                    @UndParLY,\n                    @UndAccLY,\n                    @VtaParLY,\n                    @VtaAccLY,\n                    @CtoParTY,\n                    @CtoAccTY,\n                    @CtoParLY,\n                    @CtoAccLY,\n                    @unidadTY,\n                    @ventaTY,\n                    @unidadLY,\n                    @ventaLY,\n                    @costoTY,\n                    @costoLY,\n                    @CtaVtaTYMin,\n                    @UtilTY,\n                    @UtilLY,\n                    @MargenTY,\n                    @MargenLY,\n                    @DifParTYvsLY,\n                    @DifVtaTYvsLY,\n                    @DifMrgTYvsLY\n            END\n            CLOSE db_cursor\n            DEALLOCATE db_cursor\n\n            --SELECT @hTML_Rpt_Diario_23 [PRINT_DIARIO]\n            --RETURN\n            --\n            -- Impresi\u00f3n de FOOTER\n\n            SET @hTML_Rpt_Diario_AccPeq = ''\n            SET @hTML_Rpt_Diario_AccGra = ''\n            SET @hTML_Rpt_Diario_Pares = ''\n            SET @hTML_Rpt_Diario_Unids = ''\n            SET @hTML_Rpt_Diario_Monto = ''\n            SET @hTML_Rpt_Diario_Util = ''\n            SET @hTML_Rpt_Diario_VtaMin = ''\n            SET @hTML_Rpt_Diario_CVtaMin = ''\n            SET @hTML_Rpt_Diario_VarVtaMin = ''\n            SET @hTML_Rpt_Diario_Margen = ''\n            SET @hTML_Rpt_Diario_AccPTY = ''\n            SET @hTML_Rpt_Diario_AccGTY = ''\n            SET @hTML_Rpt_Diario_ParCTY = ''\n            SET @hTML_Rpt_Diario_UnidadesDif = ''\n            SET @hTML_Rpt_Diario_MontoDif = ''\n            SET @hTML_Rpt_Diario_UtilDif = ''\n            SET @hTML_Rpt_Diario_MontoCta = ''\n            SET @hTML_Rpt_Diario_AvanceCta = ''\n            SET @hTML_Rpt_Diario_White = ''\n\n            SET @hTML_Rpt_Diario_CuotaPar = ''\n            SET @hTML_Rpt_Diario_CuotaAcc = ''\n            SET @hTML_Rpt_Diario_AvanceCtaPar = ''\n            SET @hTML_Rpt_Diario_AvanceCtaAcc = ''\n\n\n\n\n            SET @hTML_Rpt_Diario_23 += '\n                                        &lt;tr&gt;\n                                            &lt;td class=\"tg-pesd\"&gt;&lt;/td&gt;\n                                            &lt;td class=\"tg-x028\"&gt;Total&lt;/td&gt;\n                                        '\n            SELECT\n                @hTML_Rpt_Diario_Pares = '&lt;td class=\"tg-x028\"&gt;' + Pares + '&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_Monto = '&lt;td class=\"tg-pksw\"&gt;' + Monto + '&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_Util = '&lt;td class=\"tg-x028\"&gt;' + Util + '&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_VtaMin = '&lt;td class=\"tg-x028\"&gt;' + VtaMin + '&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_CVtaMin = '&lt;td class=\"'\n                +\n            CASE\n                WHEN CAST(SUBSTRING(CVtaMin, 1, LEN(CVtaMin) - 1) AS DECIMAL(5,2)) &gt;= 95 THEN 'tg-rfq8'\n                WHEN CAST(SUBSTRING(CVtaMin, 1, LEN(CVtaMin) - 1) AS DECIMAL(5,2)) &gt;= 80 THEN 'tg-o0c0'\n                WHEN CAST(SUBSTRING(CVtaMin, 1, LEN(CVtaMin) - 1) AS DECIMAL(5,2)) &gt;= 60 THEN 'tg-d4sb'\n                ELSE 'tg-ubmm'\n            END\n                + '\"&gt;' + CVtaMin + '&lt;/td&gt;'\n            ,@hTML_Rpt_Diario_VarVtaMin = '&lt;td class=\"tg-x028\"&gt;' + VarVtaMin + '&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_Margen = '&lt;td class=\"tg-x028\"&gt;' + Margen + '&lt;/td&gt;'\n                --,@hTML_Rpt_Diario_UnidadesDif='&lt;td class=\"tg-x028\"&gt;'+UnidadesDif+'&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_UnidadesDif = '&lt;td class=\"tg-x028\"&gt;' + UnidParDif + '&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_MontoDif = '&lt;td class=\"'\n                +\n                CASE\n                    WHEN (MontoDifx &gt;= 0.2058) THEN 'tg-rfq8'\n                    WHEN (MontoDifx &gt;= 0 AND\n                        MontoDifx &lt; 0.2058) THEN 'tg-o0c0'\n                    WHEN MontoDifx &lt; 0 THEN 'tg-ubmm'\n                END\n                + '\"&gt;' + MontoDif + '&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_UtilDif = '&lt;td class=\"tg-x028\"&gt;' + UtilDif + '&lt;/td&gt;'\n                --,@hTML_Rpt_Diario_MontoCta='&lt;td class=\"tg-7l0w\"&gt;'+MontoCta+'&lt;/td&gt;'\n                --,@hTML_Rpt_Diario_AvanceCta='&lt;td class=\"tg-7l0w\"&gt;'+AvanceCta+'&lt;/td&gt;'\n\n             --,@hTML_Rpt_Diario_White = '&lt;td class=\"tg-fzdr\"&gt;&lt;/td&gt;'\n            FROM (SELECT\n                 CAST(FORMAT(Pares, '###,###,###') AS VARCHAR(100)) AS Pares\n                 ,CAST(FORMAT(Monto, '###,###,###') AS VARCHAR(100)) AS Monto\n                 ,CAST(FORMAT(Util, '###,###,###') AS VARCHAR(100)) AS Util\n                 ,CAST(FORMAT(VtaMin, '###,###,###') AS VARCHAR(100)) AS VtaMin\n                ,CAST(ROUND(CAST(CVtaMin * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR(100)) + '%' AS CVtaMin\n                ,CAST(FORMAT(VarVtaMin, '###,###,###') AS VARCHAR(100)) AS VarVtaMin\n                 ,CAST(ROUND(CAST(Margen * 100 AS NUMERIC(10, 1)), 1) AS VARCHAR(100)) + '%' AS Margen\n\n                 ,CAST(ROUND(CAST(UnidParDif * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR(100)) + '%' AS UnidParDif\n\n                 ,CAST(ROUND(CAST(UnidadesDif * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR(100)) + '%' AS UnidadesDif\n                 ,CAST(ROUND(CAST(MontoDif * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR(100)) + '%' AS MontoDif\n                 ,MontoDif AS MontoDifx\n                 ,CAST(ROUND(CAST(UtilDif * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR(100)) + '%' AS UtilDif\n                FROM (SELECT\n                     SUM(a.UndParTY) AS Pares\n                     ,SUM(a.ventaTY) AS Monto\n                     ,SUM(a.UtilTY) AS Util\n                     ,SUM(a.CtaVtaTYM) AS VtaMin\n                     ,CASE WHEN SUM(a.CtaVtaTYM)&lt;1 THEN 0.00 ELSE (SUM(a.ventaTY) / SUM(a.CtaVtaTYM)) END AS CVtaMin  /* MA: 2025-06-02 =&gt; Si no se tiene @CtaVtaTYMin o es menor que 1:  */\n                     ,(SUM(a.ventaTY) - SUM(a.CtaVtaTYM)) AS VarVtaMin\n                     --,(SUM(a.UtilTY) / SUM(a.ventaTY)) AS Margen\n                     ,CASE WHEN SUM(a.ventaTY)=0 THEN 0.00 ELSE (SUM(a.UtilTY) / SUM(a.ventaTY)) END AS Margen\n\n                     ,CASE WHEN CAST(SUM(a.UndAccLY) AS NUMERIC(10, 2))=0 THEN 0.00 ELSE CAST(CAST(SUM(a.UndAccTY) AS NUMERIC(10, 2)) / CAST(SUM(a.UndAccLY) AS NUMERIC(10, 2)) - 1 AS NUMERIC(7, 4)) END AS UnidAccDif\n                     ,CASE WHEN CAST(SUM(a.UndParLY) AS NUMERIC(10, 2))=0 THEN 0.00 ELSE CAST(CAST(SUM(a.UndParTY) AS NUMERIC(10, 2)) / CAST(SUM(a.UndParLY) AS NUMERIC(10, 2)) - 1 AS NUMERIC(7, 4)) END AS UnidParDif\n\n                     ,CASE WHEN CAST(SUM(a.unidadLY) AS NUMERIC(10, 2))=0 THEN 0.00 ELSE CAST(CAST(SUM(a.unidadTY) AS NUMERIC(10, 2)) / CAST(SUM(a.unidadLY) AS NUMERIC(10, 2)) - 1 AS NUMERIC(7, 4)) END AS UnidadesDif\n                     ,CASE WHEN SUM(a.ventaLY)=0 THEN 0.00 ELSE (SUM(a.ventaTY) / SUM(a.ventaLY)) - 1 END AS MontoDif\n                     ,CASE WHEN SUM(a.UtilLY)=0 THEN 0.00 ELSE (SUM(a.UtilTY) / SUM(a.UtilLY)) - 1 END AS UtilDif\n                FROM #TVentasB2 AS a) AS A) AS A\n\n                SET @hTML_Rpt_Diario_23 += CONCAT(\n                --@hTML_Rpt_Diario_Unids\n                @hTML_Rpt_Diario_Pares\n                , @hTML_Rpt_Diario_Monto\n                , @hTML_Rpt_Diario_Util\n                , @hTML_Rpt_Diario_VtaMin\n                , @hTML_Rpt_Diario_CVtaMin\n                , @hTML_Rpt_Diario_VarVtaMin\n                , @hTML_Rpt_Diario_Margen\n                , @hTML_Rpt_Diario_UnidadesDif\n                , @hTML_Rpt_Diario_MontoDif\n                , @hTML_Rpt_Diario_UtilDif\n                --,@hTML_Rpt_Diario_MontoCta\n                --,@hTML_Rpt_Diario_AvanceCta\n--              , @hTML_Rpt_Diario_White\n--              , @hTML_Rpt_Diario_Pares\n--              , @hTML_Rpt_Diario_CuotaPar\n--              , @hTML_Rpt_Diario_AvanceCtaPar\n--              , @hTML_Rpt_Diario_AccGra\n--              , @hTML_Rpt_Diario_CuotaAcc\n--              , @hTML_Rpt_Diario_AvanceCtaAcc\n                ) + '&lt;/tr&gt;'\n\n                --SET @tableHTML = ''\n\n                SET @v_VtaTY = (SELECT tb.ventaTY\n                                                FROM   #TVentasB2 AS tb\n                                                WHERE  tb.dia = DAY(@fec))\n                SET @v_VarVenTY = (SELECT tb.DifVtaTYvsLY\n                                                     FROM   #TVentasB2 AS tb\n                                                     WHERE  tb.dia = DAY(@fec))\n                SET @v_VtaLY = (SELECT tb.ventaLY\n                                                FROM   #TVentasB2 AS tb\n                                                WHERE  tb.dia = DAY(@fec))\n\n                SET @v_VtaTY = ISNULL(@v_VtaTY, 0)\n                SET @v_VarVenTY = ISNULL(@v_VarVenTY, 0)\n                SET @v_VtaLY = ISNULL(@v_VtaLY, 0)\n\n                SELECT\n                    'VENTA E-COMMERCE' AS [bloque]\n                 ,@fec [@fec]\n                 ,@v_VtaTY [@v_VtaTY]\n                 ,@v_VarVenTY [@v_VarVenTY]\n                 ,@v_VtaLY [@v_VtaLY];\n\n\n                SET @tableHTML = @tableHTML +\n                N'&lt;br&gt;&lt;br&gt;&lt;br&gt;' +\n                N'&lt;div&gt;&lt;b&gt;VENTA CANAL E-COMMERCE: &lt;/b&gt;&lt;/div&gt;&lt;br&gt;' +\n                N'&lt;div&gt;La venta total es de ' + CAST(FORMAT(@v_VtaTY, '###,###,###') AS VARCHAR(20)) + '; ' + \n                CASE \n                        WHEN @v_VtaLY&gt;0 THEN '&lt;b&gt;' + (CAST(ROUND(CAST(@v_VarVenTY * 100 AS NUMERIC(7, 2)), 2) AS VARCHAR(100)) + '%') + '&lt;/b&gt;  de diferencia con el a\u00f1o pasado  que  fue de ' + (CAST(FORMAT(@v_VtaLY, '###,###,###') AS VARCHAR(20)))\n                        ELSE ' Sin ventas registradas en a\u00f1o pasado'\n                END + ' .&lt;div&gt;&lt;br&gt;' +\n                N'&lt;br&gt;' +\n                N'&lt;table class=\"tg\" style=\"undefined;table-layout: fixed; width: 751px\"&gt;' +\n\n                N'&lt;colgroup&gt;' +\n                N'&lt;col style=\"width: 40px\"&gt;' +\n                N'&lt;col style=\"width: 48px\"&gt;' +\n\n                N'&lt;col style=\"width: 48px\"&gt;' +\n                N'&lt;col style=\"width: 84px\"&gt;' +\n                N'&lt;col style=\"width: 80px\"&gt;' +\n                N'&lt;col style=\"width: 80px\"&gt;' +\n\n                N'&lt;col style=\"width: 70px\"&gt;' +\n                N'&lt;col style=\"width: 80px\"&gt;' +\n                N'&lt;col style=\"width: 70px\"&gt;' +\n\n                --N'&lt;col style=\"width: 61px\"&gt;'+ \n                --N'&lt;col style=\"width: 68px\"&gt;'+ \n\n                N'&lt;col style=\"width: 68px\"&gt;' +\n\n                N'&lt;col style=\"width: 80px\"&gt;' +\n                N'&lt;col style=\"width: 80px\"&gt;' +\n                N'&lt;col style=\"width: 60px\"&gt;' +\n                N'&lt;col style=\"width: 50px\"&gt;' +\n                N'&lt;col style=\"width: 60px\"&gt;' +\n                N'&lt;col style=\"width: 60px\"&gt;' +\n                N'&lt;/colgroup&gt;' +\n\n                N'&lt;tr&gt;' +\n                N'&lt;th class=\"tg-pesd\"&gt;&lt;/th&gt;' +\n                N'&lt;th class=\"tg-pesd\"&gt;&lt;/th&gt;' +\n                N'&lt;th class=\"tg-fkia\" colspan=\"7\"&gt;2025&lt;/th&gt;' +\n                N'&lt;th class=\"tg-f7xs\" colspan=\"3\"&gt;DIFERENCIA&lt;/th&gt;' +\n                --N'&lt;th class=\"tg-9m3w\" colspan=\"2\"&gt;VENTA S/.&lt;/th&gt;'+\n--              N'&lt;th class=\"tg-fzdr\" colspan=\"1\"&gt;  &lt;/th&gt;' +\n--              N'&lt;th class=\"tg-7l0w\" colspan=\"6\"&gt;VENTA UNIDADES&lt;/th&gt;' +\n                N'&lt;/tr&gt;' +\n                N'&lt;tr&gt;' +\n                N'&lt;td class=\"tg-pesd\"&gt;&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x028\"&gt;Dia&lt;/td&gt;' +\n                --N'&lt;td class=\"tg-x028\"&gt;AccSec&lt;/td&gt;'+ \n                --N'&lt;td class=\"tg-x028\"&gt;AccPri&lt;/td&gt;'+ \n                N'&lt;td class=\"tg-x028\"&gt;Pares&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x028\"&gt;Monto&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x028\"&gt;U.B.&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x0282nn\"&gt;Vta M\u00ednima&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x0282nn\"&gt;% Cumpl&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x0282nn\"&gt;Var&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x028\"&gt;Margen&lt;/td&gt;' +\n\n                --N'&lt;td class=\"tg-x028\"&gt;AccSec&lt;/td&gt;'+ \n                --N'&lt;td class=\"tg-x028\"&gt;AccPri&lt;/td&gt;'+ \n                N'&lt;td class=\"tg-x028\"&gt;Pares&lt;/td&gt;' +\n                --N'&lt;td class=\"tg-x028\"&gt;Unidades&lt;/td&gt;'+ \n\n                N'&lt;td class=\"tg-x028\"&gt;Monto&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x028\"&gt;U.B.&lt;/td&gt;' +\n                --N'&lt;td class=\"tg-x028\"&gt;M\u00ednimo&lt;/td&gt;'+ \n                --N'&lt;td class=\"tg-x028\"&gt;Avance&lt;/td&gt;'+ \n--              N'&lt;td class=\"tg-fzdr\"&gt;&lt;/td&gt;' +\n--              N'&lt;td class=\"tg-x028\"&gt;Pares&lt;/td&gt;' +\n--              N'&lt;td class=\"tg-x028\"&gt;M\u00ednimo&lt;/td&gt;' +\n--              N'&lt;td class=\"tg-x028\"&gt;Avance&lt;/td&gt;' +\n--              N'&lt;td class=\"tg-x028\"&gt;Acces&lt;/td&gt;' +\n--              N'&lt;td class=\"tg-x028\"&gt;M\u00ednimo&lt;/td&gt;' +\n--              N'&lt;td class=\"tg-x028\"&gt;Avance&lt;/td&gt;' +\n                N'&lt;/tr&gt;' + @hTML_Rpt_Diario_23 +\n                N'&lt;/table&gt;';\n            --  &lt;/body&gt;\n            --&lt;/html&gt;';\n\n        END\n\n\n        --\n        -- Bloque 2.4 Canal VENTAS ASISTIDAS\n        IF 1=1\n        BEGIN\n            DECLARE @hTML_Rpt_Diario_24 NVARCHAR(MAX) = '';\n\n            IF OBJECT_ID('tempdb..#TProyeccionVAsistidas') IS NOT NULL DROP TABLE #TProyeccionVAsistidas;\n        CREATE TABLE #TProyeccionVAsistidas\n        (\n            Fecha           DATE\n           ,dia             INT\n           ,NDiaSemana      VARCHAR(20)\n           ,CtaUndParTY     INT\n           ,CtaVtaParTY     DECIMAL(10 ,2)\n           ,CtaUndAccTY     INT\n           ,CtaVtaAccTY     DECIMAL(10 ,2)\n           ,CtaUndTY        INT\n           ,CtaVtaTY        DECIMAL(10 ,2)\n        )\n            INSERT INTO #TProyeccionVAsistidas\n        (\n            Fecha,\n            dia,\n            NDiaSemana,\n            CtaUndParTY,\n            CtaVtaParTY,\n            CtaUndAccTY,\n            CtaVtaAccTY,\n            CtaUndTY,\n            CtaVtaTY\n        )\n        SELECT\n            tv.Fecha,\n            tv.Dia,\n            tv.NDiaSemana,\n            SUM(vpv.Par) AS CtaUndParTY,\n            SUM(vpv.VtaPar_TY) AS CtaVtaParTY,\n            SUM(vpv.Acc) AS CtaUndAccTY,\n            SUM(vpv.VtaAcc_TY) AS CtaVtaAccTY,\n            SUM(vpv.Par)+SUM(vpv.Acc) AS CtaUndTY,\n            SUM(vpv.monto) AS CtaVtaTY\n        FROM\n            TiempoVersus AS tv\n        INNER JOIN vw_proyecciones_TY AS vpv ON vpv.Fecha = tv.FechaSK\n        WHERE tv.Fecha BETWEEN @FechaIniTY AND @fec AND vpv.canal = 'Ventas Asistidas'\n        GROUP BY tv.Fecha, tv.Dia, tv.NDiaSemana\n\n            TRUNCATE TABLE #TVentasB2;\n\n            INSERT INTO #TVentasB2\n            (\n                Fecha,\n                dia,\n                NDiaSemana,\n                UndParTY,\n                UndAccTY,\n                VtaParTY,\n                VtaAccTY,\n                UndParLY,\n                UndAccLY,\n                VtaParLY,\n                VtaAccLY,\n                CtoParTY,\n                CtoAccTY,\n                CtoParLY,\n                CtoAccLY,\n                unidadTY,\n                ventaTY,\n                unidadLY,\n                ventaLY,\n                costoTY,\n                costoLY,\n                CtaVtaTYM\n            )\n            SELECT tv.Fecha\n                        ,tv.dia\n                        ,tv.NDiaSemana\n                        ,SUM(t.UndParTY)         AS UndParTY\n                        ,SUM(t.UndAccTY)         AS UndAccTY\n                        ,SUM(t.VtaParTY)         AS VtaParTY\n                        ,SUM(t.VtaAccTY)         AS VtaAccTY\n                        ,SUM(t.UndParLY)         AS UndParLY\n                        ,SUM(t.UndAccLY)         AS UndAccLY\n                        ,SUM(t.VtaParLY)         AS VtaParLY\n                        ,SUM(t.VtaAccLY)         AS VtaAccLY\n                        ,SUM(t.CtoParTY)         AS CtoParTY\n                        ,SUM(t.CtoAccTY)         AS CtoAccTY\n                        ,SUM(t.CtoParLY)         AS CtoParLY\n                        ,SUM(t.CtoAccLY)         AS CtoAccLY\n                        ,SUM(t.unidadTY)         AS unidadTY\n                        ,SUM(t.ventaTY)          AS ventaTY\n                        ,SUM(t.unidadLY)         AS unidadLY\n                        ,SUM(t.ventaLY)          AS ventaLY\n                        ,SUM(t.costoTY)          AS costoTY\n                        ,SUM(t.costoLY)          AS costoLY\n                        ,SUM(tr.CtaVtaTY)       AS CtaVtaTYM\n            FROM   TiempoVersus            AS tv\n                         LEFT JOIN #TVentas2     AS t\n                                    ON  t.Fecha = tv.Fecha\n                        LEFT JOIN #TProyeccionVAsistidas  AS tr\n                    ON  tr.Fecha = t.Fecha\n            WHERE  tv.Fecha BETWEEN @FechaIniTY AND @fec\n            AND t.canal='Ventas Asistidas'\n            GROUP BY\n                         tv.Fecha\n                        ,tv.Dia\n                        ,tv.NDiaSemana\n\n            DECLARE db_cursor CURSOR FOR\n            SELECT\n                tb.Fecha,\n                tb.dia,\n                tb.NDiaSemana,\n                tb.UndParTY,\n                tb.UndAccTY,\n                tb.VtaParTY,\n                tb.VtaAccTY,\n                tb.UndParLY,\n                tb.UndAccLY,\n                tb.VtaParLY,\n                tb.VtaAccLY,\n                tb.CtoParTY,\n                tb.CtoAccTY,\n                tb.CtoParLY,\n                tb.CtoAccLY,\n                tb.unidadTY,\n                tb.ventaTY,\n                tb.unidadLY,\n                tb.ventaLY,\n                tb.costoTY,\n                tb.costoLY,\n                tb.CtaVtaTYM,\n                tb.UtilTY,\n                tb.UtilLY,\n                tb.MargenTY,\n                tb.MargenLY,\n                tb.DifParTYvsLY,\n                tb.DifVtaTYvsLY,\n                tb.DifMrgTYvsLY\n            FROM\n                #TVentasB2 AS tb\n\n            OPEN db_cursor\n            FETCH NEXT FROM db_cursor INTO\n                @Fecha,\n                @dia,\n                @NDiaSemana,\n                @UndParTY,\n                @UndAccTY,\n                @VtaParTY,\n                @VtaAccTY,\n                @UndParLY,\n                @UndAccLY,\n                @VtaParLY,\n                @VtaAccLY,\n                @CtoParTY,\n                @CtoAccTY,\n                @CtoParLY,\n                @CtoAccLY,\n                @unidadTY,\n                @ventaTY,\n                @unidadLY,\n                @ventaLY,\n                @costoTY,\n                @costoLY,\n                @CtaVtaTYMin,\n                @UtilTY,\n                @UtilLY,\n                @MargenTY,\n                @MargenLY,\n                @DifParTYvsLY,\n                @DifVtaTYvsLY,\n                @DifMrgTYvsLY\n\n            WHILE @@FETCH_STATUS = 0\n            BEGIN\n\n                SET @hTML_Rpt_Diario_24 += '&lt;tr&gt;'\n                SET @hTML_Rpt_Diario_24 += '    &lt;td class=\"tg-pesd\"&gt;' + LEFT(@NDiaSemana, 2) + '&lt;/td&gt;'\n                SET @hTML_Rpt_Diario_24 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(@Dia AS VARCHAR) + '&lt;/td&gt;'\n                SET @hTML_Rpt_Diario_24 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(FORMAT(@UndParTY, '###,###,###') AS VARCHAR) + '&lt;/td&gt;'\n                SET @hTML_Rpt_Diario_24 += '    &lt;td class=\"tg-d4sb\"&gt;' + CAST(FORMAT(@ventaTY, '###,###,###') AS VARCHAR) + '&lt;/td&gt;'\n                SET @hTML_Rpt_Diario_24 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(FORMAT(@UtilTY, '###,###,###') AS VARCHAR) + ' &lt;/td&gt;'\n                SET @hTML_Rpt_Diario_24 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(FORMAT(@CtaVtaTYMin, '###,###,###') AS VARCHAR) + ' &lt;/td&gt;'\n                SET @hTML_Rpt_Diario_24 += '    &lt;td class=\"' +\n                CASE\n                    WHEN @CtaVtaTYMin = 0 THEN 'tg-ubmm'\n                    WHEN (((@ventaTY / @CtaVtaTYMin) * 100) &gt;= 100) THEN 'tg-rfq8'\n                    WHEN ((@ventaTY / @CtaVtaTYMin) * 100) &gt;= 80  THEN 'tg-o0c0'\n                    ELSE 'tg-ubmm'\n                END \n            + '\"&gt;' + + CAST(ROUND(CAST((CASE WHEN @CtaVtaTYMin = 0 THEN 0.00 ELSE (@ventaTY / @CtaVtaTYMin) * 100 END) AS NUMERIC(10, 2)), 2) AS VARCHAR) + '%' + '&lt;/td&gt;'\n                SET @hTML_Rpt_Diario_24 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(FORMAT(@ventaTY - @CtaVtaTYMin, '###,###,###') AS VARCHAR) + ' &lt;/td&gt;'\n                SET @hTML_Rpt_Diario_24 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(ROUND(CAST(@MargenTY * 100 AS NUMERIC(10, 1)), 1) AS VARCHAR) + '%' + '&lt;/td&gt;'\n                SET @hTML_Rpt_Diario_24 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(ROUND(CAST(@DifParTYvsLY * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR) + '%' + '&lt;/td&gt;'\n\n                SET @hTML_Rpt_Diario_24 += '    &lt;td class=\"' +\n                CASE\n                    WHEN (@DifVtaTYvsLY &gt;= 0.2058) THEN 'tg-rfq8'\n                    WHEN (@DifVtaTYvsLY &gt;= 0 AND\n                        @DifVtaTYvsLY &lt; 0.2058) THEN 'tg-o0c0'\n                    WHEN @DifVtaTYvsLY &lt; 0 THEN 'tg-ubmm'\n                END\n                + '\"&gt;' + CAST(ROUND(CAST(@DifVtaTYvsLY * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR) + '%' + '&lt;/td&gt;'\n\n                SET @hTML_Rpt_Diario_24 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(ROUND(CAST(@DifMrgTYvsLY * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR) + '%' + '&lt;/td&gt;'\n--              SET @hTML_Rpt_Diario_24 += '    &lt;td class=\"tg-fzdr\"&gt;&lt;/td&gt;'\n--              SET @hTML_Rpt_Diario_24 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(FORMAT(@UndParTY, '###,###,###') AS VARCHAR) + '&lt;/td&gt;'\n--              SET @hTML_Rpt_Diario_24 += '    &lt;td class=\"tg-d4sb\"&gt;' + CAST(FORMAT(@CtaUndParTY, '###,###,###') AS VARCHAR) + ' &lt;/td&gt;'\n--              SET @hTML_Rpt_Diario_24 += '    &lt;td class=\"tg-d4sb\"&gt;' + CAST(ROUND(CAST(@AvaUndParTY * 100 AS NUMERIC(10, 0)), 0) AS VARCHAR) + '%' + '&lt;/td&gt;'\n--              SET @hTML_Rpt_Diario_24 += '    &lt;td class=\"tg-fzdr\"&gt;' + CAST(FORMAT(@UndAccTY, '###,###,###') AS VARCHAR) + '&lt;/td&gt;'\n--              SET @hTML_Rpt_Diario_24 += '    &lt;td class=\"tg-d4sb\"&gt;' + CAST(FORMAT(@CtaUndAccTY, '###,###,###') AS VARCHAR) + ' &lt;/td&gt;'\n--              SET @hTML_Rpt_Diario_24 += '    &lt;td class=\"tg-d4sb\"&gt;' + CAST(ROUND(CAST(@AvaUndAccTY * 100 AS NUMERIC(10, 0)), 0) AS VARCHAR) + '%' + '&lt;/td&gt;'\n\n                SET @hTML_Rpt_Diario_24 += '&lt;/tr&gt;'\n\n                -- Siguiente registro\n                FETCH NEXT FROM db_cursor INTO\n                    @Fecha,\n                    @dia,\n                    @NDiaSemana,\n                    @UndParTY,\n                    @UndAccTY,\n                    @VtaParTY,\n                    @VtaAccTY,\n                    @UndParLY,\n                    @UndAccLY,\n                    @VtaParLY,\n                    @VtaAccLY,\n                    @CtoParTY,\n                    @CtoAccTY,\n                    @CtoParLY,\n                    @CtoAccLY,\n                    @unidadTY,\n                    @ventaTY,\n                    @unidadLY,\n                    @ventaLY,\n                    @costoTY,\n                    @costoLY,\n                    @CtaVtaTYMin,\n                    @UtilTY,\n                    @UtilLY,\n                    @MargenTY,\n                    @MargenLY,\n                    @DifParTYvsLY,\n                    @DifVtaTYvsLY,\n                    @DifMrgTYvsLY\n            END\n            CLOSE db_cursor\n            DEALLOCATE db_cursor\n\n            --\n            -- Impresi\u00f3n de FOOTER\n\n            SET @hTML_Rpt_Diario_AccPeq = ''\n            SET @hTML_Rpt_Diario_AccGra = ''\n            SET @hTML_Rpt_Diario_Pares = ''\n            SET @hTML_Rpt_Diario_Unids = ''\n            SET @hTML_Rpt_Diario_Monto = ''\n            SET @hTML_Rpt_Diario_Util = ''\n            SET @hTML_Rpt_Diario_VtaMin = ''\n            SET @hTML_Rpt_Diario_CVtaMin = ''\n            SET @hTML_Rpt_Diario_VarVtaMin = ''\n            SET @hTML_Rpt_Diario_Margen = ''\n            SET @hTML_Rpt_Diario_AccPTY = ''\n            SET @hTML_Rpt_Diario_AccGTY = ''\n            SET @hTML_Rpt_Diario_ParCTY = ''\n            SET @hTML_Rpt_Diario_UnidadesDif = ''\n            SET @hTML_Rpt_Diario_MontoDif = ''\n            SET @hTML_Rpt_Diario_UtilDif = ''\n            SET @hTML_Rpt_Diario_MontoCta = ''\n            SET @hTML_Rpt_Diario_AvanceCta = ''\n            SET @hTML_Rpt_Diario_White = ''\n\n            SET @hTML_Rpt_Diario_CuotaPar = ''\n            SET @hTML_Rpt_Diario_CuotaAcc = ''\n            SET @hTML_Rpt_Diario_AvanceCtaPar = ''\n            SET @hTML_Rpt_Diario_AvanceCtaAcc = ''\n\n            SET @hTML_Rpt_Diario_24 += '\n                                        &lt;tr&gt;\n                                            &lt;td class=\"tg-pesd\"&gt;&lt;/td&gt;\n                                            &lt;td class=\"tg-x028\"&gt;Total&lt;/td&gt;\n                                        '\n            SELECT\n                @hTML_Rpt_Diario_Pares = '&lt;td class=\"tg-x028\"&gt;' + Pares + '&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_Monto = '&lt;td class=\"tg-pksw\"&gt;' + Monto + '&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_Util = '&lt;td class=\"tg-x028\"&gt;' + Util + '&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_VtaMin = '&lt;td class=\"tg-x028\"&gt;' + VtaMin + '&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_CVtaMin = '&lt;td class=\"'\n                +\n                CASE\n                    WHEN CAST(SUBSTRING(CVtaMin, 1, LEN(CVtaMin) - 1) AS DECIMAL(5,2)) &gt;= 95 THEN 'tg-rfq8'\n                    WHEN CAST(SUBSTRING(CVtaMin, 1, LEN(CVtaMin) - 1) AS DECIMAL(5,2)) &gt;= 80 THEN 'tg-o0c0'\n                    ELSE 'tg-ubmm'\n                END\n                + '\"&gt;' + CVtaMin + '&lt;/td&gt;'\n            ,@hTML_Rpt_Diario_VarVtaMin = '&lt;td class=\"tg-x028\"&gt;' + VarVtaMin + '&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_Margen = '&lt;td class=\"tg-x028\"&gt;' + Margen + '&lt;/td&gt;'\n                --,@hTML_Rpt_Diario_UnidadesDif='&lt;td class=\"tg-x028\"&gt;'+UnidadesDif+'&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_UnidadesDif = '&lt;td class=\"tg-x028\"&gt;' + UnidParDif + '&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_MontoDif = '&lt;td class=\"'\n                +\n                CASE\n                    WHEN (MontoDifx &gt;= 0.2058) THEN 'tg-rfq8'\n                    WHEN (MontoDifx &gt;= 0 AND\n                        MontoDifx &lt; 0.2058) THEN 'tg-o0c0'\n                    WHEN MontoDifx &lt; 0 THEN 'tg-ubmm'\n                END\n                + '\"&gt;' + MontoDif + '&lt;/td&gt;'\n             ,@hTML_Rpt_Diario_UtilDif = '&lt;td class=\"tg-x028\"&gt;' + UtilDif + '&lt;/td&gt;'\n                --,@hTML_Rpt_Diario_MontoCta='&lt;td class=\"tg-7l0w\"&gt;'+MontoCta+'&lt;/td&gt;'\n                --,@hTML_Rpt_Diario_AvanceCta='&lt;td class=\"tg-7l0w\"&gt;'+AvanceCta+'&lt;/td&gt;'\n\n             --,@hTML_Rpt_Diario_White = '&lt;td class=\"tg-fzdr\"&gt;&lt;/td&gt;'\n            FROM (SELECT\n                 CAST(FORMAT(Pares, '###,###,###') AS VARCHAR(100)) AS Pares\n                 ,CAST(FORMAT(Monto, '###,###,###') AS VARCHAR(100)) AS Monto\n                 ,CAST(FORMAT(Util, '###,###,###') AS VARCHAR(100)) AS Util\n                 ,CAST(FORMAT(VtaMin, '###,###,###') AS VARCHAR(100)) AS VtaMin\n                ,CAST(ROUND(CAST(CVtaMin * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR(100)) + '%' AS CVtaMin\n                ,CAST(FORMAT(VarVtaMin, '###,###,###') AS VARCHAR(100)) AS VarVtaMin\n                 ,CAST(ROUND(CAST(Margen * 100 AS NUMERIC(10, 1)), 1) AS VARCHAR(100)) + '%' AS Margen\n\n                 ,CAST(ROUND(CAST(UnidParDif * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR(100)) + '%' AS UnidParDif\n\n                 ,CAST(ROUND(CAST(UnidadesDif * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR(100)) + '%' AS UnidadesDif\n                 ,CAST(ROUND(CAST(MontoDif * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR(100)) + '%' AS MontoDif\n                 ,MontoDif AS MontoDifx\n                 ,CAST(ROUND(CAST(UtilDif * 100 AS NUMERIC(10, 2)), 2) AS VARCHAR(100)) + '%' AS UtilDif\n                FROM (SELECT\n                     SUM(a.UndParTY) AS Pares\n                     ,SUM(a.ventaTY) AS Monto\n                     ,SUM(a.UtilTY) AS Util\n                     ,SUM(a.CtaVtaTYM) AS VtaMin\n                     ,CASE WHEN SUM(a.CtaVtaTYM)=0 THEN 0.00 ELSE (SUM(a.ventaTY) / SUM(a.CtaVtaTYM)) END AS CVtaMin\n                     ,(SUM(a.ventaTY) - SUM(a.CtaVtaTYM)) AS VarVtaMin\n                     --,(SUM(a.UtilTY) / SUM(a.ventaTY)) AS Margen\n                     ,CASE WHEN SUM(a.ventaTY) = 0 THEN 0.00 ELSE SUM(a.UtilTY) / SUM(a.ventaTY) END AS Margen\n\n                     ,CASE WHEN CAST(SUM(a.UndAccLY) AS NUMERIC(10, 2))=0 THEN 0.00 ELSE CAST(CAST(SUM(a.UndAccTY) AS NUMERIC(10, 2)) / CAST(SUM(a.UndAccLY) AS NUMERIC(10, 2)) - 1 AS NUMERIC(7, 4)) END AS UnidAccDif\n                     ,CASE WHEN CAST(SUM(a.UndParLY) AS NUMERIC(10, 2))=0 THEN 0.00 ELSE CAST(CAST(SUM(a.UndParTY) AS NUMERIC(10, 2)) / CAST(SUM(a.UndParLY) AS NUMERIC(10, 2)) - 1 AS NUMERIC(7, 4)) END AS UnidParDif\n\n                     ,CASE WHEN CAST(SUM(a.unidadLY) AS NUMERIC(10, 2))=0 THEN 0.00 ELSE CAST(CAST(SUM(a.unidadTY) AS NUMERIC(10, 2)) / CAST(SUM(a.unidadLY) AS NUMERIC(10, 2)) - 1 AS NUMERIC(7, 4)) END AS UnidadesDif\n                     ,CASE WHEN SUM(a.ventaLY)=0 THEN 0.00 ELSE (SUM(a.ventaTY) / SUM(a.ventaLY)) - 1 END AS MontoDif\n                     ,CASE WHEN SUM(a.UtilLY)=0 THEN 0.00 ELSE (SUM(a.UtilTY) / SUM(a.UtilLY)) - 1 END AS UtilDif\n                FROM #TVentasB2 AS a) AS A) AS A\n\n                SET @hTML_Rpt_Diario_24 += CONCAT(\n                --@hTML_Rpt_Diario_Unids\n                @hTML_Rpt_Diario_Pares\n                , @hTML_Rpt_Diario_Monto\n                , @hTML_Rpt_Diario_Util\n                , @hTML_Rpt_Diario_VtaMin\n                , @hTML_Rpt_Diario_CVtaMin\n                , @hTML_Rpt_Diario_VarVtaMin\n                , @hTML_Rpt_Diario_Margen\n                , @hTML_Rpt_Diario_UnidadesDif\n                , @hTML_Rpt_Diario_MontoDif\n                , @hTML_Rpt_Diario_UtilDif\n                --,@hTML_Rpt_Diario_MontoCta\n                --,@hTML_Rpt_Diario_AvanceCta\n--              , @hTML_Rpt_Diario_White\n--              , @hTML_Rpt_Diario_Pares\n--              , @hTML_Rpt_Diario_CuotaPar\n--              , @hTML_Rpt_Diario_AvanceCtaPar\n--              , @hTML_Rpt_Diario_AccGra\n--              , @hTML_Rpt_Diario_CuotaAcc\n--              , @hTML_Rpt_Diario_AvanceCtaAcc\n                ) + '&lt;/tr&gt;'\n\n                --SET @tableHTML = ''\n\n                SET @v_VtaTY = (SELECT tb.ventaTY\n                                                FROM   #TVentasB2 AS tb\n                                                WHERE  tb.dia = DAY(@fec))\n                SET @v_VarVenTY = (SELECT tb.DifVtaTYvsLY\n                                                     FROM   #TVentasB2 AS tb\n                                                     WHERE  tb.dia = DAY(@fec))\n                SET @v_VtaLY = (SELECT tb.ventaLY\n                                                FROM   #TVentasB2 AS tb\n                                                WHERE  tb.dia = DAY(@fec))\n\n                SET @v_VtaTY = ISNULL(@v_VtaTY, 0)\n                SET @v_VarVenTY = ISNULL(@v_VarVenTY, 0)\n                SET @v_VtaLY = ISNULL(@v_VtaLY, 0)\n\n                SELECT\n                    'VENTAS ASISTIDAS' AS [bloque]\n                 ,@fec [@fec]\n                 ,@v_VtaTY [@v_VtaTY]\n                 ,@v_VarVenTY [@v_VarVenTY]\n                 ,@v_VtaLY [@v_VtaLY];\n\n\n\n                SET @tableHTML = @tableHTML +\n                N'&lt;br&gt;&lt;br&gt;&lt;br&gt;' +\n                N'&lt;div&gt;&lt;b&gt;VENTA VENTAS ASISTIDAS: &lt;/b&gt;&lt;/div&gt;&lt;br&gt;' +\n                N'&lt;div&gt;La venta total es de ' + CAST(FORMAT(@v_VtaTY, '###,###,###') AS VARCHAR(20)) + '; ' + \n                CASE \n                        WHEN @v_VtaLY&gt;0 THEN '&lt;b&gt;' + (CAST(ROUND(CAST(@v_VarVenTY * 100 AS NUMERIC(7, 2)), 2) AS VARCHAR(100)) + '%') + '&lt;/b&gt;  de diferencia con el a\u00f1o pasado  que  fue de ' + (CAST(FORMAT(@v_VtaLY, '###,###,###') AS VARCHAR(20)))\n                        ELSE ' Sin ventas registradas en a\u00f1o pasado'\n                END + ' .&lt;div&gt;&lt;br&gt;' +\n                N'&lt;br&gt;' +\n                N'&lt;table class=\"tg\" style=\"undefined;table-layout: fixed; width: 767px\"&gt;' +\n\n                N'&lt;colgroup&gt;' +\n                N'&lt;col style=\"width: 40px\"&gt;' +\n                N'&lt;col style=\"width: 48px\"&gt;' +\n\n                N'&lt;col style=\"width: 50px\"&gt;' +\n                N'&lt;col style=\"width: 84px\"&gt;' +\n                N'&lt;col style=\"width: 80px\"&gt;' +\n                N'&lt;col style=\"width: 90px\"&gt;' +\n\n                N'&lt;col style=\"width: 80px\"&gt;' +\n                N'&lt;col style=\"width: 70px\"&gt;' +\n                N'&lt;col style=\"width: 61px\"&gt;' +\n\n                --N'&lt;col style=\"width: 61px\"&gt;'+ \n                --N'&lt;col style=\"width: 68px\"&gt;'+ \n\n                N'&lt;col style=\"width: 70px\"&gt;' +\n\n                N'&lt;col style=\"width: 70px\"&gt;' +\n                N'&lt;col style=\"width: 70px\"&gt;' +\n                N'&lt;col style=\"width: 60px\"&gt;' +\n                N'&lt;col style=\"width: 50px\"&gt;' +\n                N'&lt;col style=\"width: 60px\"&gt;' +\n                N'&lt;col style=\"width: 60px\"&gt;' +\n                N'&lt;/colgroup&gt;' +\n\n                N'&lt;tr&gt;' +\n                N'&lt;th class=\"tg-pesd\"&gt;&lt;/th&gt;' +\n                N'&lt;th class=\"tg-pesd\"&gt;&lt;/th&gt;' +\n                N'&lt;th class=\"tg-fkia\" colspan=\"7\"&gt;2025&lt;/th&gt;' +\n                N'&lt;th class=\"tg-f7xs\" colspan=\"3\"&gt;DIFERENCIA&lt;/th&gt;' +\n                --N'&lt;th class=\"tg-9m3w\" colspan=\"2\"&gt;VENTA S/.&lt;/th&gt;'+\n--              N'&lt;th class=\"tg-fzdr\" colspan=\"1\"&gt;  &lt;/th&gt;' +\n--              N'&lt;th class=\"tg-7l0w\" colspan=\"6\"&gt;VENTA UNIDADES&lt;/th&gt;' +\n                N'&lt;/tr&gt;' +\n                N'&lt;tr&gt;' +\n                N'&lt;td class=\"tg-pesd\"&gt;&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x028\"&gt;Dia&lt;/td&gt;' +\n                --N'&lt;td class=\"tg-x028\"&gt;AccSec&lt;/td&gt;'+ \n                --N'&lt;td class=\"tg-x028\"&gt;AccPri&lt;/td&gt;'+ \n                N'&lt;td class=\"tg-x028\"&gt;Pares&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x028\"&gt;Monto&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x028\"&gt;U.B.&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x0282nn\"&gt;Vta M\u00ednima&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x0282nn\"&gt;% Cumpl&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x0282nn\"&gt;Var&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x028\"&gt;Margen&lt;/td&gt;' +\n\n                --N'&lt;td class=\"tg-x028\"&gt;AccSec&lt;/td&gt;'+ \n                --N'&lt;td class=\"tg-x028\"&gt;AccPri&lt;/td&gt;'+ \n                N'&lt;td class=\"tg-x028\"&gt;Pares&lt;/td&gt;' +\n                --N'&lt;td class=\"tg-x028\"&gt;Unidades&lt;/td&gt;'+ \n\n                N'&lt;td class=\"tg-x028\"&gt;Monto&lt;/td&gt;' +\n                N'&lt;td class=\"tg-x028\"&gt;U.B.&lt;/td&gt;' +\n                --N'&lt;td class=\"tg-x028\"&gt;M\u00ednimo&lt;/td&gt;'+ \n                --N'&lt;td class=\"tg-x028\"&gt;Avance&lt;/td&gt;'+ \n--              N'&lt;td class=\"tg-fzdr\"&gt;&lt;/td&gt;' +\n--              N'&lt;td class=\"tg-x028\"&gt;Pares&lt;/td&gt;' +\n--              N'&lt;td class=\"tg-x028\"&gt;M\u00ednimo&lt;/td&gt;' +\n--              N'&lt;td class=\"tg-x028\"&gt;Avance&lt;/td&gt;' +\n--              N'&lt;td class=\"tg-x028\"&gt;Acces&lt;/td&gt;' +\n--              N'&lt;td class=\"tg-x028\"&gt;M\u00ednimo&lt;/td&gt;' +\n--              N'&lt;td class=\"tg-x028\"&gt;Avance&lt;/td&gt;' +\n                N'&lt;/tr&gt;' + @hTML_Rpt_Diario_24 +\n                N'&lt;/table&gt;';\n            --  &lt;/body&gt;\n            --&lt;/html&gt;';\n\n        END\n        --\n        --\n         --PRINT 'EJECUTADO HASTA AQUI';\n        --SELECT @tableHTML [@tableHTML];   \n        --RETURN\n        ---\n        --- Enviar Correo\n        BEGIN\n            EXEC msdb.dbo.sp_send_dbmail @profile_name='DBA_Passarela'\n                --,@recipients='johnny.marin@footloose.pe' --@email\n                ,@recipients='vdm.info@footloose.pe'\n                ,@subject=@asunto\n                ,@body=@tableHTML\n                ,@blind_copy_recipients= N'Miguel Ayte &lt;miguel.ayte@footloose.pe&gt;'\n                ,@body_format='HTML';\n        END\n\n    END\n\n\nEND\n</code></pre>"},{"location":"procesos/data-warehouse/reportes/vdm/entidades/","title":"DIAGRAMA ENTIDAD RELACION DEL PROCESO VENTAS DIARIAS DEL MES:","text":"<p>\ud83d\udd0d Ver VW_PRODUCTO \ud83d\udd0d Ver VW_PROYECCIONES_TY</p> <pre><code>erDiagram\n    TIEMPOVERSUS ||--o{ VENTASVERSUS2025 : contiene\n    TIEMPOVERSUS ||--o{ VENTASVERSUS2024 : contiene\n    VW_PRODUCTO ||--o{ VENTASVERSUS2025 : referencia\n    VW_PRODUCTO ||--o{ VENTASVERSUS2024 : referencia\n    TIPOARTICULO ||--o{ VW_PRODUCTO : clasifica\n    TB_MEDIOVENTA ||--o{ VENTASVERSUS2025 : referencia\n    TB_MEDIOVENTA ||--o{ VENTASVERSUS2024 : referencia\n    TB_SUBCANAL ||--o{ TB_MEDIOVENTA : agrupa\n    TB_CANAL ||--o{ TB_SUBCANAL : contiene\n    VW_PROYECCIONES_TY ||--o{ TIEMPOVERSUS : referencia\n\n    TIEMPOVERSUS {\n        date Fecha\n        int Dia\n        varchar NDiaSemana\n        int idFecha\n    }\n\n    VENTASVERSUS2025 {\n        int idFecha\n        varchar producto\n        decimal precio\n        int cantidad\n        decimal subtotal\n        decimal SAPcostodetalle\n        int id_medioventa\n    }\n\n    VENTASVERSUS2024 {\n        int idFecha\n        varchar producto\n        decimal precio\n        int cantidad\n        decimal subtotal\n        decimal SAPcostodetalle\n        int id_medioventa\n    }\n\n    VW_PRODUCTO {\n        varchar producto\n        varchar tipoarticulo\n        int id_compradora\n    }\n\n    TIPOARTICULO {\n        varchar tipoarticulo\n        varchar aplicapercepcion\n    }\n\n    TB_MEDIOVENTA {\n        int id_medioventa\n        int id_subcanal\n    }\n\n    TB_SUBCANAL {\n        int id_subcanal\n        int id_canal\n    }\n\n    TB_CANAL {\n        int id_canal\n        varchar canal\n    }\n\n    VW_PROYECCIONES_TY {\n        date FechaSK\n        varchar canal\n        int Par\n        int Acc\n        decimal VtaPar_TY\n        decimal VtaAcc_TY\n        decimal monto\n    }\n</code></pre> Notas importantes sobre el diagrama"},{"location":"procesos/data-warehouse/reportes/vdm/entidades/#descripcion-general","title":"\ud83e\udde9 Descripci\u00f3n General","text":"<p>Este diagrama ER modela las relaciones entre las tablas y vistas utilizadas en el proceso de an\u00e1lisis y reporte de ventas del sistema VDM. Incluye datos hist\u00f3ricos, proyecciones, productos, canales de venta y jerarqu\u00edas comerciales.</p>"},{"location":"procesos/data-warehouse/reportes/vdm/entidades/#entidades-y-atributos","title":"\ud83e\uddf1 Entidades y Atributos","text":""},{"location":"procesos/data-warehouse/reportes/vdm/entidades/#tiempoversus","title":"\ud83d\udcc5 <code>TIEMPOVERSUS</code>","text":"<ul> <li><code>Fecha</code>: Fecha del registro.</li> <li><code>Dia</code>: D\u00eda num\u00e9rico.</li> <li><code>NDiaSemana</code>: Nombre del d\u00eda de la semana.</li> <li><code>idFecha</code>: Identificador \u00fanico de la fecha.</li> </ul>"},{"location":"procesos/data-warehouse/reportes/vdm/entidades/#ventasversus2025-y-ventasversus2024","title":"\ud83d\udcca <code>VENTASVERSUS2025</code> y <code>VENTASVERSUS2024</code>","text":"<ul> <li><code>idFecha</code>: Relaciona con <code>TIEMPOVERSUS</code>.</li> <li><code>producto</code>: C\u00f3digo del producto.</li> <li><code>precio</code>: Precio unitario.</li> <li><code>cantidad</code>: Unidades vendidas.</li> <li><code>subtotal</code>: Total de la venta.</li> <li><code>SAPcostodetalle</code>: Costo SAP.</li> <li><code>id_medioventa</code>: Relaciona con <code>TB_MEDIOVENTA</code>.</li> </ul>"},{"location":"procesos/data-warehouse/reportes/vdm/entidades/#vw_producto","title":"\ud83d\udce6 <code>VW_PRODUCTO</code>","text":"<ul> <li><code>producto</code>: C\u00f3digo del producto.</li> <li><code>tipoarticulo</code>: Tipo de art\u00edculo.</li> <li><code>id_compradora</code>: Identificador de la compradora.</li> </ul>"},{"location":"procesos/data-warehouse/reportes/vdm/entidades/#tipoarticulo","title":"\ud83c\udff7\ufe0f <code>TIPOARTICULO</code>","text":"<ul> <li><code>tipoarticulo</code>: Tipo de art\u00edculo.</li> <li><code>aplicapercepcion</code>: Indicador de percepci\u00f3n.</li> </ul>"},{"location":"procesos/data-warehouse/reportes/vdm/entidades/#tb_medioventa","title":"\ud83d\uded2 <code>TB_MEDIOVENTA</code>","text":"<ul> <li><code>id_medioventa</code>: Identificador del medio de venta.</li> <li><code>id_subcanal</code>: Relaciona con <code>TB_SUBCANAL</code>.</li> </ul>"},{"location":"procesos/data-warehouse/reportes/vdm/entidades/#tb_subcanal","title":"\ud83e\udded <code>TB_SUBCANAL</code>","text":"<ul> <li><code>id_subcanal</code>: Identificador del subcanal.</li> <li><code>id_canal</code>: Relaciona con <code>TB_CANAL</code>.</li> </ul>"},{"location":"procesos/data-warehouse/reportes/vdm/entidades/#tb_canal","title":"\ud83d\udecd\ufe0f <code>TB_CANAL</code>","text":"<ul> <li><code>id_canal</code>: Identificador del canal.</li> <li><code>canal</code>: Nombre del canal.</li> </ul>"},{"location":"procesos/data-warehouse/reportes/vdm/entidades/#vw_proyecciones_ty","title":"\ud83d\udcc8 <code>VW_PROYECCIONES_TY</code>","text":"<ul> <li><code>FechaSK</code>: Fecha de proyecci\u00f3n.</li> <li><code>canal</code>: Canal de venta.</li> <li><code>Par</code>, <code>Acc</code>: Unidades proyectadas.</li> <li><code>VtaPar_TY</code>, <code>VtaAcc_TY</code>: Ventas proyectadas.</li> <li><code>monto</code>: Monto total proyectado.</li> </ul>"},{"location":"procesos/data-warehouse/reportes/vdm/entidades/#relaciones","title":"\ud83d\udd17 Relaciones","text":"<ul> <li><code>TIEMPOVERSUS</code> contiene m\u00faltiples registros en <code>VENTASVERSUS2025</code> y <code>VENTASVERSUS2024</code>.</li> <li><code>VW_PRODUCTO</code> referencia productos en ambas tablas de ventas.</li> <li><code>TIPOARTICULO</code> clasifica productos en <code>VW_PRODUCTO</code>.</li> <li><code>TB_MEDIOVENTA</code> es referenciado por ambas tablas de ventas.</li> <li><code>TB_SUBCANAL</code> agrupa medios de venta.</li> <li><code>TB_CANAL</code> contiene subcanales.</li> <li><code>VW_PROYECCIONES_TY</code> referencia fechas en <code>TIEMPOVERSUS</code>.</li> </ul>"},{"location":"procesos/data-warehouse/reportes/vdm/flujo/","title":"DIAGRAMA DE FLUJO DEL PROCESO DE VENTAS DIARIAS DEL MES:","text":"<pre><code>flowchart TD\n    A[Inicio] --&gt; B[Declarar variables]\n    B --&gt; C[Establecer fechas TY/LY]\n    C --&gt; D[Crear tablas temporales #TVentas1]\n    D --&gt; E[Insertar datos ventas TY/LY en #TVentas1]\n    E --&gt; F[Crear tabla temporal #TVentas2]\n    F --&gt; G[Procesar datos con PIVOT de #TVentas1 para fecha y canal vs cantidades y montos e insertarlos en #TVentas2]\n    G --&gt; H[Crear tabla temporal #TVentasB1]\n    H --&gt; I[Obtener proyecciones y poblar #TProyeccion]\n    I --&gt; J[Generar HTML principal]\n    J --&gt; K[Procesar Retail]\n    K --&gt; L[Procesar Cat\u00e1logo]\n    L --&gt; M[Procesar E-commerce]\n    M --&gt; N[Procesar Ventas Asistidas]\n    N --&gt; O[Construir email HTML]\n    O --&gt; P[Enviar email]\n    P --&gt; Q[Fin]\n\n    subgraph Datos\n        D --&gt;|VentasVersus2025| E\n        E --&gt;|VentasVersus2024| E\n        I --&gt;|vw_proyecciones_TY| I\n    end\n\n    subgraph HTML\n        J --&gt;|Tabla principal| O\n        K --&gt;|Tabla Retail| O\n        L --&gt;|Tabla Cat\u00e1logo| O\n        M --&gt;|Tabla E-commerce| O\n        N --&gt;|Tabla Ventas Asistidas| O\n    end</code></pre>"},{"location":"procesos/data-warehouse/reportes/vdm/flujo/#descripcion-general","title":"\ud83e\udded Descripci\u00f3n General","text":"<p>Este flujo representa el proceso automatizado de generaci\u00f3n y env\u00edo de un reporte de ventas (VDM) por correo electr\u00f3nico. El proceso incluye la preparaci\u00f3n de datos, procesamiento anal\u00edtico, generaci\u00f3n de reportes HTML y env\u00edo de resultados.</p>"},{"location":"procesos/data-warehouse/reportes/vdm/flujo/#etapas-del-proceso","title":"\ud83d\udd04 Etapas del Proceso","text":"<ol> <li>Inicio (<code>A</code>)</li> <li> <p>Punto de partida del procedimiento almacenado.</p> </li> <li> <p>Declaraci\u00f3n de Variables (<code>B</code>)</p> </li> <li> <p>Se definen variables necesarias para el procesamiento, como fechas, acumuladores y estructuras temporales.</p> </li> <li> <p>Establecer Fechas TY/LY (<code>C</code>)</p> </li> <li> <p>Se calculan las fechas de an\u00e1lisis para el a\u00f1o actual (TY) y el a\u00f1o anterior (LY).</p> </li> <li> <p>Crear Tabla Temporal <code>#TVentas1</code> (<code>D</code>)</p> </li> <li> <p>Se crea una tabla temporal para almacenar datos de ventas.</p> </li> <li> <p>Insertar Datos de Ventas TY/LY (<code>E</code>)</p> </li> <li> <p>Se cargan datos de ventas del a\u00f1o actual y anterior en <code>#TVentas1</code>.</p> </li> <li> <p>Crear Tabla Temporal <code>#TVentas2</code> (<code>F</code>)</p> </li> <li> <p>Se crea una segunda tabla temporal para almacenar datos procesados.</p> </li> <li> <p>Procesar Datos con PIVOT (<code>G</code>)</p> </li> <li> <p>Se realiza un PIVOT sobre <code>#TVentas1</code> para reorganizar los datos por fecha y canal, y se insertan en <code>#TVentas2</code>.</p> </li> <li> <p>Crear Tabla Temporal <code>#TVentasB1</code> (<code>H</code>)</p> </li> <li> <p>Se prepara una tabla adicional para consolidar datos.</p> </li> <li> <p>Obtener Proyecciones (<code>I</code>)</p> </li> <li> <p>Se consultan proyecciones desde la vista <code>vw_proyecciones_TY</code> y se insertan en <code>#TProyeccion</code>.</p> </li> <li> <p>Generar HTML Principal (<code>J</code>)</p> <ul> <li>Se construye la tabla HTML principal del reporte.</li> </ul> </li> <li> <p>Procesar Retail (<code>K</code>)</p> </li> <li>Procesar Cat\u00e1logo (<code>L</code>)</li> <li>Procesar E-commerce (<code>M</code>)</li> <li> <p>Procesar Ventas Asistidas (<code>N</code>)</p> <ul> <li>Cada uno de estos pasos genera una tabla HTML espec\u00edfica para el canal correspondiente.</li> </ul> </li> <li> <p>Construir Email HTML (<code>O</code>)</p> <ul> <li>Se ensamblan todas las tablas HTML en un solo cuerpo de correo.</li> </ul> </li> <li> <p>Enviar Email (<code>P</code>)</p> <ul> <li>Se env\u00eda el correo electr\u00f3nico con el reporte.</li> </ul> </li> <li> <p>Fin (<code>Q</code>)</p> <ul> <li>Finaliza la ejecuci\u00f3n del procedimiento.</li> </ul> </li> </ol>"},{"location":"procesos/data-warehouse/reportes/vdm/flujo/#subprocesos-y-recursos","title":"\ud83d\udce6 Subprocesos y Recursos","text":""},{"location":"procesos/data-warehouse/reportes/vdm/flujo/#subproceso-datos","title":"\ud83d\udcca Subproceso: Datos","text":"<ul> <li><code>VentasVersus2025</code> y <code>VentasVersus2024</code> alimentan <code>#TVentas1</code>.</li> <li><code>vw_proyecciones_TY</code> alimenta <code>#TProyeccion</code>.</li> </ul>"},{"location":"procesos/data-warehouse/reportes/vdm/flujo/#subproceso-html","title":"\ud83d\udda5\ufe0f Subproceso: HTML","text":"<ul> <li>Cada bloque de procesamiento de canal genera una tabla HTML que se integra en el cuerpo del correo.</li> </ul>"},{"location":"procesos/data-warehouse/vistas/ER-vw_Producto/","title":"vw_Producto","text":""},{"location":"procesos/data-warehouse/vistas/ER-vw_Producto/#1-diagrama-de-entidad-relacion","title":"1. Diagrama de Entidad Relaci\u00f3n","text":"<pre><code>erDiagram\n    producto ||--o{ tb_clasificacion : \"INNER JOIN\"\n    producto ||--o{ descripcionprincipal : \"LEFT JOIN\"\n    producto ||--o{ marca : \"LEFT JOIN\"\n    producto ||--o{ categoria : \"LEFT JOIN\"\n    producto ||--o{ compradoraCombinacion : \"LEFT JOIN\"\n    producto ||--o{ tmp_alm_stock_producto : \"LEFT JOIN\"\n    producto ||--o{ color : \"LEFT JOIN\"\n    producto ||--o{ linea : \"LEFT JOIN\"\n    producto ||--o{ material : \"LEFT JOIN\"\n    producto ||--o{ modelo : \"LEFT JOIN\"\n    producto ||--o{ talla : \"LEFT JOIN\"\n    producto ||--o{ temporada : \"LEFT JOIN\"\n    producto ||--o{ tipoarticulo : \"LEFT JOIN\"\n    producto ||--o{ tb_product_manager : \"LEFT JOIN\"\n    marca ||--o{ compradoraCombinacion : \"tipomarca2\"\n    descripcionprincipal ||--o{ compradoraCombinacion : \"grupo\"\n    categoria ||--o{ compradoraCombinacion : \"catgroup\"\n    tb_product_manager }|--|| marca : \"MARCA, TIPOMARCA\"\n    tb_product_manager }|--|| descripcionprincipal : \"GRUPO, ARTICULO\"\n    tb_product_manager }|--|| categoria : \"CATEGORIA\"\n\n    producto {\n        string producto PK\n        string nombre\n        decimal preciocosto\n        decimal precio\n        datetime fechaingreso\n        string estado\n        string marca FK\n        string material FK\n        string modelo FK\n        string talla FK\n        string color FK\n        string categoria FK\n        string tipoarticulo FK\n        string linea FK\n        string temporada FK\n        string descripcionprincipal FK\n        string descripcionsecundaria\n        datetime fechacompra\n        string prodOferta\n        string productoestilo\n        string plataforma\n        string altura\n        datetime fechaing\n        string productouso\n        datetime FecIngCD\n        datetime FecIngTD\n        string procedencia\n        string proveedor\n        string idclasificacion\n        string lineaname\n        string uso\n        string estilo\n        string ocasion\n        string detalle_planta\n        string campa\u00f1a\n        string mesq\n        string tec_planta\n        string tec_plantilla\n        string TIPOCONSTRUCCION\n        string CONSTRUCCION\n    }\n\n    tb_clasificacion {\n        string codigointerno PK\n        string clasificacion\n    }\n\n    descripcionprincipal {\n        string descripcionprincipal PK\n        string id_grupo\n        string grupo\n        string nombre\n    }\n\n    marca {\n        string marca PK\n        string nombre\n        string tipomarca\n        string tipomarca2\n    }\n\n    categoria {\n        string categoria PK\n        string nombre\n        string catgroup\n        string resumen\n    }\n\n    compradoraCombinacion {\n        string tipomarca2 PK\n        string grupo PK\n        string catgroup PK\n        string id_compradora\n    }\n\n    tmp_alm_stock_producto {\n        string Codigointerno PK\n        string urlimagen\n    }\n\n    color {\n        string color PK\n        string nombre\n    }\n\n    linea {\n        string linea PK\n        string nombre\n    }\n\n    material {\n        string material PK\n        string nombre\n    }\n\n    modelo {\n        string modelo PK\n        string nombre\n    }\n\n    talla {\n        string talla PK\n        string nombre\n    }\n\n    temporada {\n        string temporada PK\n        string nombre\n        string resumen\n    }\n\n    tipoarticulo {\n        string tipoarticulo PK\n        string nombre\n        string resumen\n    }\n\n    tb_product_manager {\n        string MARCA PK\n        string TIPOMARCA PK\n        string CATEGORIA PK\n        string GRUPO PK\n        string ARTICULO PK\n        string PRODUCT_MANAGER\n    }</code></pre> Notas importantes sobre el diagrama"},{"location":"procesos/data-warehouse/vistas/ER-vw_Producto/#2-notas-importantes-sobre-el-diagrama","title":"2. Notas importantes sobre el diagrama","text":"<ol> <li>La entidad principal es <code>producto</code> que se relaciona con m\u00faltiples tablas de referencia</li> <li>Se muestran las relaciones INNER JOIN (con tb_clasificacion) y LEFT JOIN (con las dem\u00e1s tablas)</li> <li>La tabla compradoraCombinacion tiene una relaci\u00f3n compuesta con marca, descripcionprincipal y categoria</li> <li>La tabla tb_product_manager tiene una relaci\u00f3n compuesta con m\u00faltiples campos de otras tablas</li> <li>Se incluyen los campos PK (Primary Key) y FK (Foreign Key) relevantes</li> <li>La vista filtra productos donde temporada &gt; '61' y excluye los productos listados en tb_productos_excluidos</li> </ol>"},{"location":"procesos/data-warehouse/vistas/ER-vw_proyecciones_TY/","title":"vw_proyecciones_TY","text":""},{"location":"procesos/data-warehouse/vistas/ER-vw_proyecciones_TY/#1-diagrama-de-entidad-relacion","title":"1. Diagrama de Entidad Relaci\u00f3n","text":"<pre><code>erDiagram\n    vw_proyecciones_TY {\n        string Canal\n        string SubCanal\n        string MedioVenta\n        decimal monto\n        string fecha\n        decimal margen\n        decimal utilidad\n        decimal Par\n        decimal Acc\n        int id_medioventa\n        string supervisor\n        string email\n        string codigo\n        string NombreTienda\n        string Estado\n        date Fecha_LY\n        date Fecha_TY\n        int UndPar_LY\n        int UndAcc_LY\n        int Und_LY\n        decimal VtaPar_LY\n        decimal VtaAcc_LY\n        decimal Vta_LY\n        decimal CtoPar_LY\n        decimal CtoACC_LY\n        decimal Cto_LY\n        decimal MgPar_LY\n        decimal MgAcc_LY\n        decimal Mg_LY\n        decimal UtiPar_LY\n        decimal UtiAcc_LY\n        decimal Uti_LY\n        int UndDepor_TY\n        int Und_No_Depor_TY\n        int UndPar_TY\n        int UndAcc_TY\n        int Und_TY\n        decimal VtaDepor_TY\n        decimal Vta_No_Depor_TY\n        decimal VtaPar_TY\n        decimal VtaAcc_TY\n        decimal Vta_TY\n        decimal CtoPar_TY\n        decimal CtoACC_TY\n        decimal Cto_TY\n        decimal MgPar_TY\n        decimal MgAcc_TY\n        decimal Mg_TY\n        decimal UtiPar_TY\n        decimal UtiAcc_TY\n        decimal Uti_TY\n        string canalventa\n    }\n\n    proyecciones {\n        decimal monto\n        string fecha\n        decimal margen\n        decimal utilidad\n        decimal Par\n        decimal Acc\n        int id_medioventa\n        string Supervisor\n    }\n\n    vw_canalsubcanal {\n        string Canal\n        string SubCanal\n        string MedioVenta\n        int id_medioventa\n    }\n\n    tb_xls_proy_24_all {\n        string NombreTienda\n        string Estado\n        date Fecha_2023\n        date Fecha_2024\n        int UndDepor_2023\n        int Und_No_Depor_2023\n        int UndAcc_2023\n        int Und_2023\n        decimal VtaDepor_2023\n        decimal Vta_No_Depor_2023\n        decimal VtaAcc_2023\n        decimal Vta_2023\n        decimal CtoPar_2023\n        decimal CtoACC_2023\n        decimal Cto_2023\n        decimal MgDepor_2023\n        decimal Mg_NoDepor_2023\n        decimal MgAcc_2023\n        decimal Mg_2023\n        decimal UtiD_2023\n        decimal UtiND_2023\n        decimal UtiAcc_2023\n        decimal Uti_2023\n        int UndDepor_2024\n        int Und_No_Depor_2024\n        int UndAcc_2024\n        int Und_2024\n        decimal VtaDepor_2024\n        decimal Vta_No_Depor_2024\n        decimal VtaAcc_2024\n        decimal Vta_2024\n        decimal CtoDepor_2024\n        decimal Cto_No_Depor_2024\n        decimal CtoACC_2024\n        decimal Cto_2024\n        decimal MgDepor_2024\n        decimal Mg_No_Depor_2024\n        decimal MgAcc_2024\n        decimal Mg_2024\n        decimal UtiD_2024\n        decimal UtiND_2024\n        decimal UtiAcc_2024\n        decimal Uti_2024\n        string MedioVenta\n        int id_medioventa\n    }\n\n    tb_xls_proy_TY_all {\n        string NombreTienda\n        string Estado\n        date Fecha_LY\n        date Fecha_TY\n        int UndDepor_LY\n        int Und_No_Depor_LY\n        int UndAcc_LY\n        int Und_LY\n        decimal VtaDepor_LY\n        decimal Vta_No_Depor_LY\n        decimal VtaAcc_LY\n        decimal Vta_LY\n        decimal CtoPar_LY\n        decimal CtoACC_LY\n        decimal Cto_LY\n        decimal MgDepor_LY\n        decimal Mg_NoDepor_LY\n        decimal MgAcc_LY\n        decimal Mg_LY\n        decimal UtiD_LY\n        decimal UtiND_LY\n        decimal UtiAcc_LY\n        decimal Uti_LY\n        int UndDepor_TY\n        int Und_No_Depor_TY\n        int UndAcc_TY\n        int Und_TY\n        decimal VtaDepor_TY\n        decimal Vta_No_Depor_TY\n        decimal VtaAcc_TY\n        decimal Vta_TY\n        decimal CtoDepor_TY\n        decimal Cto_No_Depor_TY\n        decimal CtoACC_TY\n        decimal Cto_TY\n        decimal MgDepor_TY\n        decimal Mg_No_Depor_TY\n        decimal MgAcc_TY\n        decimal Mg_TY\n        decimal UtiD_TY\n        decimal UtiND_TY\n        decimal UtiAcc_TY\n        decimal Uti_TY\n        string MedioVenta\n        int id_medioventa\n        string Canal\n    }\n\n    supervisor {\n        string nombre\n        string email\n        string codigo\n        string tienda\n    }\n\n    vw_proyecciones_TY }|--|| proyecciones : \"LEFT JOIN on id_medioventa and fecha\"\n    vw_proyecciones_TY }|--|| vw_canalsubcanal : \"LEFT JOIN on id_medioventa\"\n    vw_proyecciones_TY }|--|| tb_xls_proy_24_all : \"LEFT JOIN on id_medioventa and fecha (2024)\"\n    vw_proyecciones_TY }|--|| tb_xls_proy_TY_all : \"LEFT JOIN on id_medioventa and fecha (TY)\"\n    vw_proyecciones_TY }|--|| supervisor : \"LEFT JOIN on nombre=Supervisor\"\n    vw_proyecciones_TY }|--|| supervisor : \"LEFT JOIN on tienda=MedioVenta+canal\"</code></pre> Notas importantes sobre el diagrama"},{"location":"procesos/data-warehouse/vistas/ER-vw_proyecciones_TY/#2-notas-sobre-el-diagrama","title":"2. Notas sobre el diagrama","text":"<ol> <li>La vista <code>vw_proyecciones_TY</code> combina datos de m\u00faltiples tablas mediante UNION ALL de dos consultas principales.</li> <li>La primera parte usa datos de <code>tb_xls_proy_24_all</code> para fechas antes del 1 de agosto de 2024.</li> <li>La segunda parte usa datos de <code>tb_xls_proy_TY_all</code> para fechas posteriores al 31 de julio de 2024.</li> <li>Hay dos relaciones con la tabla <code>supervisor</code>: una por nombre y otra por tienda+canal.</li> <li>Todas las relaciones son LEFT JOIN para preservar los registros incluso cuando no hay coincidencia.</li> <li>La vista incluye datos hist\u00f3ricos (LY - Last Year) y de proyecci\u00f3n (TY - This Year).</li> </ol>"},{"location":"proyectos/mejora-sp-compras/","title":"Documentaci\u00f3n del Proyecto de Mejora ETL","text":"<p>Este \u00edndice facilita la navegaci\u00f3n a trav\u00e9s de la documentaci\u00f3n del proyecto de optimizaci\u00f3n del proceso ETL del SP \"sp_compras\".</p>"},{"location":"proyectos/mejora-sp-compras/#archivos-del-proyecto","title":"\ud83d\udcc2 Archivos del Proyecto","text":"<ul> <li>Proyecto de Mejora: Optimizaci\u00f3n del Proceso ETL \"sp_compras\"<ul> <li>Objetivo del proyecto</li> <li>Situaci\u00f3n actual (problema, hallazgos clave)</li> <li>Situaci\u00f3n propuesta (acciones, nuevo SP)</li> <li>Impacto en los OKR</li> </ul> </li> </ul>"},{"location":"proyectos/mejora-sp-compras/#detalles-tecnicos","title":"\ud83d\udd0d Detalles T\u00e9cnicos","text":"<ul> <li><code>sp_compras.sql</code><ul> <li>C\u00f3digo fuente original del stored procedure <code>sp_compras</code>.</li> </ul> </li> <li><code>descripcion.md</code><ul> <li>Descripci\u00f3n detallada del problema, historial de ejecuci\u00f3n del job y hallazgos de la exploraci\u00f3n de datos.</li> </ul> </li> <li><code>usp_etl_cargar_proveedores_modelos.sql</code><ul> <li>C\u00f3digo fuente del nuevo stored procedure propuesto para cargar proveedores y modelos.</li> </ul> </li> </ul>"},{"location":"proyectos/mejora-sp-compras/#herramientas-y-consultas","title":"\ud83d\udcc8 Herramientas y Consultas","text":"<ul> <li>Consulta de Historial de Ejecuci\u00f3n de Job<ul> <li>SQL para monitorear la duraci\u00f3n de los pasos de un job.</li> </ul> </li> </ul>"},{"location":"proyectos/mejora-sp-compras/Proyecto_Mejora_ETL_sp_compras/","title":"Proyecto de Mejora: Optimizaci\u00f3n del Proceso ETL \"sp_compras\" \ud83d\ude80","text":""},{"location":"proyectos/mejora-sp-compras/Proyecto_Mejora_ETL_sp_compras/#objetivo","title":"Objetivo","text":"<p>El objetivo principal de este proyecto es optimizar el tiempo de ejecuci\u00f3n del paso 7 (<code>step_jo_dwh_compras</code>) del job \"0200_job_jo_dwh_comercial\", reduci\u00e9ndolo de un promedio de m\u00e1s de 1 hora a un tiempo significativamente menor, liberando recursos y mejorando la eficiencia general del Data Warehouse.</p>"},{"location":"proyectos/mejora-sp-compras/Proyecto_Mejora_ETL_sp_compras/#situacion-actual","title":"Situaci\u00f3n Actual \ud83d\udcc9","text":"<p>Actualmente, el proceso ETL implementado en el <code>sp_compras</code> es responsable de cargar y transformar datos relacionados con compras. La ejecuci\u00f3n de este stored procedure como parte del job \"0200_job_jo_dwh_comercial\" est\u00e1 tomando consistentemente m\u00e1s de 1 hora en completarse, como se observa en el historial de ejecuci\u00f3n.</p>"},{"location":"proyectos/mejora-sp-compras/Proyecto_Mejora_ETL_sp_compras/#hallazgos-clave","title":"Hallazgos Clave:","text":"<ul> <li>Rendimiento Deficiente: El paso <code>step_jo_dwh_compras</code> tiene una duraci\u00f3n promedio de m\u00e1s de 1 hora, lo que representa un cuello de botella en el proceso diario del Data Warehouse.</li> <li>Tablas Destino en Desuso / Vac\u00edas:<ul> <li><code>dbo.GUIA</code>: Su \u00faltima fecha de registro (<code>20240104</code>) indica que no ha sido actualizada en un tiempo considerable, sugiriendo que est\u00e1 en desuso.</li> <li><code>dbo.OC</code>: Su \u00faltima fecha de emisi\u00f3n (<code>20241223</code>) tambi\u00e9n la marca como potencialmente en desuso.</li> <li><code>dbo.PRECOMPRA</code>: Esta tabla est\u00e1 completamente vac\u00eda, lo que sugiere que su proceso de carga no est\u00e1 funcionando o que ha sido descontinuada.</li> </ul> </li> <li>Redundancia de <code>productos_compra</code>: La tabla <code>dbo.productos_compra</code> es id\u00e9ntica en estructura y contenido a <code>dbo.producto</code>. Esto implica una duplicaci\u00f3n innecesaria de datos y un paso de ETL que no agrega valor.</li> <li>Proceso Redundante de Carga: Las tablas <code>dbo.GUIA</code>, <code>dbo.OC</code>, y <code>dbo.PRECOMPRA</code> son pobladas actualmente por el <code>sp_compras</code>, pero tambi\u00e9n se ha identificado que son alimentadas por una integraci\u00f3n con SAP B1. Esto indica una duplicidad en los procesos de carga, donde el <code>sp_compras</code> podr\u00eda estar realizando un trabajo innecesario o desactualizado para estas entidades.</li> <li>Tablas Vigentes: <code>dbo.modeloC</code> y <code>dbo.proveedorC</code> est\u00e1n activas y contienen datos recientes (<code>MAX(fechaingreso)</code> para <code>proveedorC</code> es <code>20250715</code>), lo que confirma su relevancia y correcto funcionamiento.</li> </ul>"},{"location":"proyectos/mejora-sp-compras/Proyecto_Mejora_ETL_sp_compras/#situacion-propuesta","title":"Situaci\u00f3n Propuesta \u2728","text":"<p>Se propone refactorizar el proceso ETL para el m\u00f3dulo de compras, eliminando las operaciones redundantes y desactualizadas, y centralizando la carga de datos en un nuevo procedimiento almacenado (<code>usp_etl_cargar_proveedores_modelos</code>) que se enfocar\u00e1 solo en las entidades vigentes y necesarias para el Data Warehouse (<code>dbo.proveedorC</code> y <code>dbo.modeloC</code>).</p>"},{"location":"proyectos/mejora-sp-compras/Proyecto_Mejora_ETL_sp_compras/#acciones-propuestas","title":"Acciones Propuestas:","text":"<ol> <li>Creaci\u00f3n de <code>usp_etl_cargar_proveedores_modelos</code>:<ul> <li>Este nuevo SP se encargar\u00e1 exclusivamente de la extracci\u00f3n y consolidaci\u00f3n de informaci\u00f3n de proveedores y modelos desde el servidor vinculado <code>SERVNPROD</code>.</li> <li>Eliminar\u00e1 y recrear\u00e1 las tablas locales <code>dbo.proveedorC</code> y <code>dbo.modeloC</code> con los datos m\u00e1s recientes.</li> <li> <ol> <li>Modificaci\u00f3n del Job \"0200_job_jo_dwh_comercial\":</li> </ol> </li> <li>Se eliminar\u00e1 la ejecuci\u00f3n del <code>sp_compras</code> del paso 7 del job \"0200_job_jo_dwh_comercial\".</li> <li>Se sustituir\u00e1 esta ejecuci\u00f3n por la llamada al nuevo <code>usp_etl_cargar_proveedores_modelos</code>.</li> </ul> </li> <li>Depuraci\u00f3n de <code>sp_compras</code>:<ul> <li>El <code>sp_compras</code> ser\u00e1 revisado para eliminar las secciones de c\u00f3digo que cargan o manipulan las tablas <code>dbo.GUIA</code>, <code>dbo.OC</code>, <code>dbo.PRECOMPRA</code>, y <code>dbo.productos_compra</code>.</li> <li>Considerar la eliminaci\u00f3n definitiva de <code>dbo.productos_compra</code> si no se encuentra un uso distinto al de ser una copia de <code>dbo.producto</code>.</li> <li>Validar la integraci\u00f3n de SAP B1 para asegurar que las tablas <code>dbo.GUIA</code>, <code>dbo.OC</code>, y <code>dbo.PRECOMPRA</code> se est\u00e9n poblando correctamente y que no haya dependencias ocultas del <code>sp_compras</code>.</li> </ul> </li> <li>Monitoreo y Validaci\u00f3n:<ul> <li>Monitorear la duraci\u00f3n del paso 7 del job despu\u00e9s de la implementaci\u00f3n para verificar la reducci\u00f3n del tiempo de ejecuci\u00f3n.</li> <li>Validar la integridad y actualidad de los datos en <code>dbo.proveedorC</code> y <code>dbo.modeloC</code>.</li> </ul> </li> </ol>"},{"location":"proyectos/mejora-sp-compras/Proyecto_Mejora_ETL_sp_compras/#impacto-en-los-okr","title":"Impacto en los OKR \ud83c\udfaf","text":"<p>Esta mejora tendr\u00e1 un impacto directo y positivo en los siguientes Objetivos y Resultados Clave (OKR):</p> <ul> <li>Objetivo: Mejorar la Eficiencia Operacional del Data Warehouse.<ul> <li>Resultado Clave (KR1): Reducir el tiempo de ejecuci\u00f3n del job \"0200_job_jo_dwh_comercial\" en al menos un 50% para el <code>step_jo_dwh_compras</code> (paso 7). Actualmente, el tiempo promedio es de 1 hora; el objetivo es reducirlo a 7 segundos o menos.</li> <li>Resultado Clave (KR2): Disminuir el consumo de recursos (CPU, I/O) asociados a la ejecuci\u00f3n del proceso ETL de compras en m\u00e1s del 90%. Esto se lograr\u00e1 al eliminar operaciones redundantes y el procesamiento de tablas en desuso.</li> </ul> </li> <li>Objetivo: Asegurar la Confiabilidad y Calidad de los Datos del Data Warehouse.<ul> <li>Resultado Clave (KR1): Garantizar que las tablas <code>dbo.proveedorC</code> y <code>dbo.modeloC</code> se actualicen diariamente con la informaci\u00f3n m\u00e1s reciente y precisa de <code>SERVNPROD</code>.</li> <li>Resultado Clave (KR2): Eliminar la redundancia de datos y procesos, mejorando la consistencia y reduciendo el riesgo de errores en el pipeline de datos.</li> </ul> </li> <li>Objetivo: Optimizar la Utilizaci\u00f3n de la Infraestructura de Base de Datos.<ul> <li>Resultado Clave (KR1): Liberar capacidad de procesamiento en el servidor de base de datos al reducir la carga de trabajo del proceso ETL de compras, permitiendo que otros procesos o consultas se ejecuten de manera m\u00e1s eficiente.</li> <li>Resultado Clave (KR2): Reducir el espacio de almacenamiento innecesario si se elimina la tabla <code>dbo.productos_compra</code>.</li> </ul> </li> </ul>"},{"location":"proyectos/mejora-sp-compras/descripcion/","title":"OPTIMIZACION DEL PROCESO ETL DEL SP \"SP_COMPRAS\"","text":""},{"location":"proyectos/mejora-sp-compras/descripcion/#problema","title":"Problema","text":"<p>Se tiene que la ejecuci\u00f3n del paso 7 del job \"0200_job_jo_dwh_comercial\" est\u00e1 demandando tiempos en promedio mayores a 1 hora:</p> ID JobName step_id step_name RunDateTime Duration ExecutionStatus 06 0200_job_jo_dwh_comercial 7 step_jo_dwh_compras 2025-07-16 02:14:56.000 01:03:14 Succeeded 05 0200_job_jo_dwh_comercial 7 step_jo_dwh_compras 2025-07-15 02:15:42.000 01:00:03 Succeeded 04 0200_job_jo_dwh_comercial 7 step_jo_dwh_compras 2025-07-14 02:14:12.000 00:57:22 Succeeded 03 0200_job_jo_dwh_comercial 7 step_jo_dwh_compras 2025-07-13 02:14:12.000 00:57:55 Succeeded 02 0200_job_jo_dwh_comercial 7 step_jo_dwh_compras 2025-07-12 02:15:40.000 01:01:43 Succeeded 01 0200_job_jo_dwh_comercial 7 step_jo_dwh_compras 2025-07-11 02:15:55.000 00:55:58 Succeeded Consulta para determinar historial de ejecuci\u00f3n del paso n de un job Consulta para determinar historial de ejecuci\u00f3n del paso n de un job<pre><code>USE msdb;\nGO\n\nSELECT TOP 10\n    j.name AS JobName,\n    s.step_id,\n    s.step_name,\n    CONVERT(DATETIME, \n        STUFF(STUFF(CAST(h.run_date AS CHAR(8)), 5, 0, '-'), 8, 0, '-') + ' ' +\n        STUFF(STUFF(RIGHT('000000' + CAST(h.run_time AS VARCHAR(6)), 6), 3, 0, ':'), 6, 0, ':')\n    ) AS RunDateTime,\n    RIGHT('00' + CAST(h.run_duration / 10000 AS VARCHAR), 2) + ':' +\n    RIGHT('00' + CAST((h.run_duration % 10000) / 100 AS VARCHAR), 2) + ':' +\n    RIGHT('00' + CAST(h.run_duration % 100 AS VARCHAR), 2) AS Duration,\n    CASE h.run_status\n        WHEN 0 THEN 'Failed'\n        WHEN 1 THEN 'Succeeded'\n        WHEN 2 THEN 'Retry'\n        WHEN 3 THEN 'Canceled'\n        WHEN 4 THEN 'In Progress'\n        ELSE 'Unknown'\n    END AS ExecutionStatus\nFROM dbo.sysjobhistory h\nJOIN dbo.sysjobs j ON h.job_id = j.job_id\nJOIN dbo.sysjobsteps s ON j.job_id = s.job_id AND h.step_id = s.step_id\nWHERE j.name = '0200_job_jo_dwh_comercial'\n  AND s.step_id = 7\n  AND s.step_name = 'step_jo_dwh_compras'\nORDER BY RunDateTime DESC;\n</code></pre> <p>Para optimizar el proceso ETL del SP <code>sp_compras</code>, primero debemos identificar claramente las entidades origen (de d\u00f3nde provienen los datos) y las entidades destino (d\u00f3nde se cargan o transforman los datos).</p>"},{"location":"proyectos/mejora-sp-compras/descripcion/#entidades-origen","title":"Entidades Origen \ud83d\udce5","text":"<p>Las entidades origen son principalmente tablas de la base de datos <code>SERVNPROD.bd_passarela</code> y, en algunos casos, datos preexistentes en las tablas destino que se utilizan para c\u00e1lculos o comparaciones.</p> <ul> <li><code>SERVNPROD.bd_passarela.dbo.tb_dwh_oc</code>: Utilizada para cargar datos en la tabla <code>OC</code>.</li> <li><code>SERVNPROD.bd_passarela.dbo.TRANSACCIONDETALLE</code>: Una fuente clave para <code>PRECOMPRA</code> y <code>GUIA</code>, contiene detalles de transacciones.</li> <li><code>SERVNPROD.bd_passarela.dbo.TRANSACCIONCABECERA</code>: Contiene informaci\u00f3n de cabecera de las transacciones, esencial para <code>PRECOMPRA</code> y <code>GUIA</code>.</li> <li><code>SERVNPROD.bd_passarela.dbo.FORMAPAGO</code>: Usada para obtener detalles de las condiciones de pago en <code>PRECOMPRA</code>.</li> <li><code>SERVNPROD.bd_passarela.dbo.PRODUCTO</code>: Proporciona informaci\u00f3n de productos (SKU, nombre) para <code>PRECOMPRA</code> y <code>GUIA</code>.</li> <li><code>SERVNPROD.bd_passarela.dbo.ALMACEN</code>: Utilizada para obtener nombres de almacenes en <code>PRECOMPRA</code> y <code>GUIA</code>.</li> <li><code>SERVNPROD.bd_passarela.dbo.PERSONA</code>: Contiene datos de proveedores (<code>PRECOMPRA</code> y <code>GUIA</code>) y proveedores completos (<code>proveedorC</code>).</li> <li><code>SERVNPROD.bd_passarela.dbo.PERSONATIPOPERSONA</code>: Usada para filtrar y obtener personas de tipo proveedor en la carga de <code>proveedorC</code>.</li> <li><code>SERVNPROD.bd_passarela.dbo.PERSONATIPODOCUMENTO</code>: Proporciona n\u00fameros de documento para los proveedores en <code>proveedorC</code>.</li> <li><code>SERVNPROD.bd_passarela.dbo.COMPRASGUIAS</code>: Se utiliza para vincular gu\u00edas a compras en la secci\u00f3n de migraci\u00f3n de gu\u00edas.</li> <li><code>SERVNPROD.bd_passarela.dbo.Modelo</code>: Fuente para la tabla <code>modeloC</code>.</li> <li><code>dbo.GUIA</code>: Utilizada como origen para la secci\u00f3n de duplicados y para actualizar el estado en <code>OC</code>.</li> <li><code>dbo.OC</code>: Utilizada como origen para actualizar su propio estado.</li> <li><code>dbo.producto</code>: Usada como origen para <code>productos_compra</code>.</li> </ul>"},{"location":"proyectos/mejora-sp-compras/descripcion/#entidades-destino","title":"Entidades Destino \ud83c\udfaf","text":"<p>Las entidades destino son las tablas donde el SP carga, inserta, actualiza o elimina datos.</p> <ul> <li><code>dbo.productos_compra</code>: Se trunca y se vuelve a poblar con datos de la tabla <code>producto</code>.</li> <li><code>dbo.OC</code>: Los registros se eliminan para a\u00f1os espec\u00edficos y luego se insertan nuevos datos desde <code>SERVNPROD.bd_passarela.dbo.tb_dwh_oc</code>. Tambi\u00e9n se actualiza su campo <code>ESTADO</code> bas\u00e1ndose en datos de <code>GUIA</code>.</li> <li><code>dbo.PRECOMPRA</code>: Los registros se eliminan para el a\u00f1o en curso y luego se insertan nuevos datos obtenidos a trav\u00e9s de <code>OPENQUERY</code> desde el servidor vinculado <code>SERVNPROD</code>.</li> <li><code>dbo.GUIA</code>: Los registros se eliminan para el a\u00f1o en curso, luego se insertan datos de gu\u00edas de ingreso despu\u00e9s de un proceso de uni\u00f3n y agrupaci\u00f3n. Tambi\u00e9n se actualizan los registros duplicados estableciendo su cantidad a cero.</li> <li><code>dbo.proveedorC</code>: Es truncada y luego poblada con informaci\u00f3n detallada de proveedores obtenida a trav\u00e9s de <code>OPENQUERY</code> desde el servidor vinculado <code>SERVNPROD</code>.</li> <li><code>dbo.modeloC</code>: Es truncada y luego poblada con datos de modelos desde <code>servnprod.bd_passarela.dbo.Modelo</code>.</li> </ul>"},{"location":"proyectos/mejora-sp-compras/descripcion/#hallazgos","title":"Hallazgos:","text":"<p>Se tienen los siguientes hallazgos:</p> <ul> <li>La entidad <code>dbo.productos_compra</code> es exactamente igual que la entidad <code>dbo.producto</code>, tanto en estructura (Columnas y Tipo) como en n\u00famero de filas.</li> </ul> Listar comparaci\u00f3n de estructuras de dos tablas <pre><code>WITH columnas AS (\n    SELECT \n        TABLE_NAME,\n        COLUMN_NAME,\n        DATA_TYPE,\n        CHARACTER_MAXIMUM_LENGTH,\n        NUMERIC_PRECISION,\n        NUMERIC_SCALE\n    FROM INFORMATION_SCHEMA.COLUMNS\n    WHERE TABLE_NAME IN ('producto', 'productos_compra')\n)\nSELECT \n    COALESCE(p.COLUMN_NAME, pc.COLUMN_NAME) AS COLUMN_NAME,\n    p.DATA_TYPE AS PRODUCTO_DATA_TYPE,\n    pc.DATA_TYPE AS PRODUCTOS_COMPRA_DATA_TYPE,\n    p.CHARACTER_MAXIMUM_LENGTH AS PRODUCTO_LENGTH,\n    pc.CHARACTER_MAXIMUM_LENGTH AS PRODUCTOS_COMPRA_LENGTH,\n    p.NUMERIC_PRECISION AS PRODUCTO_PRECISION,\n    pc.NUMERIC_PRECISION AS PRODUCTOS_COMPRA_PRECISION,\n    p.NUMERIC_SCALE AS PRODUCTO_SCALE,\n    pc.NUMERIC_SCALE AS PRODUCTOS_COMPRA_SCALE\nFROM \n    columnas p\nFULL OUTER JOIN columnas pc\n    ON p.COLUMN_NAME = pc.COLUMN_NAME\n    AND p.TABLE_NAME = 'producto'\n    AND pc.TABLE_NAME = 'productos_compra'\nWHERE \n    p.TABLE_NAME = 'producto' OR pc.TABLE_NAME = 'productos_compra'\nORDER BY COLUMN_NAME;\n</code></pre> Listar comparaci\u00f3n de estructuras de dos tablas (Solo aquellas que tengan diferencias) <pre><code>WITH columnas AS (\n    SELECT \n        TABLE_NAME,\n        COLUMN_NAME,\n        DATA_TYPE,\n        CHARACTER_MAXIMUM_LENGTH,\n        NUMERIC_PRECISION,\n        NUMERIC_SCALE\n    FROM INFORMATION_SCHEMA.COLUMNS\n    WHERE TABLE_NAME IN ('producto', 'productos_compra')\n),\ncomparacion AS (\n    SELECT \n        COALESCE(p.COLUMN_NAME, pc.COLUMN_NAME) AS COLUMN_NAME,\n        p.DATA_TYPE AS PRODUCTO_DATA_TYPE,\n        pc.DATA_TYPE AS PRODUCTOS_COMPRA_DATA_TYPE,\n        p.CHARACTER_MAXIMUM_LENGTH AS PRODUCTO_LENGTH,\n        pc.CHARACTER_MAXIMUM_LENGTH AS PRODUCTOS_COMPRA_LENGTH,\n        p.NUMERIC_PRECISION AS PRODUCTO_PRECISION,\n        pc.NUMERIC_PRECISION AS PRODUCTOS_COMPRA_PRECISION,\n        p.NUMERIC_SCALE AS PRODUCTO_SCALE,\n        pc.NUMERIC_SCALE AS PRODUCTOS_COMPRA_SCALE\n    FROM \n        columnas p\n    FULL OUTER JOIN columnas pc\n        ON p.COLUMN_NAME = pc.COLUMN_NAME\n        AND p.TABLE_NAME = 'producto'\n        AND pc.TABLE_NAME = 'productos_compra'\n    WHERE \n        p.TABLE_NAME = 'producto' OR pc.TABLE_NAME = 'productos_compra'\n)\nSELECT *\nFROM comparacion\nWHERE \n    PRODUCTO_DATA_TYPE IS NULL OR PRODUCTOS_COMPRA_DATA_TYPE IS NULL OR\n    PRODUCTO_DATA_TYPE &lt;&gt; PRODUCTOS_COMPRA_DATA_TYPE OR\n    PRODUCTO_LENGTH &lt;&gt; PRODUCTOS_COMPRA_LENGTH OR\n    PRODUCTO_PRECISION &lt;&gt; PRODUCTOS_COMPRA_PRECISION OR\n    PRODUCTO_SCALE &lt;&gt; PRODUCTOS_COMPRA_SCALE\nORDER BY COLUMN_NAME;\n</code></pre> <ul> <li>Informe de Hallazgos de Exploraci\u00f3n de Datos \ud83d\udcca</li> </ul> ID Tabla Destino Estado Actual Comentario 01 <code>modeloC</code> Vigente 81,600 registros. 02 <code>dbo.GUIA</code> En desuso \u00daltima <code>fecharegistro</code>: 20240104. 03 <code>dbo.OC</code> En desuso \u00daltima <code>fechaemision</code>: 20241223. 04 <code>dbo.PRECOMPRA</code> Vac\u00edo / En desuso No contiene registros. 05 <code>dbo.proveedorC</code> Vigente \u00daltima <code>fechaingreso</code>: 20250715. <p>An\u00e1lisis de los Hallazgos:</p> <ul> <li>Las tablas <code>dbo.GUIA</code>, <code>dbo.OC</code>, y <code>dbo.PRECOMPRA</code> parecen estar en desuso o no se est\u00e1n actualizando con los datos m\u00e1s recientes. Esto es cr\u00edtico para un proceso ETL, ya que indica que estas tablas no est\u00e1n cumpliendo su prop\u00f3sito de almacenar informaci\u00f3n actualizada.</li> <li>La tabla <code>dbo.PRECOMPRA</code> est\u00e1 completamente vac\u00eda, lo que sugiere un problema en el proceso de carga o que su uso ha sido descontinuado por completo.</li> <li><code>modeloC</code> y <code>proveedorC</code> est\u00e1n vigentes y contienen datos recientes, lo que indica que sus procesos de carga funcionan correctamente.</li> </ul> <p>Estos hallazgos son importantes para la optimizaci\u00f3n del proceso ETL, ya que un proceso ineficiente o con tablas en desuso puede consumir recursos innecesarios.</p>"},{"location":"proyectos/mejora-sp-compras/descripcion/#mejora-propuesta","title":"Mejora propuesta","text":"<p>Crear un nuevo procedimiento almacenado que incluya solo las tablas vigentes, dado que las tablas destino <code>dbo.GUIA</code>, <code>dbo.OC</code>, y <code>dbo.PRECOMPRA</code> son pobladas mediante integraci\u00f3n con SAP B1. Este es el c\u00f3digo del nuevo SP:</p>"},{"location":"proyectos/mejora-sp-compras/documentos-tecnicos/sp_compras/","title":"SP actual","text":"<pre><code>/******Comentado la tabla Factura por que por el momento no se usa   jose Date: 31/05/2017 11:16:41 a.m. ******/ \n-- exec [dbo].[sp_compras]\nALTER PROCEDURE [dbo].[sp_compras]\nAS\nBEGIN                        \n    DECLARE @PERIODOS VARCHAR(20);\n    ---\n    --- Solo a inicio de a\u00f1o\n    /*\n     DELETE FROM dbo.OC  WHERE LEFT(FECHAEMISION,4) IN ('2023','2024')    \n     DELETE FROM DBO.PRECOMPRA                          \n     DELETE dbo.GUIA where periodo IN ('2023','2024')\n     */\n     ---\n     ---Solo el a\u00f1o en curso\n     --DELETE FROM dbo.OC  WHERE LEFT(FECHAEMISION,4) IN ('2024')    \n     DELETE FROM DBO.PRECOMPRA                          \n     DELETE dbo.GUIA where periodo IN ('2025')                                                   \n\n -- drop table GuiaLog                    \n\n/************************************/\n    ---PRODUCTOS \n/************************************/\n\n     DROP TABLE productos_compra\n     SELECT * INTO productos_compra from producto \n\n/************************************/\n    ---OC \n/************************************/\nBEGIN\n    SET @periodos='2024';\n\n    DELETE FROM dbo.OC WHERE LEFT(FECHAEMISION,4) IN (@periodos);    \n\n    EXECUTE SERVNPROD.bd_passarela.dbo.tb_dwh_oc_UPDATE @periodos;\n\n    INSERT INTO OC\n    (\n        DBF_NCOM,\n        SERIENUMERO,\n        FECHAEMISION,\n        FECHAENTREGA,\n        proveedor,\n        CONDICIONPAGO,\n        DIAS,\n        FECHAVENCIMIENTO,\n        MONEDA,\n        SKU,\n        PRODUCTO,\n        ALMACEN,\n        cantidad,\n        PRECIOCOSTO_Sigv,\n        PRECIOBLANCO_Cigv,\n        ID,\n        ESTADO,\n        MARGEN,\n        FECHAEMISIONB,\n        FECHAENTREGAB\n    )\n    SELECT \n        DBF_NCOM,\n        SERIENUMERO,\n        FECHAEMISION,\n        FECHAENTREGA,\n        proveedor,\n        CONDICIONPAGO,\n        DIAS,\n        FECHAVENCIMIENTO,\n        MONEDA,\n        SKU,\n        PRODUCTO,\n        ALMACEN,\n        cantidad,\n        PRECIOCOSTO_Sigv,\n        PRECIOBLANCO_Cigv,\n        ID,\n        ESTADO,\n        MARGEN,\n        FECHAEMISIONB,\n        FECHAENTREGAB\n    FROM SERVNPROD.bd_passarela.dbo.tb_dwh_oc\n\nEND\n\n\nDECLARE @OpenQuery        VARCHAR(MAX)\n       ,@Script           VARCHAR(MAX)\n       ,@LinkedServer     VARCHAR(MAX)\n\n\n/*******************************************\n * -- PRE COMPRAS\n *******************************************/\nBEGIN\n    SET     @LinkedServer = 'SERVNPROD'\n\n    --SET @PERIODOS='''''2023'''',''''2024'''''\n\n    SET @OpenQuery = '  INSERT INTO  dbo.PRECOMPRA  SELECT  * \n                                    FROM    OPENQUERY(' + @LinkedServer + ','''\n    SET @Script =    '\n            SELECT \n                DBF_NCOM \n                 ,SERIENUMERO \n                 ,FECHAEMISION \n                 ,FECHAENTREGA \n                 ,RTRIM(B.CODIGO) + '''' - '''' + RTRIM(B.PATERNO) +'''' ''''+ RTRIM(B.MATERNO) +'''' ''''+ RTRIM(B.NOMBRE) as proveedor\n                 ,CONDICIONPAGO\n                 ,DIAS \n                 ,FECHAVENCIMIENTO\n                 ,MONEDA\n                 ,SKU\n                 ,PRODUCTO\n                 ,ALMACEN\n                 ,CANTIDAD \n                 ,PRECIOCOSTO_Sigv\n                 ,PRECIOBLANCO_Cigv\n                 ,ID\n                 ,A.ESTADO \n\n                 ,CASE \n                             WHEN PRECIOBLANCO_Cigv=0.00 THEN 0.00\n                             WHEN PRECIOBLANCO_Cigv&gt;18800000000.00 THEN 0.00\n                             WHEN PRECIOBLANCO_Cigv!=0.00 THEN CAST(\n                                                (PRECIOBLANCO_Cigv-(PRECIOCOSTO_Sigv*1.18))/PRECIOBLANCO_Cigv AS DECIMAL(8 ,2)\n                                        )\n                    END  AS MARGEN \n\n\n                 ,FECHAEMISIONB\n                 ,FECHAENTREGAB\n                 ,fechaentregaSku\n\n            FROM (\n\n                SELECT \n\n                 A.TRANSACCIONCABECERA\n                ,B.DBF_NCOM\n                ,B.SERIE + ''''-'''' +  B.NUMERO AS SERIENUMERO\n                ,LEFT(B.FECHAEMISION,8) AS FECHAEMISION\n                ,LEFT(B.FECHAENTREGA,8) AS FECHAENTREGA\n                ,B.PROVEEDOR\n                ,ISNULL(FP.NOMBRE,'''''''') AS CONDICIONPAGO\n                ,ISNULL(FP.NUMERODIA,''''0'''') AS DIAS\n                ,LEFT(B.FECHAVENCIMIENTO,8) AS FECHAVENCIMIENTO\n                ,case when isnull(B.MONEDA,''''0'''') = ''''100911'''' then ''''SOLES'''' else ''''DOLARES'''' end as MONEDA \n                ,P.CODIGOINTERNO AS SKU\n                ,P.NOMBRE AS PRODUCTO\n                ,B.INGRESO\n                ,A.CANTIDAD\n                ,CAST(A.PRECIOVENTA AS DECIMAL(18,2)) AS PRECIOBLANCO_Cigv\n                ,  CASE WHEN  ISNULL(A.CANTIDAD,''''0'''') &lt;&gt; ''''0'''' THEN case when isnull(A.MONTONETO,''''0.00'''') = ''''0'''' or  cast(A.MONTONETO as varchar) = '''''''' then ''''0.00'''' else  cast( convert(decimal(8,2), ISNULL(A.MONTONETO,''''0.00'''')) / isnull(A.CANTIDAD,''''0'''') as decimal(8,4)) end ELSE ''''0.00'''' END as PRECIOCOSTO_Sigv  \n                ,B.SERIE + ''''-'''' +  B.NUMERO+''''-''''+P.CODIGOINTERNO+''''-''''+B.PERIODO AS ID\n                ,'''''''' AS ESTADO\n                ,A.MONTONETO\n                        ,SUBSTRING(B.FECHAEMISION,7,2)+''''/''''+ SUBSTRING(B.FECHAEMISION,5,2) +''''/''''+ left(B.FECHAEMISION ,4) as  FECHAEMISIONB\n                        ,SUBSTRING(B.FECHAENTREGA,7,2)+''''/''''+ SUBSTRING(B.FECHAENTREGA,5,2) +''''/''''+ left(B.FECHAENTREGA ,4) as  FECHAENTREGAB \n                ,al.fox_nombre +'''' ''''+ al.NOMBRE as ALMACEN\n                ,CASE WHEN A.fecha=''''000000'''' THEN '''''''' \n                 WHEN ISNULL(A.fecha,'''''''')='''''''' THEN '''''''' ELSE      \n                 SUBSTRING(A.fecha,7,2)+''''/''''+ SUBSTRING(A.fecha,5,2) +''''/''''+ left(A.fecha ,4) END  as  fechaentregaSku\n\n                FROM  bd_passarela.dbo.TRANSACCIONDETALLE A WITH(NOLOCK) \n                INNER JOIN bd_passarela.dbo.TRANSACCIONCABECERA B WITH(NOLOCK) ON  B.TRANSACCIONCABECERA = A.TRANSACCIONCABECERAidx and A.TRANSACCIONCABECERAcvidx =  B.cvid and B.TRANSACCIONTIPO = A.TRANSACCIONTIPO \n                INNER JOIN bd_passarela.dbo.FORMAPAGO FP WITH(NOLOCK) ON (cast(FP.cvid as varchar)+cast(FP.FORMAPAGO as varchar)= B.FORMAPAGO ) \n                INNER JOIN (SELECT cast(cvid as varchar)+cast(ALMACEN as varchar) AS ALMACEN,fox_nombre,NOMBRE FROM  bd_passarela.dbo.ALMACEN) al on AL.ALMACEN =B.INGRESO\n                INNER JOIN (SELECT CAST(CVID AS VARCHAR) + CAST(PRODUCTO AS VARCHAR) AS PRODUCTO , CODIGOINTERNO,NOMBRE FROM bd_passarela.dbo.PRODUCTO WITH(NOLOCK) ) P ON A.PRODUCTO = P.PRODUCTO\n\n                WHERE A.TRANSACCIONTIPO=100911 AND B.PERIODO IN ('+ @PERIODOS +')  AND B.ESTADOCABECERA=1 and RTRIM(LTRIM(B.GLOSA)) = ''''PRE-COMPRA''''\n\n            ) A  INNER JOIN bd_passarela.dbo.PERSONA B  ON cast(b.cvid as varchar) + cast(b.persona as varchar) = a.PROVEEDOR AND B.PERSONATIPOPERSONA=''''100915''''\n\n                    '')\n     '\n\n\n    EXEC (@OpenQuery + @Script)     \n\n    SET @OpenQuery = ''; \n    SET @Script = '';\n\nEND\n\n\n\n/*******************************************\n * MIGRACION DE GUIAS\n *******************************************/\n\nBEGIN\n    DELETE dbo.GUIA where periodo IN ('2025') \n\n    IF OBJECT_ID('tempdb..#Tb_Guia') IS NOT NULL DROP TABLE #Tb_Guia ;\n    IF OBJECT_ID('tempdb..#DUPLICADOS') IS NOT NULL DROP TABLE #DUPLICADOS ;\n\n    /************************************/\n        ---GUIA INGRESO\n    /************************************/\n\n    SELECT A.*\n                ,RTRIM(B.CODIGO)+' - '+RTRIM(B.PATERNO)+' '+RTRIM(B.MATERNO)+' '+RTRIM(B.NOMBRE) AS PROVEEDOR\n    INTO   #Tb_Guia\n    FROM   (\n                         SELECT A.TRANSACCIONCABECERA\n                                        --,B.cvid\n                                     ,B.periodo\n                                     ,B.DBF_NCOM\n                                     ,B.SERIE+'-'+B.NUMERO  AS SERIENUMERO\n                                     ,LEFT(B.FECHAREGISTRO ,8) AS FECHAREGISTRO\n                                     ,LEFT(B.FECHAEMISION ,8) AS FECHAEMISION\n                                     ,CASE \n                                                 WHEN ISNULL(B.fecharecepcion ,'')='' THEN '19900101'\n                                                 ELSE LEFT(B.fecharecepcion ,8)\n                                        END                   AS FECHAENTREGA\n                                     ,B.PROVEEDOR           AS proveedorid\n                                     ,CASE \n                                                 WHEN ISNULL(B.MONEDA ,'0')='100911' THEN 'SOLES'\n                                                 ELSE 'DOLARES'\n                                        END                   AS MONEDA\n                                     ,A.PRODUCTO            AS CODPRODUCTO\n                                     ,P.CODIGOINTERNO       AS SKU\n                                     ,P.NOMBRE              AS PRODUCTO\n                                     ,A.CANTIDAD\n                                     ,A.PRECIO\n                                     ,A.DESCUENTO\n                                     ,CAST(ISNULL(A.MONTONETO ,'0.00') AS DECIMAL(10 ,2)) AS VALORVENTA\n                                     ,CONVERT(DECIMAL(18 ,2) ,ISNULL(A.PRECIOVENTA ,'0.00')) AS PRECIOBLANCO_Cigv\n                                     ,AL.fox_nombre+' '+AL.NOMBRE AS ALMACEN\n                                     ,''                    AS ID\n                                     ,SUBSTRING(B.FECHAEMISION ,7 ,2)+'/'+SUBSTRING(B.FECHAEMISION ,5 ,2)+'/'+LEFT(B.FECHAEMISION ,4) AS \n                                        FECHAEMISIONB\n                                     ,CAST(\n                                                CONVERT(\n                                                        CHAR(10)\n                                                     ,LEFT(ISNULL(B.FECHARECEPCION ,'19900101') ,8)\n                                                     ,120\n                                                ) AS DATE\n                                        )                     AS FECHAENTREGAB \n                                        --,*\n                         FROM   SERVNPROD.bd_passarela.dbo.TRANSACCIONDETALLE A WITH(NOLOCK)\n                                        INNER JOIN SERVNPROD.bd_passarela.dbo.TRANSACCIONCABECERA B WITH(NOLOCK)\n                                                 ON  B.TRANSACCIONCABECERA = A.transaccioncabeceraidx\n                                                         AND B.cvid = A.transaccioncabeceracvidx\n                                                         AND B.TRANSACCIONTIPO = A.TRANSACCIONTIPO\n                                        INNER JOIN (\n                                                         SELECT CVID\n                                                                     ,PRODUCTO\n                                                                     ,CODIGOINTERNO\n                                                                     ,NOMBRE\n                                                         FROM   SERVNPROD.bd_passarela.dbo.PRODUCTO WITH(NOLOCK)\n                                                 ) P\n                                                 ON  A.productoid = P.PRODUCTO\n                                                         AND A.productocvid = P.cvid\n                                        INNER JOIN SERVNPROD.bd_passarela.dbo.ALMACEN AL\n                                                 ON  CAST(AL.cvid AS VARCHAR)+CAST(AL.ALMACEN AS VARCHAR) = B.INGRESO\n                         --WHERE B.TRANSACCIONTIPO=100912 AND B.PERIODO IN ('2022','2024')  AND B.ESTADOCABECERA=1\n                         WHERE  B.TRANSACCIONTIPO = 100912 AND B.PERIODO IN ('2025') AND B.ESTADOCABECERA = 1\n                 ) A\n                 INNER JOIN SERVNPROD.bd_passarela.dbo.PERSONA B\n                            ON  CAST(b.cvid AS VARCHAR)+CAST(b.persona AS VARCHAR) = a.proveedorid\n                 INNER JOIN SERVNPROD.bd_passarela.dbo.PERSONATIPODOCUMENTO pd ON b.cvidpersona = pd.persona AND pd.personatipo = '100915'\n\n                 /*INNER JOIN SERVNPROD.bd_passarela.dbo.PERSONA B\n                            ON  CAST(b.cvid AS VARCHAR)+CAST(b.persona AS VARCHAR) = a.proveedorid\n                                    AND B.PERSONATIPOPERSONA = '100915'*/\n\n\n            --\n            -- AGRUPADO GUIA INGRESO\n\n            INSERT INTO dbo.GUIA  \n\n            SELECT X.periodo\n                        ,X.DBF_NCOM\n                        ,X.SERIENUMERO\n                        ,X.FECHAREGISTRO\n                        ,X.FECHAEMISION\n                        ,X.FECHAENTREGA\n                        ,X.proveedor\n                        ,X.MONEDA\n                        ,X.SKU\n                        ,X.PRODUCTO\n                        ,X.ALMACEN\n                        ,X.CANTIDAD\n                        --,X.PRECIO\n                        --,X.DESCUENTO\n                        ,ROUND((X.PRECIO-(X.PRECIO*(CAST(REPLACE (X.DESCUENTO, '%', '') AS FLOAT)/100))),2) AS PRECIOCOSTO_Sigv\n                        ,X.PRECIOBLANCO_Cigv\n                        ,ISNULL(X.TPADRE ,'0') AS tpadre\n                        ,x.ID\n                        ,X.FECHAEMISIONB\n                        ,X.FECHAENTREGAB                              \n                FROM  (\n\n                SELECT \n                    A.*\n                 ,CAST(OC.SERIE AS VARCHAR) + '-' +  CAST(OC.NUMERO AS VARCHAR) AS TPADRE\n                 ,CAST(OC.SERIE AS VARCHAR) + '-' +  CAST(OC.NUMERO AS VARCHAR) +'-'+ CAST(A.SKU AS VARCHAR)+'-'+ CAST(OC.PERIODO AS VARCHAR) AS ID\n\n                 FROM (\n\n                    SELECT                                                       \n                         GUIA.PERIODO                              \n                        ,GUIA.DBF_NCOM                              \n                        ,GUIA.SERIENUMERO                              \n                        ,GUIA.FECHAREGISTRO                              \n                        ,GUIA.FECHAEMISION                              \n                        ,GUIA.FECHAENTREGA                              \n                        ,GUIA.PROVEEDOR                              \n                        ,GUIA.MONEDA                             \n                        ,GUIA.SKU\n                        ,GUIA.CODPRODUCTO                              \n                        ,GUIA.PRODUCTO                              \n                        ,GUIA.ALMACEN                          \n                        ,GUIA.CANTIDAD\n                        ,GUIA.PRECIO\n                        ,GUIA.DESCUENTO\n                        --,GUIA.PRECIOCOSTO_Sigv                             \n                        --,convert(decimal(10,2),case when GUIA.CANTIDAD = 0 then 0.00 else (cast(GUIA.ValorVenta as decimal(10,2)) /  cast(GUIA.CANTIDAD as numeric) ) end ) as PRECIOCOSTO_Sigv                                      \n                        ,GUIA.PRECIOBLANCO_Cigv\n                        ,CG.COMPRA\n                        ,GUIA.FECHAEMISIONB, GUIA.FECHAENTREGAB AS FECHAENTREGAB\n                         from #Tb_Guia GUIA                              \n                         --LEFT JOIN (SELECT GUIA,COMPRA,PERIODO FROM SERVNPROD.bd_passarela.dbo.COMPRASGUIAS WHERE PERIODO IN ('2023','2024') ) CG ON GUIA.TRANSACCIONCABECERA = CG.GUIA \n                         LEFT JOIN (SELECT GUIA,COMPRA,PERIODO FROM SERVNPROD.bd_passarela.dbo.COMPRASGUIAS WHERE PERIODO IN ('2025') ) CG ON GUIA.TRANSACCIONCABECERA = CG.GUIA \n                    ) A\n                        INNER JOIN (\n                            SELECT \n                             A.TRANSACCIONCABECERA,A.PRODUCTO,A.cantidad,A.TRANSACCIONTIPO,B.SERIE,B.NUMERO,B.PERIODO FROM  SERVNPROD.bd_passarela.dbo.transacciondetalle A  WITH(NOLOCK) \n                            INNER JOIN  SERVNPROD.bd_passarela.dbo.transaccioncabecera B ON B.TRANSACCIONCABECERA = A.transaccioncabeceraidx AND B.cvid = A.transaccioncabeceracvidx AND B.TRANSACCIONTIPO = A.TRANSACCIONTIPO\n                            WHERE A.TRANSACCIONTIPO = 100911  AND B.ESTADOCABECERA=1\n\n                         ) OC ON A.COMPRA = OC.TRANSACCIONCABECERA  and A.CODPRODUCTO=OC.PRODUCTO  \n                         WHERE OC.cantidad &gt; 0\n\n\n            ) X                             \n            GROUP BY                              \n                X.periodo,X.DBF_NCOM,X.SERIENUMERO,X.FECHAREGISTRO,X.FECHAEMISION,X.FECHAENTREGA,X.proveedor,X.MONEDA,                              \n                X.SKU,X.PRODUCTO,X.ALMACEN,X.CANTIDAD,X.PRECIO, X.DESCUENTO,X.PRECIOBLANCO_Cigv,X.TPADRE,x.ID,X.FECHAEMISIONB,X.FECHAENTREGAB \n\n        IF OBJECT_ID('tempdb..#Tb_Guia') IS NOT NULL DROP TABLE #Tb_Guia ;\n\n\n        /************************************/\n        ---DUPLICADOS GUIA INGRESO UPDATE CANT = 0  FOR DUPLICADOS GUIAS\n        /************************************/\n\n\n        /*SELECT  INTO ITERATIVO*/\n        ; WITH C1 AS (\n                         SELECT G.*\n                                     ,ROW_NUMBER() OVER(\n                                                PARTITION BY g.periodo\n                                             ,g.dbf_ncom\n                                             ,g.serienumero\n                                             ,g.sku\n                                             ,g.cantidad ORDER BY g.TPADRE ASC\n                                        ) AS rn\n                         FROM   guia G\n                                        INNER JOIN (\n                                                         SELECT periodo\n                                                                     ,DBF_NCOM\n                                                                     ,SERIENUMERO\n                                                                     ,FECHAREGISTRO\n                                                                     ,FECHAEMISION\n                                                                     ,FECHAENTREGA\n                                                                     ,proveedor\n                                                                     ,MONEDA\n                                                                     ,SKU\n                                                                     ,PRODUCTO\n                                                                     ,ALMACEN\n                                                                     ,CANTIDAD\n                                                                     ,PRECIOCOSTO_Sigv\n                                                                     ,PRECIOBLANCO_Cigv\n                                                         FROM   guia\n                                                         GROUP BY\n                                                                        periodo\n                                                                     ,DBF_NCOM\n                                                                     ,SERIENUMERO\n                                                                     ,FECHAREGISTRO\n                                                                     ,FECHAEMISION\n                                                                     ,FECHAENTREGA\n                                                                     ,proveedor\n                                                                     ,MONEDA\n                                                                     ,SKU\n                                                                     ,PRODUCTO\n                                                                     ,ALMACEN\n                                                                     ,CANTIDAD\n                                                                     ,PRECIOCOSTO_Sigv\n                                                                     ,PRECIOBLANCO_Cigv\n                                                         HAVING COUNT(*)&gt;1\n                                                 ) D\n                                                 ON  D.periodo = G.periodo\n                                                         AND D.DBF_NCOM = G.DBF_NCOM\n                                                         AND D.SERIENUMERO = G.SERIENUMERO\n                                                         AND D.FECHAREGISTRO = G.FECHAREGISTRO\n                                                         AND D.FECHAEMISION = G.FECHAEMISION\n                                                         AND D.FECHAENTREGA = G.FECHAENTREGA\n                                                         AND D.proveedor = G.proveedor\n                                                         AND D.MONEDA = G.MONEDA\n                                                         AND D.SKU = G.SKU\n                                                         AND D.PRODUCTO = G.PRODUCTO\n                                                         AND D.ALMACEN = G.ALMACEN\n                                                         AND G.CANTIDAD = D.CANTIDAD\n                                                         AND D.PRECIOCOSTO_Sigv = G.PRECIOCOSTO_Sigv\n                                                         AND D.PRECIOBLANCO_Cigv = G.PRECIOBLANCO_Cigv\n                 )\n\n        SELECT *\n        INTO   #DUPLICADOS\n        FROM   C1\n        WHERE  rn&gt;1\n                     AND periodo&lt;&gt;'2014'\n                     AND CANTIDAD&lt;&gt;0\n        ORDER BY\n                     rn DESC\n\n        MERGE INTO GUIA G \n                    USING #DUPLICADOS D \n                    ON (\n                            d.id=g.id\n                            AND D.periodo=G.periodo\n                            AND D.DBF_NCOM=G.DBF_NCOM\n                            AND D.SERIENUMERO=G.SERIENUMERO\n                            AND D.FECHAREGISTRO=G.FECHAREGISTRO\n                            AND D.FECHAEMISION=G.FECHAEMISION\n                            AND D.FECHAENTREGA=G.FECHAENTREGA\n                            AND D.proveedor=G.proveedor\n                            AND D.MONEDA=G.MONEDA\n                            AND D.SKU=G.SKU\n                            AND D.PRODUCTO=G.PRODUCTO\n                            AND D.ALMACEN=G.ALMACEN\n                            AND D.cantidad=G.CANTIDAD\n                            AND D.PRECIOCOSTO_Sigv=G.PRECIOCOSTO_Sigv\n                            AND D.PRECIOBLANCO_Cigv=G.PRECIOBLANCO_Cigv\n                    ) \n                    WHEN MATCHED THEN\n                    UPDATE \n                    SET    G.CANTIDAD = '0';\n\n        IF OBJECT_ID('tempdb..#DUPLICADOS') IS NOT NULL DROP TABLE #DUPLICADOS ;\n\nEND\n\n\n/************************************/\n    ---UPDATE ESTADO \n/************************************/\n\n\n\n   --actualiza estado              \n   MERGE INTO OC a                 \n   USING ( SELECT ID,CAST(SUM(CANTIDAD) AS NUMERIC) CANTIDAD FROM GUIA where FECHAENTREGA&lt;&gt;'19900101'  GROUP  BY ID) b  --                \n   ON (b.ID = a.ID )  --CODIGOINTERNO               \n   WHEN MATCHED THEN  UPDATE SET a.ESTADO = CASE WHEN a.cantidad = b.cantidad then 'OK'  WHEN  a.cantidad &gt; b.cantidad then 'PARCIAL' ELSE 'EXCEDE' END;  \n\n\n   /*******************************************\n    * PROVEEDORES COMPLETOS\n    *******************************************/\n\nDROP TABLE dbo.proveedorC\n\n\nSET     @LinkedServer = 'SERVNPROD'\n\nSET @OpenQuery = '      \n                        SELECT  * \n                        INTO  dbo.proveedorC  FROM  OPENQUERY(' + @LinkedServer + ',''' -- INSERT INTO  dbo.proveedor\nSET @Script =    '\n\n\n        SELECT \n\n            A.persona AS ID\n           ,A.CODIGO\n           ,Rtrim(B.PATERNO) + '''' '''' + Rtrim(B.MATERNO) + '''' '''' + Rtrim(B.NOMBRE) as RAZONSOCIAL\n           ,B.TIPODOCUMENTO\n           ,ISNULL(C.NUMERODOCUMENTO,'''' '''') AS NUMERODOCUMENTO\n           ,(select top 1 d.DIRECCION  from PERSONADIRECCION d where d.persona = cast(B.cvid as varchar) + cast(B.PERSONA as varchar) ORDER BY TIPODIRECCION ASC ) as DIRECCION\n           ,B.EMAIL\n           ,B.TELEFONO\n           ,B.CELULAR\n           ,B.FECHAINGRESO\n           ,B.PERSONATIPOPERSONA\n\n        FROM PERSONATIPOPERSONA A  WITH(NOLOCK) \n        INNER JOIN PERSONA B  WITH(NOLOCK) ON A.personaidx = B.PERSONA AND A.personacvidx = B.cvid --AND A.personatipo = B.PERSONATIPOPERSONA\n        LEFT JOIN PERSONATIPODOCUMENTO C  WITH(NOLOCK) ON A.persona = C.persona AND A.personatipo = C.personatipo\n\n\n        WHERE A.PERSONATIPO=100915\n\n        ORDER BY A.CODIGO ASC\n\n                '')\n '\nEXEC (@OpenQuery + @Script)     \n\nDROP TABLE DBO.modeloC\nSELECT  Prefijo\n        ,CASE WHEN ISNULL(CHARINDEX('(',NOMBRE,0),0)&gt;0 THEN RTRIM(LTRIM(SUBSTRING(NOMBRE,1,ISNULL(CHARINDEX('(',NOMBRE,0),0)-1))) ELSE UPPER(RTRIM(LTRIM(NOMBRE))) END as Nombre\n        ,Proveedor\nINTO    DBO.modeloC\nFROM    servnprod.bd_passarela.dbo.Modelo\n\n\n\n\n\n\n\n\n  ----- guias Logistica                    \n  --     SELECT [periodo]                    \n  --    ,[DBF_NCOM]                    \n  --    ,[SERIENUMERO]                    \n  --    ,[FECHAREGISTRO]                    \n  --    ,[FECHAEMISION]                    \n  --    ,[FECHAENTREGA]                    \n  --    ,[proveedor]                    \n  --    ,[MONEDA]                    \n  --    ,[SKU]                    \n  --    ,g.[PRODUCTO]                \n  --    ,[ALMACEN]                    \n  --    ,[CANTIDAD]                    \n  --    ,[PRECIOCOSTO_Sigv]                    \n  --    ,[PRECIOBLANCO_Cigv],m.nombre as marca,mode.nombre as modelo,c.nombre as color,descr.nombre as descripcionprincipal,mate.nombre as material,t.nombre as talla                    \n  --into dbo.GuiaLog                    \n  --FROM [passareladwh].[dbo].[GUIA] g,producto p, marca m, modelo mode, color c,talla t,categoria cat,descripcionprincipal descr,material mate                    \n  --where p.producto=g.SKU and p.marca=m.marca and p.color=c.color and mode.modelo=p.modelo and t.talla=p.talla and p.categoria=cat.categoria and descr.descripcionprincipal=p.descripcionprincipal and mate.material=p.material                    \n  --group by                     \n  --periodo                    \n  --    ,DBF_NCOM                    \n  --    ,SERIENUMERO                    \n  --    ,FECHAREGISTRO                    \n  --    ,FECHAEMISION                    \n  --    ,FECHAENTREGA                    \n  --    ,proveedor                    \n  --    ,MONEDA                    \n  --    ,SKU                    \n  --    ,g.PRODUCTO                    \n  --    ,ALMACEN                    \n  --    ,CANTIDAD                    \n  --    ,PRECIOCOSTO_Sigv                    \n  --    ,PRECIOBLANCO_Cigv,m.nombre,mode.nombre,c.nombre,descr.nombre,mate.nombre,t.nombre                     \n  --    order by sku desc;\n\n\n\n\n\n   --UPDATE OC SET ESTADO = 'PENDIENTE' WHERE isnull(ESTADO,'') = '' AND left(OC.fechaemision,4) IN ('2017')   \n   --update dbo.productos_compra set descripcionsecundaria=isnull(g.proveedor,'Sin Proveedor') from dbo.productos_compra p left join (select proveedor,sku from guia ) g on g.SKU=p.producto        \nEND\n\n/*old*/\n\n   --FACTURA                                \n  --      select                                \n  --      T.TRANSACCIONPADRE,                                 \n  --      td.TRANSACCIONCABECERA,                                \n  --      t.periodo,                                \n  --      T.DBF_NCOM,                                \n  --      ( t.SERIE +'-'+t.NUMERO) AS SERIENUMERO,                                \n  --      SUBSTRING(t.FECHAREGISTRO,1,8) AS FECHAREGISTRO,                                \n  --      SUBSTRING(t.FECHAEMISION,1,8) AS FECHAEMISION,                            \n  --      SUBSTRING(t.FECHAEMISION ,1,8) AS FECHAVENCIMIENTO,                                \n  --      RTRIM(persona.CODIGO) + ' - '+ RTRIM(persona.PATERNO) +' '+ RTRIM(persona.MATERNO) +' '+ RTRIM(persona.NOMBRE) as PROVEEDOR,                                \n  --      ISNULL(FP.NOMBRE,'') AS CONDICIONPAGO,        \n  --      ISNULL(FP.NUMERODIA,'0') AS DIAS,                                \n  --      case when isnull(t.moneda,'0') = '100911' then 'SOLES' else 'DOLARES' end as MONEDA,                                   \n  --      td.PRODUCTO as CODPRODUCTO,                                \n  --      P.CODIGOINTERNO AS SKU,                                \n  --      P.NOMBRE AS PRODUCTO,                                \n  --      cast( (case when ISNULL(TD.CANTIDAD,'0')='' then '0' else   isnull(TD.CANTIDAD,'0') end) as numeric) as CANTIDAD,                                \n  --      CAST( ISNULL(TD.MONTONETO,'0.00') AS DECIMAL (10,2)) AS VALORVENTA,                                \n  --      T.INGRESO,                                \n  --      td.tag                                \n  --      into #tbFactura                                \n  --      from servnprod.bd_passarela.dbo.TRANSACCIONDETALLE td                                \n  --      LEFT JOIN servnprod.bd_passarela.dbo.TRANSACCIONCABECERA t ON td.TRANSACCIONCABECERAidx= t.TRANSACCIONCABECERA  AND td.TRANSACCIONCABECERAcvidx=  t.cvid and td.transacciontipo =t.TRANSACCIONTIPO \n  --      LEFT JOIN servnprod.bd_passarela.dbo.FORMAPAGO FP ON (cast(FP.cvid as varchar)+cast(FP.FORMAPAGO as varchar)= T.FORMAPAGO )                                \n        --LEFT JOIN servnprod.bd_passarela.dbo.personatipopersona pt ON pt.PERSONA = T.PROVEEDOR and pt.personatipo=100915 \n        --LEFT JOIN servnprod.bd_passarela.dbo.PERSONA ON  persona.persona=pt.personaidx and    persona.cvid=pt.personacvidx\n  --    LEFT JOIN servnprod.bd_passarela.dbo.PRODUCTO p ON p.PRODUCTO =TD.PRODUCTOid  and p.CVID = td.productocvid  \n     --   WHERE tD.TRANSACCIONTIPO = 100916  AND TD.PERIODO='2017' \n\n\n  --      insert into dbo.FACTURA                                \n  --      select C.periodo,C.DBF_NCOM,C.SERIENUMERO,C.FECHAREGISTRO,C.FECHAEMISION,C.FECHAVENCIMIENTO,C.proveedor,C.CONDICIONPAGO,C.DIAS,C.MONEDA,C.SKU,C.PRODUCTO,                                \n  --      ISNULL((SELECT CAST(PREFIJO AS VARCHAR ) + ' '  + NOMBRE FROM servnprod.bd_passarela.dbo.ALMACEN AL WHERE CAST(AL.cvid AS VARCHAR) + CAST(AL.ALMACEN AS VARCHAR)=C.INGRESO),'') as ALMACEN,C.CANTIDAD,                                \n  --      convert(decimal(8,4),case when C.CANTIDAD = 0 then 0.00 else(C.ValorVenta / C.CANTIDAD ) end ) as PRECIOCOSTO_Sigv ,                                 \n  --       isnull( ( select top 1 t.dbf_ncom from servnprod.bd_passarela.dbo.TRANSACCIONCABECERA T,servnprod.bd_passarela.dbo.TRANSACCIONDETALLE TD                               \n  --      where cast(t.cvid as varchar) + cast(t.transaccioncabecera as varchar) = TD.TRANSACCIONCABECERA AND                                         \n  --      t.periodo=c.periodo and t.transacciontipo='100912' and td.producto = c.CODPRODUCTO                                \n  --      and  CAST(T.SERIE AS VARCHAR) + '-' +  CAST(T.NUMERO AS VARCHAR) = left(c.tag,13) ),'') as TPADRE                                \n  --      from  #tbFactura C                                \n  --      ORDER BY C.PERIODO DESC, C.DBF_NCOM DESC, C.SKU DESC                                \n  --      drop table #tbFactura         \n--exec sp_compras\n</code></pre>"},{"location":"proyectos/mejora-sp-compras/documentos-tecnicos/usp_etl_cargar_proveedores_modelos/","title":"SP nuevo","text":"usp_etl_cargar_proveedores_modelos.sql<pre><code>/*\n    Nombre:      usp_etl_cargar_proveedores_modelos\n    Objetivo:    Extraer y consolidar informaci\u00f3n de proveedores y modelos desde el servidor vinculado SERVNPROD,\n                almacenando los datos en tablas locales para su posterior an\u00e1lisis y explotaci\u00f3n en el Data Warehouse.\n                El procedimiento elimina y recrea las tablas locales dbo.proveedorC y dbo.modeloC con los datos m\u00e1s recientes.\n\n    Autor:       Miguel Ayte\n\n    Ejemplo de uso:\n        EXEC dbo.usp_etl_cargar_proveedores_modelos;\n\n    Descripci\u00f3n:\n        - Obtiene informaci\u00f3n completa de proveedores (ID, c\u00f3digo, raz\u00f3n social, documento, direcci\u00f3n, contacto, tipo de persona) desde SERVNPROD.\n        - Elimina y recrea la tabla dbo.proveedorC con los datos extra\u00eddos.\n        - Obtiene informaci\u00f3n de modelos (prefijo, nombre, proveedor) desde SERVNPROD.\n        - Elimina y recrea la tabla dbo.modeloC con los datos extra\u00eddos.\n*/\nCREATE PROCEDURE [dbo].[usp_etl_cargar_proveedores_modelos]\nAS\nBEGIN\n    SET NOCOUNT ON;\n\n    DECLARE @LinkedServer NVARCHAR(128) = 'SERVNPROD';\n    DECLARE @OpenQuery NVARCHAR(MAX), @Script NVARCHAR(MAX);\n\n    /*******************************************\n    * PROVEEDORES COMPLETOS\n    *******************************************/\n    IF OBJECT_ID('dbo.proveedorC', 'U') IS NOT NULL\n        DROP TABLE dbo.proveedorC;\n\n    SET @Script = '\n        SELECT\n            A.persona AS ID,\n            A.CODIGO,\n            RTRIM(B.PATERNO) + '' '' + RTRIM(B.MATERNO) + '' '' + RTRIM(B.NOMBRE) AS RAZONSOCIAL,\n            B.TIPODOCUMENTO,\n            ISNULL(C.NUMERODOCUMENTO, '''') AS NUMERODOCUMENTO,\n            (SELECT TOP 1 d.DIRECCION\n            FROM PERSONADIRECCION d\n            WHERE d.persona = CAST(B.cvid AS VARCHAR) + CAST(B.PERSONA AS VARCHAR)\n            ORDER BY TIPODIRECCION ASC) AS DIRECCION,\n            B.EMAIL,\n            B.TELEFONO,\n            B.CELULAR,\n            B.FECHAINGRESO,\n            B.PERSONATIPOPERSONA\n        FROM PERSONATIPOPERSONA A WITH(NOLOCK)\n        INNER JOIN PERSONA B WITH(NOLOCK)\n            ON A.personaidx = B.PERSONA AND A.personacvidx = B.cvid\n        LEFT JOIN PERSONATIPODOCUMENTO C WITH(NOLOCK)\n            ON A.persona = C.persona AND A.personatipo = C.personatipo\n        WHERE A.PERSONATIPO = 100915\n        ORDER BY A.CODIGO ASC\n    ';\n\n    SET @OpenQuery = 'SELECT * INTO dbo.proveedorC FROM OPENQUERY([' + @LinkedServer + '], ''' + REPLACE(@Script, '''', '''''') + ''')';\n    EXEC(@OpenQuery);\n\n    /*******************************************\n    * MODELOS\n    *******************************************/\n    IF OBJECT_ID('dbo.modeloC', 'U') IS NOT NULL\n        DROP TABLE dbo.modeloC;\n\n    SELECT\n        Prefijo,\n        CASE\n            WHEN ISNULL(CHARINDEX('(', NOMBRE, 0), 0) &gt; 0\n                THEN RTRIM(LTRIM(SUBSTRING(NOMBRE, 1, ISNULL(CHARINDEX('(', NOMBRE, 0), 0) - 1)))\n            ELSE UPPER(RTRIM(LTRIM(NOMBRE)))\n        END AS Nombre,\n        Proveedor\n    INTO dbo.modeloC\n    FROM servnprod.bd_passarela.dbo.Modelo WITH(NOLOCK);\n\nEND\n</code></pre>"},{"location":"proyectos/mejora-sp-vdm/avances/","title":"Avances","text":""},{"location":"proyectos/mejora-sp-vdm/avances/#requerimientos-funcionales","title":"Requerimientos Funcionales","text":"ID Requerimiento Descripci\u00f3n Responsable Estado Notas adicionales RF001 Tareas   Previas Crear portal de documentaci\u00f3n TI (Miguel Ayte) Desarrollado RF002 An\u00e1lisis   preliminar Mapeo de   Dependencias TI (Miguel Ayte) Desarrollado RF003 An\u00e1lisis   preliminar Revisar   las tablas y contabilizarlas TI (Miguel Ayte) Desarrollado RF004 An\u00e1lisis   preliminar Identificar   mejoras a aplicar TI (Miguel Ayte) Desarrollado RF005 Mejoras   a aplicar Crear SP   que devuelva rango de fechas del mes actual TI (Miguel Ayte) Desarrollado Mejorar   tratamiento de fechas RF006 Crear   tabla de configuraci\u00f3n de reportes de venta TI (Miguel Ayte) Desarrollado Evitar   el uso de valores \"en duro\" (hardcoded) RF007 Crear   tabla de canales permitidos de venta TI (Miguel Ayte) Desarrollado Evitar   el uso de valores \"en duro\" (hardcoded) RF008 Incluir productos sin clasificaci\u00f3n en vista <code>vw_Producto</code> Reemplazar INNER JOIN por LEFT JOIN entre <code>producto</code> y <code>tb_clasificacion</code>. TI (Miguel Ayte) Desarrollado Asegura que los reportes incluyan productos sin clasificaci\u00f3n para an\u00e1lisis completos. RF009 Retirar <code>tb_xls_proy_24_all</code> de la vista <code>vw_proyecciones_TY</code> Eliminar referencias a la tabla ya que no es necesaria para la l\u00f3gica actual de la vista. TI (Miguel Ayte) Desarrollado Validar que no existan dependencias externas. Ejecutar pruebas tras el cambio. RF010 Captura de Datos Corregir interfaz de usuario en SIP para carga de supervisores TI (Daniela Renteria) Pendiente Ver detalle RF011 Captura de Datos Mejorar interfaz de usuario en SIP para actualizaci\u00f3n de proyecciones TI (Daniela Renteria) Pendiente Ver detalle RF012 Captura de Datos Mejorar interfaz de creaci\u00f3n de nuevas tiendas TI (Daniela Renteria) Pendiente Ver detalle RF010 Corregir interfaz de usuario en SIP para carga de supervisores RF011 Mejorar interfaz de usuario en SIP para actualizaci\u00f3n de proyecciones RF011 Mejorar interfaz de creaci\u00f3n de nuevas tiendas"},{"location":"proyectos/mejora-sp-vdm/avances/#notas-previas","title":"NOTAS PREVIAS:","text":"<ol> <li>En <code>BD_PASSARELA</code> existen las tablas: <code>Tb_Supervisor</code> y <code>Supervisor</code></li> <li>En el SIP existe una interfaz de actualizaci\u00f3n de asignaci\u00f3n de tiendas a un supervisor (Unitario), pero no afecta a las tablas de supervisores del DWH</li> <li>En el SIP existe una interfaz de actualizaci\u00f3n de redistribuci\u00f3n de tiendas a supervisores (Masivo), pero le falta validar la informaci\u00f3n cargada por plantilla contra una tabla maestra de supervisores.</li> </ol>"},{"location":"proyectos/mejora-sp-vdm/avances/#requerimiento","title":"REQUERIMIENTO","text":"<ol> <li>En <code>BD_PASSARELA</code>: Debe Implementarse una tabla de Maestra de Supervisores (Pueden utilizar la existente <code>Tb_Supervisor</code>)</li> <li>Evaluar la creaci\u00f3n de una interfaz de usuario para el mantenimiento de <code>Tb_Supervisor</code> o de su afectaci\u00f3n desde los sistemas de gesti\u00f3n del personal que maneja GGHH.</li> <li>Ambas interfaces de asignaci\u00f3n de tiendas a supervisores:    3.1 Deben incluir validaci\u00f3n contra la tabla <code>Tb_Supervisor</code>    3.2 Deben actualizar las tablas de <code>BD_PASSARELA</code>: <code>supervisor</code>    3.3 Debe actualizar las tablas de <code>PASSARELADWH</code>: <code>supervisor</code>, <code>supervisor_unicos</code>, <code>dz_supervisor</code>, <code>dz_accesos</code></li> <li>Evaluar la desactivaci\u00f3n de la interfaz de usuario de asignaci\u00f3n de tiendas a un supervisor (Unitario)</li> </ol>"},{"location":"proyectos/mejora-sp-vdm/avances/#notas-previas_1","title":"NOTAS PREVIAS:","text":"<ol> <li>Se tiene interfaz de carga en el SIP</li> <li>El usuario registra monto de venta m\u00edmina como decimal muy peque\u00f1o tendiente a cero.</li> <li><code>temp_comparables</code> es una tabla de <code>PASSARELADWH</code> que contiene los d\u00edas comparables del mes actual</li> </ol>"},{"location":"proyectos/mejora-sp-vdm/avances/#requerimiento_1","title":"REQUERIMIENTO:","text":"<ol> <li>Corregir que afecte a <code>temp_comparables</code> de <code>PASSARELADWH</code></li> <li>Corregir que afecte a columna <code>idfecha</code> por fecha equivalente del mismo mes del a\u00f1o base en <code>PASSARELADWH</code></li> <li>Los montos de cuota deben ser cero para tiendas que no se espera ventas en fecha (instrucci\u00f3n al usuario) en <code>PASSARELADWH</code></li> </ol>"},{"location":"proyectos/mejora-sp-vdm/avances/#notas-previas_2","title":"NOTAS PREVIAS:","text":"<ol> <li>La creaci\u00f3n de nuevas tiendas actualmente se ejecuta en SC</li> <li>La actualizaci\u00f3n se hace actualmente en el SIP pero no afecta a <code>PASSARELADWH</code></li> </ol>"},{"location":"proyectos/mejora-sp-vdm/avances/#requerimiento_2","title":"REQUERIMIENTO:","text":"<ol> <li>La creaci\u00f3n debe afectar tambi\u00e9n a la tabla <code>tiendas</code> en <code>PASSARELADWH</code></li> </ol>"},{"location":"proyectos/mejora-sp-vdm/descripcion/","title":"Nombre del proyecto","text":"<p>Mejora del Stored Procedure VDM (Ventas Diarias del Mes)</p>"},{"location":"proyectos/mejora-sp-vdm/descripcion/#objetivo","title":"Objetivo","text":"<p>Optimizar y documentar el proceso de generaci\u00f3n de ventas diarias del mes (VDM) mediante la mejora del Stored Procedure (SP VDM), asegurando mayor eficiencia, claridad en la l\u00f3gica de negocio y facilidad de mantenimiento.</p>"},{"location":"proyectos/mejora-sp-vdm/descripcion/#situacion-actual","title":"Situaci\u00f3n Actual","text":"<p>El SP VDM actual presenta limitaciones en rendimiento y escalabilidad, as\u00ed como una documentaci\u00f3n insuficiente sobre su funcionamiento interno, dependencias y l\u00f3gica de negocio. Esto dificulta la identificaci\u00f3n de oportunidades de mejora, la resoluci\u00f3n de incidencias y la incorporaci\u00f3n de nuevos requerimientos.</p>"},{"location":"proyectos/mejora-sp-vdm/descripcion/#situacion-propuesta","title":"Situaci\u00f3n Propuesta","text":"<p>Redise\u00f1ar y optimizar el SP VDM para mejorar su desempe\u00f1o y claridad, acompa\u00f1ando el proceso con una documentaci\u00f3n detallada que incluya diagramas de flujo, modelos entidad-relaci\u00f3n y descripciones funcionales. El objetivo es facilitar la comprensi\u00f3n, el mantenimiento y la evoluci\u00f3n del proceso de ventas diarias del mes.</p>"},{"location":"proyectos/mejora-sp-vdm/descripcion/#alcance","title":"Alcance","text":"<ul> <li>An\u00e1lisis y documentaci\u00f3n del SP VDM actual.</li> <li>Identificaci\u00f3n de cuellos de botella y oportunidades de optimizaci\u00f3n.</li> <li>Redise\u00f1o y mejora del SP VDM.</li> <li>Elaboraci\u00f3n de diagramas de flujo y modelos entidad-relaci\u00f3n asociados.</li> <li>Documentaci\u00f3n detallada de la l\u00f3gica de negocio y dependencias.</li> <li>Publicaci\u00f3n y mantenimiento de la documentaci\u00f3n en</li> </ul>"},{"location":"proyectos/mejora-sp-vdm/documentos-tecnicos/entidades-modificadas/","title":"Entidades modificadas","text":"1. Mejoras en la vista <code>vw_Producto</code> <p>### 1. Mejoras en la vista <code>vw_Producto</code>  Por resiliencia se cambia de <code>INNER JOIN</code> a <code>LEFT JOIN</code> en la vinculaci\u00f3n de la tabla <code>Producto</code> con la tabla <code>Clasificacion</code>.</p> vw_Producto.sql<pre><code>ALTER VIEW [dbo].[vw_Producto]\nAS\nSELECT p.producto\n     ,p.nombre\n     ,p.preciocosto\n     ,p.precio\n     ,p.fechaingreso\n     ,p.estado\n     ,p.marca\n     ,p.material\n     ,p.modelo\n     ,p.talla\n     ,p.color\n     ,p.categoria\n     ,p.tipoarticulo\n     ,p.linea\n     ,p.temporada\n     ,p.descripcionprincipal\n     ,p.descripcionsecundaria\n     ,p.fechacompra\n     ,p.prodOferta\n     ,p.productoestilo\n     ,p.plataforma\n     ,p.altura\n     ,p.fechaing\n     ,p.productouso\n     ,p.FecIngCD\n     ,p.FecIngTD\n     ,p.procedencia\n     ,p.proveedor\n     ,p.idclasificacion\n     ,c.clasificacion\n     ,p.lineaname\n     ,p.uso\n     ,p.estilo\n     ,p.ocasion\n     ,p.detalle_planta\n     ,p.campa\u00f1a\n     ,p.mesq\n     ,p.tec_planta\n     ,p.tec_plantilla\n     ,cc.id_compradora\n     ,p.TIPOCONSTRUCCION\n     ,p.CONSTRUCCION\n     ,d.id_grupo\n     ,tasp.urlimagen\n     ,m.nombre AS nombre_marca,m.tipomarca\n     ,c2.nombre AS nombre_categoria,c2.resumen AS resumen_categoria\n     ,c3.nombre AS nombre_color\n     ,l.nombre AS nombre_linea\n     ,m2.nombre AS nombre_material\n     ,m3.nombre AS nombre_modelo\n     ,t.nombre AS nombre_talla\n     ,t2.nombre AS nombre_temporada,t2.resumen AS resumen_temporada\n     ,t3.nombre AS nombre_tipoarticulo,t3.resumen AS resumen_tipoarticulo,\n     ISNULL(tm.product_manager, 'NO ASIGNADO') AS [PRODUCT MANAGER]\nFROM   dbo.producto                     AS p\n     LEFT JOIN dbo.tb_clasificacion  AS c\n          ON  p.producto = c.codigointerno\n     LEFT JOIN descripcionprincipal   AS d\n          ON  d.descripcionprincipal = p.descripcionprincipal\n     LEFT JOIN marca AS m ON m.marca = p.marca\n     LEFT JOIN categoria AS c2 ON c2.categoria = p.categoria\n     LEFT JOIN compradoraCombinacion AS cc ON cc.tipomarca2 = m.tipomarca2 and cc.grupo = d.grupo AND cc.catgroup = c2.catgroup\n     LEFT JOIN passareladwh.dbo.tmp_alm_stock_producto AS tasp ON tasp.Codigointerno=p.producto\n     LEFT JOIN color AS c3 ON c3.color = p.color\n     LEFT JOIN linea AS l ON l.linea = p.linea\n     LEFT JOIN material AS m2 ON m2.material = p.material\n     LEFT JOIN modelo AS m3 ON m3.modelo = p.modelo\n     LEFT JOIN talla AS t ON t.talla = p.talla\n     LEFT JOIN temporada AS t2 ON t2.temporada = p.temporada\n     LEFT JOIN tipoarticulo AS t3 ON t3.tipoarticulo = p.tipoarticulo\n     LEFT JOIN tb_product_manager as tm \n               ON tm.MARCA = m.nombre AND tm.TIPOMARCA = m.tipomarca AND tm.CATEGORIA = c2.catgroup AND tm.GRUPO = d.grupo AND tm.ARTICULO = d.nombre\n\nWHERE p.temporada&gt;'61' AND \nNOT EXISTS (\n          SELECT 1\n          FROM   tb_productos_excluidos AS tpe\n          WHERE  tpe.producto = p.producto\n)\n\nGO\n</code></pre> 2. Mejoras en la tabla <code>tb_canal</code> <p>### 2. Mejoras en la tabla <code>tb_canal</code>  Adicionar columna de <code>permitido</code> para reportes de venta.</p> tb_canal.sql<pre><code>-- 3. Adicionar columna de \"permitido\" para reportes de venta\nCREATE TABLE [dbo].[tb_canal] (\n[id_canal]    INT           NOT NULL,\n[canal]       VARCHAR (100) NULL,\n[CostingCode] VARCHAR (20)  NULL,\nPRIMARY KEY CLUSTERED ([id_canal] ASC)\n);\n\nALTER TABLE [dbo].[tb_canal] ADD permitido bit;\n\n-- 4. Actualizar columna de \"permitido\" para reportes de venta\nUPDATE tc SET tc.permitido=1\nFROM tb_canal AS tc\nWHERE tc.id_canal IN (1,2,3,4,5)\n</code></pre> Ejemplo de uso<pre><code>-- 5. Ejemplo de consulta de par\u00e1metros para un a\u00f1o espec\u00edfico\nDECLARE @anio INT = 2025;\nDECLARE @PrecioMinTY DECIMAL(10,2);\nDECLARE @PrecioMinLY DECIMAL(10,2);\n\n-- Obtener valores desde la tabla de par\u00e1metros para el a\u00f1o especificado\nSELECT @PrecioMinTY = valorDecimal \nFROM dbo.tb_ParametrosGeneralesVentas \nWHERE clave = 'PrecioMinTY' AND anio = @anio;\n\nSELECT @PrecioMinLY = valorDecimal \nFROM dbo.tb_ParametrosGeneralesVentas \nWHERE clave = 'PrecioMinLY' AND anio = @anio;\n\n-- Consulta de ejemplo usando los par\u00e1metros\nSELECT *\nFROM VentasVersus2025 vv\nJOIN tb_canal tc ON tc.id_canal = 1 -- ejemplo\nWHERE vv.precio &gt; @PrecioMinTY\nAND tc.id_canal IN (SELECT id_canal FROM dbo.tb_CanalesPermitidos);\n</code></pre>"},{"location":"proyectos/mejora-sp-vdm/documentos-tecnicos/entidades-nuevas/","title":"Entidades nuevas","text":"Tabla de par\u00e1metros generales tb_ParametrosGeneralesVentas.sql<pre><code>-- 1. Tabla de par\u00e1metros generales\nCREATE TABLE dbo.tb_ParametrosGeneralesVentas (\n    clave VARCHAR(50),\n    descripcion VARCHAR(255),\n    anio INT,  -- A\u00f1o al que aplica el par\u00e1metro\n    valorEntero INT NULL,\n    valorDecimal DECIMAL(18, 4) NULL,\n    valorTexto VARCHAR(255) NULL,\n    valorFecha DATE NULL,\n    activo BIT DEFAULT 1,\n    PRIMARY KEY (clave, anio)\n);\n\n-- 2. Insertar par\u00e1metros de ejemplo para distintos a\u00f1os\nINSERT INTO dbo.tb_ParametrosGeneralesVentas (clave, descripcion, anio, valorDecimal)\nVALUES \n('PrecioMinTY', 'Precio m\u00ednimo para ventas TY', 2025, 10.01),\n('PrecioMinLY', 'Precio m\u00ednimo para ventas LY', 2025, 8.00)\n</code></pre> Ejemplo de uso<pre><code>-- 5. Ejemplo de consulta de par\u00e1metros para un a\u00f1o espec\u00edfico\nDECLARE @anio INT = 2025;\nDECLARE @PrecioMinTY DECIMAL(10,2);\nDECLARE @PrecioMinLY DECIMAL(10,2);\n\n-- Obtener valores desde la tabla de par\u00e1metros para el a\u00f1o especificado\nSELECT @PrecioMinTY = valorDecimal \nFROM dbo.tb_ParametrosGeneralesVentas \nWHERE clave = 'PrecioMinTY' AND anio = @anio;\n\nSELECT @PrecioMinLY = valorDecimal \nFROM dbo.tb_ParametrosGeneralesVentas \nWHERE clave = 'PrecioMinLY' AND anio = @anio;\n\n-- Consulta de ejemplo usando los par\u00e1metros\nSELECT *\nFROM VentasVersus2025 vv\nJOIN tb_canal tc ON tc.id_canal = 1 -- ejemplo\nWHERE vv.precio &gt; @PrecioMinTY\n  AND tc.id_canal IN (SELECT id_canal FROM dbo.tb_CanalesPermitidos);\n</code></pre>"},{"location":"proyectos/mejora-sp-vdm/documentos-tecnicos/fn-nuevos/","title":"FN nuevos","text":"fn_get_fechas_del_mes.sql fn_get_fechas_del_mes<pre><code>/*\n    Nombre:      dbo.fn_get_fechas_del_mes\n    Objetivo:    Retornar las fechas clave para el an\u00e1lisis de cualquier mes, \n                tanto para el a\u00f1o actual como para el a\u00f1o anterior, en formato DATE y CHAR(8).\n                Esta funci\u00f3n puede ser utilizada en cualquier procedimiento almacenado que requiera \n                rangos de fechas mensuales de forma centralizada y consistente.\n\n    Par\u00e1metros:\n        @fec DATE  -- Fecha base de referencia (generalmente el d\u00eda de proceso o corte)\n\n    Retorna:\n        fec           DATE     -- Fecha base de referencia\n        FechaIniTY    DATE     -- Primer d\u00eda del mes de la fecha base (A\u00f1o Actual)\n        FechaFinTY    DATE     -- \u00daltimo d\u00eda del mes de la fecha base (A\u00f1o Actual)\n        FechaIniSFTY  CHAR(8)  -- Primer d\u00eda del mes en formato 'yyyyMMdd' (A\u00f1o Actual)\n        FechaFinSFTY  CHAR(8)  -- \u00daltimo d\u00eda del mes en formato 'yyyyMMdd' (A\u00f1o Actual)\n        FechaIniLY    DATE     -- Primer d\u00eda del mes equivalente del a\u00f1o anterior\n        FechaFinLY    DATE     -- \u00daltimo d\u00eda del mes equivalente del a\u00f1o anterior\n        FechaIniSFLY  CHAR(8)  -- Primer d\u00eda del mes en formato 'yyyyMMdd' (A\u00f1o Anterior)\n        FechaFinSFLY  CHAR(8)  -- \u00daltimo d\u00eda del mes en formato 'yyyyMMdd' (A\u00f1o Anterior)\n\n    Autor:      Miguel Ayte\n    Fecha:      2025-06-18\n*/\n\nCREATE FUNCTION dbo.fn_get_fechas_del_mes (@fec DATE)\nRETURNS TABLE\nAS\nRETURN\nSELECT\n    @fec AS fec,\n    DATEADD(MONTH, DATEDIFF(MONTH, 0, @fec), 0) AS FechaIniTY,\n    EOMONTH(@fec) AS FechaFinTY,\n    FORMAT(DATEADD(MONTH, DATEDIFF(MONTH, 0, @fec), 0), 'yyyyMMdd') AS FechaIniSFTY,\n    FORMAT(EOMONTH(@fec), 'yyyyMMdd') AS FechaFinSFTY,\n    DATEADD(YEAR, -1, DATEADD(MONTH, DATEDIFF(MONTH, 0, @fec), 0)) AS FechaIniLY,\n    DATEADD(YEAR, -1, EOMONTH(@fec)) AS FechaFinLY,\n    FORMAT(DATEADD(YEAR, -1, DATEADD(MONTH, DATEDIFF(MONTH, 0, @fec), 0)), 'yyyyMMdd') AS FechaIniSFLY,\n    FORMAT(DATEADD(YEAR, -1, EOMONTH(@fec)), 'yyyyMMdd') as FechaFinSFLY\n</code></pre>"},{"location":"proyectos/mejora-sp-vdm/documentos-tecnicos/sp-nuevos/","title":"SP nuevos","text":"VDM_get_fechas VDM_get_fechas.sql<pre><code>/******************************************************************************************\nNombre:       dbo.VDM_get_fechas\nDescripci\u00f3n:  Calcula y devuelve los rangos de fechas correspondientes al mes actual \n            (This Year - TY) y al mismo mes del a\u00f1o anterior (Last Year - LY), tanto \n            en formato DATE como en formato CHAR(8) 'yyyyMMdd'. \n            Es \u00fatil para reportes comparativos de ventas u otros indicadores temporales.\n\nPar\u00e1metros:\n    @fec            (IN)  Fecha de referencia. Si es NULL, se toma el d\u00eda anterior a la fecha actual.\n    @FechaIniTY     (OUT) Primer d\u00eda del mes de la fecha de referencia (TY).\n    @FechaFinTY     (OUT) \u00daltimo d\u00eda del mes de la fecha de referencia (TY).\n    @FechaIniSFTY   (OUT) Fecha inicial TY en formato 'yyyyMMdd'.\n    @FechaFinSFTY   (OUT) Fecha final TY en formato 'yyyyMMdd'.\n    @FechaIniLY     (OUT) Primer d\u00eda del mismo mes del a\u00f1o anterior (LY).\n    @FechaFinLY     (OUT) \u00daltimo d\u00eda del mismo mes del a\u00f1o anterior (LY).\n    @FechaIniSFLY   (OUT) Fecha inicial LY en formato 'yyyyMMdd'.\n    @FechaFinSFLY   (OUT) Fecha final LY en formato 'yyyyMMdd'.\n\nAutor:        [Tu Nombre o Equipo]\nFecha:        [Fecha de creaci\u00f3n o \u00faltima modificaci\u00f3n]\n******************************************************************************************/\n\nALTER PROCEDURE dbo.VDM_get_fechas\n    @fec DATE = NULL,\n    @FechaIniTY DATE OUTPUT,\n    @FechaFinTY DATE OUTPUT,\n    @FechaIniSFTY CHAR(8) OUTPUT,\n    @FechaFinSFTY CHAR(8) OUTPUT,\n    @FechaIniLY DATE OUTPUT,\n    @FechaFinLY DATE OUTPUT,\n    @FechaIniSFLY CHAR(8) OUTPUT,\n    @FechaFinSFLY CHAR(8) OUTPUT\nAS\nBEGIN\n    -- Si no se proporciona una fecha, se usa el d\u00eda anterior a la fecha actual\n    IF @fec IS NULL \n        SET @fec = DATEADD(DAY, -1, GETDATE());\n\n    -- Calcular el primer y \u00faltimo d\u00eda del mes de la fecha de referencia (This Year)\n    SET @FechaIniTY   = DATEADD(MONTH, DATEDIFF(MONTH, 0, @fec), 0);\n    SET @FechaFinTY   = DATEADD(DAY, -1, DATEADD(MONTH, DATEDIFF(MONTH, 0, @fec) + 1, 0));\n\n    -- Convertir fechas TY a formato 'yyyyMMdd'\n    SET @FechaIniSFTY = FORMAT(@FechaIniTY, 'yyyyMMdd');\n    SET @FechaFinSFTY = FORMAT(@FechaFinTY, 'yyyyMMdd');\n\n    -- Calcular las mismas fechas pero del a\u00f1o anterior (Last Year)\n    SET @FechaIniLY   = DATEADD(YEAR, -1, @FechaIniTY);\n    SET @FechaFinLY   = DATEADD(YEAR, -1, @FechaFinTY);\n\n    -- Convertir fechas LY a formato 'yyyyMMdd'\n    SET @FechaIniSFLY = FORMAT(@FechaIniLY, 'yyyyMMdd');\n    SET @FechaFinSFLY = FORMAT(@FechaFinLY, 'yyyyMMdd');\nEND;\n</code></pre>"},{"location":"proyectos/optimizar-etl-carga-ventas-diarias/avances/","title":"Tabla de Mejoras Aplicadas en la Optimizaci\u00f3n del ETL de Ventas","text":"ID Requerimiento Descripci\u00f3n Responsable Estado Notas adicionales 1 Optimizaci\u00f3n de fechas Simplificaci\u00f3n del manejo de fechas usando par\u00e1metros y funciones dedicadas TI (Miguel Ayte) Desarrollado Se elimin\u00f3 c\u00f3digo redundante para c\u00e1lculo de fechas 2 Procesamiento diario Cambio de procesamiento mensual a diario para reducir carga TI (Miguel Ayte) Desarrollado Mejora significativa en tiempos de ejecuci\u00f3n 3 Uso de tablas temporales Reemplazo de tablas f\u00edsicas por tablas temporales (#) TI (Miguel Ayte) Desarrollado Reduce bloqueos y mejora rendimiento 4 Modularizaci\u00f3n Divisi\u00f3n del proceso en procedimientos especializados TI (Miguel Ayte) Desarrollado Mayor mantenibilidad y reutilizaci\u00f3n de c\u00f3digo 5 Optimizaci\u00f3n MERGE Mejora en la estructura MERGE para actualizaci\u00f3n de ventascabecera TI (Miguel Ayte) Desarrollado Reducci\u00f3n de tiempo de ejecuci\u00f3n en 60% 6 Eliminaci\u00f3n de datos redundantes Eliminaci\u00f3n de procesamiento de datos hist\u00f3ricos no necesarios TI (Miguel Ayte) Desarrollado Simplifica el flujo de datos 7 Manejo de duplicados Implementaci\u00f3n de mecanismos m\u00e1s eficientes para evitar duplicados TI (Miguel Ayte) Desarrollado Usa tablas temporales en lugar de f\u00edsicas 8 Procesamiento incremental Cambio de carga completa a procesamiento por d\u00eda espec\u00edfico TI (Miguel Ayte) Desarrollado Reduce tiempo de ejecuci\u00f3n y recursos 9 Documentaci\u00f3n Mejora en comentarios y estructura del c\u00f3digo TI (Miguel Ayte) Desarrollado Facilita el mantenimiento futuro 10 Validaci\u00f3n de datos Adici\u00f3n de validaciones expl\u00edcitas para datos de entrada TI (Miguel Ayte) Desarrollado Mayor robustez del proceso 11 Optimizaci\u00f3n de consultas Reescritura de consultas para mejor uso de \u00edndices TI (Miguel Ayte) Desarrollado Mejora en performance de consultas 12 Eliminaci\u00f3n de c\u00f3digo comentado Limpieza de c\u00f3digo obsoleto o comentado TI (Miguel Ayte) Desarrollado Reduce confusi\u00f3n y tama\u00f1o de scripts 13 Manejo de errores Adici\u00f3n de manejo b\u00e1sico de errores TI (Miguel Ayte) Pendiente Planificado para pr\u00f3xima iteraci\u00f3n 14 Logging Implementaci\u00f3n de sistema de logging TI (Miguel Ayte) Pendiente Para mejor trazabilidad de problemas 15 Monitoreo Adici\u00f3n de m\u00e9tricas de performance TI (Miguel Ayte) Pendiente Permitir\u00e1 optimizaciones futuras Notas clave de las mejoras"},{"location":"proyectos/optimizar-etl-carga-ventas-diarias/avances/#notas-clave-de-las-mejoras","title":"Notas clave de las mejoras:","text":"<ol> <li>Reducci\u00f3n de tiempo de ejecuci\u00f3n: El proceso pas\u00f3 de ~15 minutos a ~3-5 minutos para un d\u00eda completo</li> <li>Menor bloqueo de recursos: Al procesar por d\u00eda y usar tablas temporales</li> <li>Mayor mantenibilidad: C\u00f3digo mejor estructurado y documentado</li> <li>Escalabilidad: F\u00e1cil adaptaci\u00f3n para procesar rangos de fechas espec\u00edficos</li> <li>Consistencia: Eliminaci\u00f3n de l\u00f3gica redundante y consolidaci\u00f3n en procedimientos especializados</li> </ol> <p>Las mejoras pendientes est\u00e1n planificadas para la siguiente fase de optimizaci\u00f3n.</p>"},{"location":"proyectos/optimizar-etl-carga-ventas-diarias/descripcion/","title":"PUBLICACION EN PRODUCCION","text":""},{"location":"proyectos/optimizar-etl-carga-ventas-diarias/descripcion/#tablas","title":"Tablas","text":""},{"location":"proyectos/optimizar-etl-carga-ventas-diarias/descripcion/#tabla-de-metadatos","title":"Tabla de Metadatos","text":"<ol> <li>ventascabecera_meta</li> </ol>"},{"location":"proyectos/optimizar-etl-carga-ventas-diarias/descripcion/#tablas-de-logging","title":"Tablas de Logging","text":"<ol> <li>etl_log_procesos</li> <li>etl_log_errores</li> </ol>"},{"location":"proyectos/optimizar-etl-carga-ventas-diarias/descripcion/#vistas","title":"Vistas","text":""},{"location":"proyectos/optimizar-etl-carga-ventas-diarias/descripcion/#procedimientos-almacenados","title":"Procedimientos almacenados","text":""},{"location":"proyectos/optimizar-etl-carga-ventas-diarias/documentos-tecnicos/ETL_Actualiza_Cubo_VentasDiarias/","title":"Documentaci\u00f3n del Proceso ETL para Actualizaci\u00f3n del Cubo de Ventas Diarias","text":""},{"location":"proyectos/optimizar-etl-carga-ventas-diarias/documentos-tecnicos/ETL_Actualiza_Cubo_VentasDiarias/#1-diagrama-de-flujo-de-datos-dfd","title":"1. Diagrama de Flujo de Datos (DFD)","text":"<pre><code>flowchart TD\n    A[Inicio] --&gt; B[Definir par\u00e1metros de fecha]\n    B --&gt; C{Ejecutar usp_etl_migrar_ventas_diarias}\n    C --&gt; D[Actualizar tabla ventas]\n    C --&gt; E[Actualizar Factventas]\n    C --&gt; F[Actualizar VentasVersus]\n    F --&gt; G[Crear VentasVersusYYYY]\n    D --&gt; H[Actualizar VentasSH]\n    E --&gt; H\n    F --&gt; H\n    G --&gt; I[Actualizar tb_asesorventa]\n    H --&gt; J[Actualizar CostoSH]\n    I --&gt; K[Presentaci\u00f3n de datos]\n    J --&gt; K\n    K --&gt; L[Actualizar datos RRHH]\n    L --&gt; M[Actualizar cat\u00e1logos]\n    M --&gt; N[Actualizar ventas de cat\u00e1logo]\n    N --&gt; O[Fin]</code></pre> Explicaci\u00f3n del DFD <p>Explicaci\u00f3n del DFD:</p> <p>Este diagrama muestra el flujo de datos del procedimiento almacenado, que sigue un t\u00edpico patr\u00f3n ETL (Extract, Transform, Load):</p> <ol> <li> <p>Definici\u00f3n de par\u00e1metros: Establece todas las variables de fecha necesarias para el procesamiento, manejando tanto ejecuciones autom\u00e1ticas (sin par\u00e1metro) como manuales (con fecha espec\u00edfica).</p> </li> <li> <p>Migraci\u00f3n inicial: Llama a <code>usp_etl_migrar_ventas_diarias</code> para extraer y preparar los datos fuente.</p> </li> <li> <p>Carga en tablas de hechos: </p> </li> <li>Actualiza secuencialmente las tablas <code>ventas</code>, <code>Factventas</code> y <code>VentasVersus</code> con los datos del d\u00eda procesado.</li> <li> <p>Crea una tabla anual <code>VentasVersusYYYY</code> para an\u00e1lisis hist\u00f3ricos.</p> </li> <li> <p>Procesamiento auxiliar:</p> </li> <li>Actualiza informaci\u00f3n de asesores de venta en <code>tb_asesorventa</code>.</li> <li> <p>Carga datos en tablas resumen <code>VentasSH</code> y <code>CostoSH</code>.</p> </li> <li> <p>Transformaci\u00f3n para presentaci\u00f3n:</p> </li> <li>Formatea campos como rangos horarios para facilitar el an\u00e1lisis.</li> <li> <p>Maneja casos especiales para presentaci\u00f3n en informes.</p> </li> <li> <p>Integraci\u00f3n con otros sistemas:</p> </li> <li>Actualiza datos de RRHH (empleados activos).</li> <li>Sincroniza informaci\u00f3n de cat\u00e1logos y su relaci\u00f3n con productos.</li> </ol> <p>El flujo es principalmente secuencial, con algunas operaciones en paralelo cuando no hay dependencias de datos entre ellas.</p>"},{"location":"proyectos/optimizar-etl-carga-ventas-diarias/documentos-tecnicos/ETL_Actualiza_Cubo_VentasDiarias/#2-diagrama-de-entidad-relacion-der","title":"2. Diagrama de Entidad-Relaci\u00f3n (DER)","text":"<pre><code>erDiagram\n    VENTASCABECERA ||--o{ VENTASDETALLE : contiene\n    VENTASCABECERA {\n        string id PK\n        date fecha\n        string canalventa\n        string vendedor\n        string tienda\n        string cliente\n    }\n    VENTASDETALLE {\n        string id FK\n        string producto\n        decimal cantidad\n        decimal precioventa\n    }\n    PRODUCTO ||--o{ VENTASDETALLE : referencia\n    PRODUCTO {\n        string producto PK\n        decimal preciocosto\n        decimal precio\n    }\n    FACTVENTAS ||--|{ VENTASVERSUS : deriva\n    FACTVENTAS {\n        date fecha\n        string id\n        string producto\n    }\n    VENTASVERSUS {\n        date fecha\n        string idFecha\n    }\n    TB_ASESORVENTA {\n        string vendedor PK\n        date fecha PK\n        string nombre\n        string cargo\n    }\n    VENDEDOR ||--o{ TB_ASESORVENTA : referencia\n    VENDEDOR {\n        string vendedor PK\n        string nombre\n    }\n    TB_CAT {\n        int id_catalogo PK\n        date fecha\n    }\n    TB_CAT_PROD {\n        int idcat FK\n        string producto FK\n    }</code></pre> Explicaci\u00f3n del DER <p>Explicaci\u00f3n del DER:</p> <p>El diagrama muestra las principales entidades involucradas en el proceso:</p> <ol> <li>Entidades centrales:</li> <li><code>VENTASCABECERA</code> y <code>VENTASDETALLE</code> son las tablas fuente principales con relaci\u00f3n 1:N.</li> <li> <p><code>PRODUCTO</code> contiene informaci\u00f3n de precios que enriquece los datos de ventas.</p> </li> <li> <p>Tablas de hechos:</p> </li> <li><code>FACTVENTAS</code> es la tabla principal del data warehouse.</li> <li> <p><code>VENTASVERSUS</code> parece ser una tabla para an\u00e1lisis comparativos.</p> </li> <li> <p>Entidades de soporte:</p> </li> <li><code>TB_ASESORVENTA</code> almacena informaci\u00f3n de vendedores con historizaci\u00f3n.</li> <li><code>TB_CAT</code> y <code>TB_CAT_PROD</code> gestionan la relaci\u00f3n entre cat\u00e1logos y productos.</li> </ol> <p>Las relaciones muestran c\u00f3mo los datos fluyen desde las tablas transaccionales (<code>VENTASCABECERA</code>, <code>VENTASDETALLE</code>) hacia las tablas anal\u00edticas (<code>FACTVENTAS</code>, <code>VENTASVERSUS</code>), con tablas auxiliares para enriquecer la informaci\u00f3n.</p>"},{"location":"proyectos/optimizar-etl-carga-ventas-diarias/documentos-tecnicos/ETL_Migra_VentasDiarias/","title":"Documentaci\u00f3n del Proceso ETL para Carga de Ventas Diarias","text":""},{"location":"proyectos/optimizar-etl-carga-ventas-diarias/documentos-tecnicos/ETL_Migra_VentasDiarias/#1-diagrama-de-flujo-de-datos-dfd","title":"1. Diagrama de Flujo de Datos (DFD)","text":"<pre><code>flowchart TD\n    A[Inicio] --&gt; B[Establecer fecha de proceso]\n    B --&gt; C{Obtener informaci\u00f3n del mes}\n    C --&gt; D[Eliminar datos existentes para el d\u00eda]\n    D --&gt; E[Insertar datos de tipo venta y medio de pago]\n    E --&gt; F[Insertar registros \u00fanicos de tipo venta]\n    F --&gt; G[Eliminar detalles de ventas para el d\u00eda]\n    G --&gt; H[Merge ventascabecera]\n    H --&gt; I[Crear tablas temporales]\n    I --&gt; J[Procesar documentos tipo 007]\n    J --&gt; K[Procesar otros documentos]\n    K --&gt; L[Fin]\n\n    subgraph Procesamiento Principal\n        B --&gt; C\n        C --&gt; D\n        D --&gt; E\n        E --&gt; F\n        F --&gt; G\n        G --&gt; H\n    end\n\n    subgraph Procesamiento Detalles\n        H --&gt; I\n        I --&gt; J\n        J --&gt; K\n    end</code></pre> Explicaci\u00f3n del DFD"},{"location":"proyectos/optimizar-etl-carga-ventas-diarias/documentos-tecnicos/ETL_Migra_VentasDiarias/#explicacion-del-dfd","title":"Explicaci\u00f3n del DFD","text":"<p>El diagrama muestra el flujo secuencial del procedimiento de migraci\u00f3n de ventas diarias:</p> <ol> <li> <p>Inicializaci\u00f3n: Establece la fecha de proceso (hoy o ayer si no se especifica) y obtiene los rangos del mes actual.</p> </li> <li> <p>Limpieza inicial: Elimina datos existentes para el d\u00eda en las tablas de resumen (<code>tb_tipoventa_mediopago</code> y <code>tb_tipoventa_mediopago_unico</code>) y detalles de ventas.</p> </li> <li> <p>Carga de datos maestros: Inserta datos de tipos de venta y medios de pago desde la vista <code>view_tipoventa_mediopago_DWH</code> y luego filtra los registros \u00fanicos.</p> </li> <li> <p>Procesamiento de cabeceras: Realiza un MERGE complejo en la tabla <code>ventascabecera</code> que:</p> </li> <li>Actualiza registros existentes si hay cambios</li> <li>Inserta nuevos registros</li> <li> <p>Elimina registros que ya no existen en el origen</p> </li> <li> <p>Procesamiento de detalles: </p> </li> <li>Crea tablas temporales para mejorar el rendimiento</li> <li>Procesa separadamente las notas de cr\u00e9dito (tipo 007) con valores negativos</li> <li>Procesa el resto de documentos con valores positivos</li> </ol> <p>El flujo es principalmente secuencial con algunas operaciones en paralelo (como el procesamiento de los diferentes tipos de documentos).</p>"},{"location":"proyectos/optimizar-etl-carga-ventas-diarias/documentos-tecnicos/ETL_Migra_VentasDiarias/#2-diagrama-de-entidad-relacion-der","title":"2. Diagrama de Entidad-Relaci\u00f3n (DER)","text":"<pre><code>erDiagram\n    VENTASCABECERA ||--o{ VENTASDETALLE : \"1:N\"\n    VENTASCABECERA {\n        string id PK\n        string canalventa\n        string correlativo\n        string tipodocumento\n        string serie\n        string numero\n        date fecha\n        numeric valorventa\n        numeric igv\n        numeric total\n        string periodo\n    }\n\n    VENTASDETALLE {\n        string id FK\n        string ccom_3a\n        string ncom_3a\n        string linea_3a\n        numeric cant_3a\n        numeric pvta1_3a\n        numeric vvta1_3a\n        numeric igv1_3a\n        numeric tot1_3a\n    }\n\n    TB_TIPOVENTA_MEDIOPAGO {\n        date fecha PK\n        string tipodeventa\n        string mediopago\n        string tipodoc\n        string serie\n        string nrodoc\n        numeric venta\n        numeric igv\n        numeric total\n    }\n\n    TB_TIPOVENTA_MEDIOPAGO_UNICO {\n        date fecha PK\n        string tipodoc\n        string serie\n        string nrodoc\n        string mediopagoid\n        string tipodeventa\n    }\n\n    FAG0300 ||--o{ FAP0300 : \"1:N\"\n    FAG0300 {\n        string transacabid PK\n        date fcom_3\n        string tidoc_3\n        string ccom_3\n        string ncom_3\n    }\n\n    FAP0300 {\n        string transacabid FK\n        string linea_3a\n        numeric cant_3a\n        numeric vvta1_3a\n        numeric igv1_3a\n    }</code></pre> Explicaci\u00f3n del DER"},{"location":"proyectos/optimizar-etl-carga-ventas-diarias/documentos-tecnicos/ETL_Migra_VentasDiarias/#explicacion-del-der","title":"Explicaci\u00f3n del DER","text":"<p>El diagrama muestra las principales entidades involucradas en el proceso:</p> <ol> <li> <p>VENTASCABECERA: Tabla principal que almacena los documentos de venta con sus atributos principales como tipo de documento, serie, n\u00famero, fechas y montos totales. Tiene una relaci\u00f3n 1:N con VENTASDETALLE.</p> </li> <li> <p>VENTASDETALLE: Contiene los \u00edtems de cada documento de venta, con informaci\u00f3n detallada de productos, cantidades y precios. Se relaciona con VENTASCABECERA a trav\u00e9s del campo ID.</p> </li> <li> <p>TB_TIPOVENTA_MEDIOPAGO: Tabla de resumen que relaciona tipos de venta con medios de pago, con informaci\u00f3n consolidada por d\u00eda.</p> </li> <li> <p>TB_TIPOVENTA_MEDIOPAGO_UNICO: Versi\u00f3n filtrada de la anterior que contiene solo las combinaciones \u00fanicas de tipo de venta y medio de pago por documento.</p> </li> <li> <p>FAG0300 y FAP0300: Tablas origen en la base de datos de pasarela que contienen respectivamente las cabeceras y detalles de las transacciones. Mantienen una relaci\u00f3n 1:N similar a las tablas de destino.</p> </li> </ol> <p>El diagrama muestra c\u00f3mo los datos fluyen desde las tablas origen (FAG0300/FAP0300) hacia las tablas de destino en el data warehouse, pasando por tablas de resumen intermedias.</p>"},{"location":"proyectos/optimizar-etl-carga-ventas-diarias/documentos-tecnicos/ETL_actualizar_ventas_con_metadato/","title":"Diagramas y Documentaci\u00f3n para el Procedimiento Almacenado de Ventas","text":""},{"location":"proyectos/optimizar-etl-carga-ventas-diarias/documentos-tecnicos/ETL_actualizar_ventas_con_metadato/#1-diagrama-de-flujo-de-datos-dfd-en-mermaid","title":"1. Diagrama de Flujo de Datos (DFD) en Mermaid","text":"<pre><code>flowchart TD\n    A[Inicio] --&gt; B[Obtener Par\u00e1metros Configurables]\n    B --&gt; C{Par\u00e1metros v\u00e1lidos?}\n    C --&gt;|No| D[Error: Par\u00e1metros no configurados]\n    C --&gt;|S\u00ed| E[Establecer Fechas de Proceso]\n    E --&gt; F[Eliminar Datos Existentes del D\u00eda]\n    F --&gt; G[Insertar Datos de Tipo Venta y Medio Pago]\n    G --&gt; H[Actualizar Metadatos con Hash]\n    H --&gt; I[Actualizar Ventas Existentes]\n    I --&gt; J[Insertar Nuevas Ventas]\n    J --&gt; K[Eliminar Ventas Inexistentes]\n    K --&gt; L[Procesar Detalles de Ventas]\n    L --&gt; M[Resetear Banderas de Actualizaci\u00f3n]\n    M --&gt; N[Registrar Ejecuci\u00f3n Exitosa]\n    D --&gt; O[Registrar Error]\n    O --&gt; P[Fin con Error]\n    N --&gt; Q[Fin Exitoso]</code></pre>"},{"location":"proyectos/optimizar-etl-carga-ventas-diarias/documentos-tecnicos/ETL_actualizar_ventas_con_metadato/#explicacion-del-dfd","title":"Explicaci\u00f3n del DFD:","text":"<p>Este diagrama representa el flujo secuencial del procedimiento almacenado <code>usp_actualizar_ventas_con_meta</code>. El proceso:</p> <ol> <li> <p>Inicia obteniendo par\u00e1metros configurables de la tabla <code>tb_ParametrosGeneralesVentas</code>, que determinan el comportamiento del proceso (d\u00edas de recovery, meses de actualizaci\u00f3n, campos para hash).</p> </li> <li> <p>Valida estos par\u00e1metros antes de continuar, registrando un error si faltan configuraciones esenciales.</p> </li> <li> <p>Establece el rango de fechas para el procesamiento basado en los par\u00e1metros obtenidos.</p> </li> <li> <p>Prepara el terreno eliminando datos existentes para el d\u00eda en tablas de resumen.</p> </li> <li> <p>Carga datos frescos de ventas con su tipo y medio de pago desde la vista <code>view_tipoventa_mediopago_DWH</code>.</p> </li> <li> <p>Actualiza metadatos usando un hash din\u00e1mico para identificar cambios en los registros fuente.</p> </li> <li> <p>Sincroniza las ventas existentes con los datos fuente, actualizando solo los campos de negocio.</p> </li> <li> <p>Inserta nuevas ventas que no exist\u00edan previamente en la base de datos.</p> </li> <li> <p>Elimina registros que ya no existen en la fuente.</p> </li> <li> <p>Procesa detalles de ventas con l\u00f3gica especial para notas de cr\u00e9dito (valores negativos).</p> </li> <li> <p>Finaliza limpiando banderas y registrando el resultado del proceso.</p> </li> </ol> <p>El flujo maneja adecuadamente errores mediante transacciones y registro detallado de fallos.</p>"},{"location":"proyectos/optimizar-etl-carga-ventas-diarias/documentos-tecnicos/ETL_actualizar_ventas_con_metadato/#2-diagrama-de-entidad-relacion-der-en-mermaid","title":"2. Diagrama de Entidad-Relaci\u00f3n (DER) en Mermaid","text":"<pre><code>erDiagram\n    ventascabecera ||--o{ ventasdetalle : \"1 a muchos\"\n    ventascabecera ||--|| ventascabecera_meta : \"1 a 1\"\n    ventascabecera {\n        string id PK\n        string canalventa\n        string correlativo\n        date fecha\n        numeric total\n        string tipodocumento\n        string numero\n        string serie\n    }\n    ventasdetalle {\n        string id FK\n        string linea\n        numeric cantidad\n        numeric precio\n        numeric descuento\n    }\n    ventascabecera_meta {\n        string canalventa PK\n        string correlativo PK\n        int periodo PK\n        binary hash_datos\n        datetime fecha_ultima_actualizacion_dwh\n        int version_actual\n        bit flag_actualizado\n    }\n    tb_tipoventa_mediopago {\n        date FECHA\n        string TIPODEVENTA\n        string MEDIOPAGO\n        string TIPODOC\n        string SERIE\n        string NRODOC\n    }\n    tb_tipoventa_mediopago_unico {\n        date FECHA\n        string TIPODOC\n        string SERIE\n        string NRODOC\n        string MEDIOPAGOID\n        string TIPODEVENTA\n    }\n    tb_ParametrosGeneralesVentas {\n        string clave PK\n        int anio PK\n        int valorEntero\n        string valorTexto\n        bit activo\n    }\n    fag0300 ||--o{ fap0300 : \"1 a muchos\"\n    fag0300 {\n        string ccom_3 PK\n        string ncom_3 PK\n        date fcom_3\n        string tidoc_3\n        string nfactu_3\n    }\n    fap0300 {\n        string ccom_3a PK,FK\n        string ncom_3a PK,FK\n        string linea_3a PK\n        numeric cant_3a\n        numeric pvta1_3a\n    }</code></pre>"},{"location":"proyectos/optimizar-etl-carga-ventas-diarias/documentos-tecnicos/ETL_actualizar_ventas_con_metadato/#explicacion-del-der","title":"Explicaci\u00f3n del DER:","text":"<p>El diagrama muestra las principales entidades involucradas:</p> <ol> <li>ventascabecera: Tabla principal de ventas con informaci\u00f3n de cabecera.</li> <li>ventasdetalle: Contiene los \u00edtems de cada venta, relacionada con ventascabecera.</li> <li>ventascabecera_meta: Almacena metadatos t\u00e9cnicos para control de cambios.</li> <li>Tablas de tipo venta/medio pago: Almacenan informaci\u00f3n adicional de clasificaci\u00f3n.</li> <li>tb_ParametrosGeneralesVentas: Configuraci\u00f3n del proceso ETL.</li> <li>Tablas fuente (fag0300/fap0300): Estructuras origen de los datos.</li> </ol> <p>Las relaciones clave son: - Ventas cabecera-detalle (1 a muchos) - Ventas cabecera-metadatos (1 a 1) - Documentos fuente cabecera-detalle (1 a muchos)</p>"},{"location":"proyectos/optimizar-etl-carga-ventas-diarias/documentos-tecnicos/ETL_actualizar_ventas_con_metadato/#nombre-tecnico-sugerido-para-el-documento","title":"Nombre T\u00e9cnico Sugerido para el Documento:","text":"<p>\"ETL_Ventas_ProcedimientoAlmacenado_ActualizacionConMeta.md\"</p> <p>Justificaci\u00f3n: - ETL_Ventas: Indica que es un proceso de extracci\u00f3n, transformaci\u00f3n y carga de datos de ventas. - ProcedimientoAlmacenado: Especifica el tipo de artefacto documentado. - ActualizacionConMeta: Destaca la caracter\u00edstica distintiva de usar metadatos/hash para control de cambios.</p> <p>Este nombre sigue convenciones t\u00e9cnicas claras, es autoexplicativo y facilita la b\u00fasqueda en el portal de documentaci\u00f3n.</p>"},{"location":"proyectos/optimizar-etl-carga-ventas-diarias/documentos-tecnicos/sp-nuevos/","title":"SP nuevos","text":"usp_etl_migrar_ventas_diarias usp_etl_migrar_ventas_diarias.sql<pre><code>/*\n    Nombre:      dbo.usp_etl_migrar_ventas_diarias\n    Objetivo:    Migrar, actualizar y consolidar la informaci\u00f3n de ventas del d\u00eda en las tablas del Data Warehouse.\n                El procedimiento realiza la limpieza, inserci\u00f3n y actualizaci\u00f3n de datos de ventas, \n                as\u00ed como el procesamiento de detalles y cabeceras de documentos, utilizando tablas temporales \n                para mejorar el rendimiento y asegurar la integridad de la informaci\u00f3n diaria.\n\n    Autor:       Miguel Ayte\n    Fecha:       2025-06-23\n\n    Descripci\u00f3n general del proceso:\n        - Inicializa la fecha de proceso y obtiene los rangos del mes.\n        - Elimina datos existentes del d\u00eda en tablas de resumen.\n        - Inserta y consolida datos de tipo de venta y medio de pago.\n        - Elimina y actualiza cabeceras y detalles de ventas usando MERGE y tablas temporales locales.\n        - Procesa documentos tipo 007 (notas de cr\u00e9dito) y otros documentos, asegurando la correcta migraci\u00f3n y consistencia de los datos.\n*/\n-- EXECUTE [dbo].[usp_etl_migrar_ventas_diarias] '2025-04-01'\nALTER PROCEDURE [dbo].[usp_etl_migrar_ventas_diarias] (@hoy DATE = NULL)\nAS\nBEGIN\n    SET NOCOUNT ON\n\n    -- Establecer fecha de ayer si es nula\n    IF @hoy IS NULL SET @hoy = DATEADD(dd,DATEDIFF(dd,0,GETDATE()),-1)\n\n    -- Obtener informaci\u00f3n del mes\n    DECLARE @a\u00f1o INT, @mes CHAR(4), @PrimerDia DATE, @UltimoDia DATE\n\n    SELECT \n        @a\u00f1o = YEAR(t.fec), \n        @mes = FORMAT(t.fec, 'MM'),\n        @PrimerDia = t.FechaIniTY,\n        @UltimoDia = FechaFinTY\n    FROM dbo.fn_get_fechas_del_mes (@hoy) AS t\n\n    -- Eliminar datos existentes para el d\u00eda\n    DELETE FROM tb_tipoventa_mediopago WHERE FECHA = @hoy\n    DELETE FROM tb_tipoventa_mediopago_unico WHERE FECHA = @hoy\n\n    -- Insertar datos de tipo venta y medio de pago\n    INSERT INTO tb_tipoventa_mediopago\n    SELECT \n        vtm.periodo, vtm.MES, vtm.TIPVENTAID, vtm.TIPODEVENTA, vtm.MEDIOPAGOID, \n        vtm.MEDIOPAGO, vtm.TIPODOC, vtm.SERIE, vtm.NRODOC, vtm.SERIENC, \n        vtm.NRODOCNC, vtm.CLIENTE, vtm.FECHA, vtm.DSCTO, vtm.VENTA, vtm.IGV, \n        vtm.TOTAL, vtm.CODPERSONAL, vtm.TIENDA, vtm.DOCIDEN, vtm.CODMOTIVO, \n        vtm.MOTIVOTRAN, vtm.MOTIVONC, vtm.PERCEPCION, vtm.TOTALCONPERCEP, \n        vtm.banco, vtm.n\n    FROM servnprod.bd_passarela.dbo.view_tipoventa_mediopago_DWH AS vtm\n    WHERE vtm.FECHA = @hoy\n\n    -- Insertar registros \u00fanicos de tipo venta y medio de pago\n    INSERT INTO tb_tipoventa_mediopago_unico\n    SELECT \n        m1.TIPODOC, m1.SERIE, m1.NRODOC, m1.MEDIOPAGOID, m1.TIPODEVENTA, \n        m1.FECHA, m1.[Rank]\n    FROM (\n        SELECT DISTINCT \n            m.TIPODOC, m.SERIE, m.NRODOC, m.MEDIOPAGOID, m.TIPODEVENTA, \n            m.FECHA,\n            RANK() OVER(\n                PARTITION BY m.TIPODOC, m.SERIE, m.NRODOC, m.TIPODEVENTA \n                ORDER BY m.TIPODOC, m.SERIE, m.NRODOC, m.MEDIOPAGOID, m.TIPODEVENTA DESC\n            ) AS RANK\n        FROM dbo.tb_tipoventa_mediopago AS m\n        WHERE m.FECHA = @hoy\n    ) AS m1\n    WHERE m1.[Rank] = 1\n\n    -- Eliminar detalles de ventas para el d\u00eda\n    DELETE vd\n    FROM ventasdetalle AS vd\n    INNER JOIN ventascabecera AS vc ON vc.id = vd.id\n    WHERE vc.fecha = @hoy\n\n    -- MERGE para actualizar ventascabecera\n    MERGE ventascabecera AS TARGET\n    USING (\n        SELECT \n            canalventa, correlativo, tipodocumento, serie, numero, tipodocref, \n            serieref, numeroref, cliente, hora, fecha, mediopago, valorventa, \n            igv, total, vendedor, tienda, vale, montopercepcion, \n            CAST(dd.totpecepcion AS NUMERIC(18,2)) AS totpecepcion, estado,\n            periodo, n, rucdni, email, autoriza, clientename, \n            CAST(dd.pedidoweb AS VARCHAR(30)) AS pedidoweb,\n            dd.id_tipoventa, dd.alicom_3,\n            donacion, anticipo, gratuita, dsctoglobal, iigv_3, numcaja, \n            motivref, icbper_3\n        FROM (\n            SELECT \n                CAST(ccom_3 AS NVARCHAR(3)) AS canalventa,\n                CAST(ncom_3 AS NVARCHAR(8)) AS correlativo,\n                CAST(tidoc_3 AS NVARCHAR(3)) AS tipodocumento,\n                CAST(sfactu_3 AS NVARCHAR(4)) AS serie,\n                CAST(nfactu_3 AS NVARCHAR(8)) AS numero,\n                CAST(tidocr_3 AS NVARCHAR(3)) AS tipodocref,\n                CAST(sfactur_3 AS NVARCHAR(4)) AS serieref,\n                CAST(nfactur_3 AS NVARCHAR(8)) AS numeroref,\n                CAST(ruc_3 AS NVARCHAR(15)) AS cliente,\n                CAST(gloa_3 AS NVARCHAR(200)) AS hora,\n                CAST(fcom_3 AS DATETIME) AS fecha,\n                CAST(condp_3 AS NVARCHAR(2)) AS mediopago,\n                CAST(vuelt2_3 AS NUMERIC(18, 2)) AS donacion,\n                CAST(anticipo_3 AS NUMERIC(18, 2)) AS anticipo,\n                CAST(gratuita AS NUMERIC(18, 2)) AS gratuita,\n                CAST(dscto1_3 AS NUMERIC(18, 2)) AS dsctoglobal,\n                CAST(iigv_3 AS NUMERIC(18, 2)) AS iigv_3,\n                CAST(numcaja AS NVARCHAR(2)) AS numcaja,\n                b.nomb_28 AS motivref,\n                CAST(icbper_3 AS NUMERIC(12, 2)) AS icbper_3,\n                IIF(tidoc_3 = '007', -1 * CAST(vvta1_3 AS NUMERIC(18, 2)), CAST(vvta1_3 AS NUMERIC(18, 2))) AS valorventa,\n                IIF(tidoc_3 = '007', -1 * CAST(igv1_3 AS NUMERIC(18, 2)), CAST(igv1_3 AS NUMERIC(18, 2))) AS igv,\n                IIF(tidoc_3 = '007', -1 * CAST(tot1_3 AS NUMERIC(18, 2)), CAST(tot1_3 AS NUMERIC(18, 2))) AS total,\n                IIF(CAST(fichv_3 AS NVARCHAR(6)) = '', '000000', REPLACE(REPLACE(CAST(fichv_3 AS NVARCHAR(6)), '*', '0'), '.', '0')) AS vendedor,\n                CAST(tienda_3 AS NVARCHAR(2)) AS tienda,\n                CAST(nvale_3 AS NVARCHAR(17)) AS vale,\n                IIF(tidoc_3 = '007', -1 * CAST(monper_3 AS NUMERIC(18, 2)), CAST(monper_3 AS NUMERIC(18, 2))) AS montopercepcion,\n                IIF(tidoc_3 = '007', -1 * CAST(totper_3 AS NUMERIC(18, 2)), CAST(totper_3 AS NUMERIC(18, 2))) AS totpecepcion,\n                CAST(flag_3 AS NUMERIC(1, 0)) AS estado,\n                IIF(CAST(ruc_3 AS NVARCHAR(15)) = '', '0', CAST(ruc_3 AS NVARCHAR(15))) AS ruc,\n                CAST(FORMAT(t1.fcom_3,'yyyy') AS VARCHAR(4)) AS periodo,\n                CONCAT(CAST(FORMAT(t1.fcom_3,'yyyy') AS VARCHAR(4)), CAST(ccom_3 AS NVARCHAR(3)), CAST(ncom_3 AS NVARCHAR(8))) AS n,\n                T1.ruc_3 AS rucdni,\n                T1.xmlfull AS email,\n                CASE WHEN CHARINDEX('@', T1.xmlfull) &gt; 0 THEN \n                    CASE WHEN T1.meses_3 = 1 THEN 'SI' ELSE 'NO' END\n                ELSE NULL END AS autoriza,\n                T1.nomb_3 AS clientename,\n                T1.pedidoweb,\n                CASE \n                    WHEN T1.tipov_3 = '00' THEN \n                        CASE WHEN CAST(tienda_3 AS NVARCHAR(2)) = 'D6' THEN '27' ELSE '11' END\n                    ELSE T1.tipov_3\n                END AS id_tipoventa,\n                T1.alicom_3\n            FROM servnprod.bd_passarela.dbo.fag0300 AS T1 WITH (NOLOCK)\n            INNER JOIN servnprod.bd_passarela.dbo.fag2800_FACTU b WITH (NOLOCK)\n                ON T1.motiv_28 = b.motiv_28\n            WHERE fcom_3 = @hoy\n        ) AS dd\n    ) AS SOURCE\n    ON (TARGET.canalventa = SOURCE.canalventa\n        AND TARGET.correlativo = SOURCE.correlativo\n        AND TARGET.periodo = SOURCE.periodo)\n    WHEN MATCHED AND (\n        TARGET.tipodocumento &lt;&gt; SOURCE.tipodocumento OR\n        TARGET.serie &lt;&gt; SOURCE.serie OR\n        TARGET.numero &lt;&gt; SOURCE.numero OR\n        TARGET.tipodocref &lt;&gt; SOURCE.tipodocref OR\n        TARGET.serieref &lt;&gt; SOURCE.serieref OR\n        TARGET.numeroref &lt;&gt; SOURCE.numeroref OR\n        TARGET.clientepordefinir &lt;&gt; SOURCE.cliente OR\n        TARGET.hora &lt;&gt; SOURCE.hora OR\n        TARGET.fecha &lt;&gt; SOURCE.fecha OR\n        TARGET.mediopago &lt;&gt; SOURCE.mediopago OR\n        TARGET.valorventa &lt;&gt; SOURCE.valorventa OR\n        TARGET.igv &lt;&gt; SOURCE.igv OR\n        TARGET.total &lt;&gt; SOURCE.total OR\n        TARGET.vendedor &lt;&gt; SOURCE.vendedor OR\n        TARGET.tienda &lt;&gt; SOURCE.tienda OR\n        TARGET.vale &lt;&gt; SOURCE.vale OR\n        TARGET.montopercepcion &lt;&gt; SOURCE.montopercepcion OR\n        TARGET.totalpercepcion &lt;&gt; SOURCE.totpecepcion OR\n        TARGET.flag &lt;&gt; SOURCE.estado OR\n        TARGET.cliente &lt;&gt; SOURCE.cliente OR\n        TARGET.id &lt;&gt; SOURCE.n OR\n        TARGET.rucdni &lt;&gt; SOURCE.rucdni OR\n        TARGET.email &lt;&gt; SOURCE.email OR\n        TARGET.autoriza &lt;&gt; SOURCE.autoriza OR\n        TARGET.clientename &lt;&gt; SOURCE.clientename OR\n        TARGET.pedidoweb &lt;&gt; SOURCE.pedidoweb OR\n        TARGET.id_tipoventa &lt;&gt; SOURCE.id_tipoventa OR\n        TARGET.Donacion &lt;&gt; SOURCE.Donacion OR\n        TARGET.anticipo &lt;&gt; SOURCE.anticipo OR\n        TARGET.GRATUITA &lt;&gt; SOURCE.GRATUITA OR\n        TARGET.dsctoglobal &lt;&gt; SOURCE.dsctoglobal OR\n        TARGET.iigv_3 &lt;&gt; SOURCE.iigv_3 OR\n        TARGET.numcaja &lt;&gt; SOURCE.numcaja OR\n        TARGET.motivref &lt;&gt; SOURCE.motivref OR\n        TARGET.icbper_3 &lt;&gt; SOURCE.icbper_3\n    ) THEN\n        UPDATE SET\n            TARGET.tipodocumento = SOURCE.tipodocumento,\n            TARGET.serie = SOURCE.serie,\n            TARGET.numero = SOURCE.numero,\n            TARGET.tipodocref = SOURCE.tipodocref,\n            TARGET.serieref = SOURCE.serieref,\n            TARGET.numeroref = SOURCE.numeroref,\n            TARGET.clientepordefinir = SOURCE.cliente,\n            TARGET.hora = SOURCE.hora,\n            TARGET.fecha = SOURCE.fecha,\n            TARGET.mediopago = SOURCE.mediopago,\n            TARGET.valorventa = SOURCE.valorventa,\n            TARGET.igv = SOURCE.igv,\n            TARGET.total = SOURCE.total,\n            TARGET.vendedor = SOURCE.vendedor,\n            TARGET.tienda = SOURCE.tienda,\n            TARGET.vale = SOURCE.vale,\n            TARGET.montopercepcion = SOURCE.montopercepcion,\n            TARGET.totalpercepcion = SOURCE.totpecepcion,\n            TARGET.flag = SOURCE.estado,\n            TARGET.cliente = SOURCE.cliente,\n            TARGET.id = SOURCE.n,\n            TARGET.rucdni = SOURCE.rucdni,\n            TARGET.email = SOURCE.email,\n            TARGET.autoriza = SOURCE.autoriza,\n            TARGET.clientename = SOURCE.clientename,\n            TARGET.pedidoweb = SOURCE.pedidoweb,\n            TARGET.id_tipoventa = SOURCE.id_tipoventa,\n            TARGET.alicom_3 = SOURCE.alicom_3,\n            TARGET.Donacion = SOURCE.Donacion,\n            TARGET.anticipo = SOURCE.anticipo,\n            TARGET.GRATUITA = SOURCE.GRATUITA,\n            TARGET.dsctoglobal = SOURCE.dsctoglobal,\n            TARGET.iigv_3 = SOURCE.iigv_3,\n            TARGET.numcaja = SOURCE.numcaja,\n            TARGET.motivref = SOURCE.motivref,\n            TARGET.icbper_3 = SOURCE.icbper_3\n    WHEN NOT MATCHED BY TARGET THEN\n        INSERT (\n            canalventa, correlativo, tipodocumento, serie, numero, tipodocref,\n            serieref, numeroref, clientepordefinir, hora, fecha, mediopago,\n            valorventa, igv, total, vendedor, tienda, vale, montopercepcion,\n            totalpercepcion, flag, cliente, periodo, id, rucdni, email, autoriza,\n            clientename, pedidoweb, id_tipoventa, alicom_3, Donacion, anticipo,\n            GRATUITA, dsctoglobal, iigv_3, numcaja, motivref, icbper_3\n        )\n        VALUES (\n            SOURCE.canalventa, SOURCE.correlativo, SOURCE.tipodocumento,\n            SOURCE.serie, SOURCE.numero, SOURCE.tipodocref, SOURCE.serieref,\n            SOURCE.numeroref, SOURCE.cliente, SOURCE.hora, SOURCE.fecha,\n            SOURCE.mediopago, SOURCE.valorventa, SOURCE.igv, SOURCE.total,\n            SOURCE.vendedor, SOURCE.tienda, SOURCE.vale, SOURCE.montopercepcion,\n            SOURCE.totpecepcion, SOURCE.estado, SOURCE.cliente, SOURCE.periodo,\n            SOURCE.n, SOURCE.rucdni, SOURCE.email, SOURCE.autoriza,\n            SOURCE.clientename, SOURCE.pedidoweb, SOURCE.id_tipoventa,\n            SOURCE.alicom_3, SOURCE.Donacion, SOURCE.anticipo, SOURCE.gratuita,\n            SOURCE.dsctoglobal, SOURCE.iigv_3, SOURCE.numcaja, SOURCE.motivref,\n            SOURCE.icbper_3\n        )\n    WHEN NOT MATCHED BY SOURCE AND CAST(TARGET.[fecha] AS DATE) = @hoy THEN\n        DELETE;\n\n    -- Procesar detalles de ventas\n    -- Usar tabla temporal para mejorar rendimiento\n    -- Crear tabla temporal #tmpvta si no existe\n    IF OBJECT_ID('tempdb..#tmpvta') IS NOT NULL DROP TABLE #tmpvta;\n    CREATE TABLE #tmpvta (\n        [ccom_3a]    CHAR (3)        NULL,\n        [ncom_3a]    CHAR (8)        NULL,\n        [tidoc_3]    CHAR (3)        NULL,\n        [linea_3a]   CHAR (11)       NULL,\n        [cant_3a]    NUMERIC (10, 2) NULL,\n        [pvta1_3a]   NUMERIC (20, 2) NULL,\n        [dsct1_3a]   NVARCHAR (40)   NULL,\n        [vvta1_3a]   NUMERIC (20, 2) NULL,\n        [igv1_3a]    NUMERIC (20, 2) NULL,\n        [tot1_3a]    NUMERIC (20, 2) NULL,\n        [flag_3a]    NUMERIC (1)     NULL,\n        [porper_3a]  NUMERIC (4, 1)  NULL,\n        [monper_3a]  NUMERIC (20, 2) NULL,\n        [totper_3a]  NUMERIC (20, 2) NULL,\n        [periodo]    CHAR (4)        NULL,\n        [tipimp_3a]  CHAR (4)        NULL,\n        [aigv_3a]    CHAR (2)        NULL,\n        [id_mkt_cab] INT             NULL,\n        [marca_reg]  CHAR (1)        NULL\n    );\n\n    -- Crear tabla temporal #VentasCabeceraTmp si no existe\n    IF OBJECT_ID('tempdb..#VentasCabeceraTmp') IS NOT NULL DROP TABLE #VentasCabeceraTmp;\n    CREATE TABLE #VentasCabeceraTmp (\n        [canalventa]  CHAR (3) NULL,\n        [correlativo] CHAR (8) NULL,\n        [fecha]       CHAR (2) NULL,\n        [periodo]     CHAR (4) NULL\n    );    \n\n    INSERT INTO #tmpvta\n    SELECT \n        b.ccom_3a, b.ncom_3a, a.tidoc_3, b.linea_3a, cant_3a, pvta1_3a,\n        dsct1_3a, vvta1_3a, igv1_3a, tot1_3a, flag_3a, porper_3a, monper_3a,\n        totper_3a, b.periodo, b.tipimp_3a, b.aigv_3a, b.id_mkt_cab, b.marca_reg\n    FROM servnprod.bd_passarela.dbo.fag0300 a WITH (NOLOCK)\n    INNER JOIN servnprod.bd_passarela.dbo.fap0300 b WITH (NOLOCK)\n        ON a.transacabid = b.transacabid\n    WHERE a.fcom_3 = @hoy\n\n    -- Procesar documentos tipo 007 (notas de cr\u00e9dito)\n    TRUNCATE TABLE #VentasCabeceraTmp\n\n    INSERT INTO #VentasCabeceraTmp\n    SELECT \n        b.canalventa, b.correlativo, FORMAT(b.fecha, 'MM'), FORMAT(b.fecha, 'yyyy')\n    FROM ventascabecera b\n    WHERE b.periodo = @a\u00f1o AND b.fecha = @hoy AND b.tipodocumento = '007'\n\n    INSERT INTO ventasdetalle\n    SELECT \n        a.ccom_3a, a.ncom_3a, a.linea_3a, -1*CAST(a.cant_3a AS NUMERIC), a.pvta1_3a,\n        a.dsct1_3a, (-1*CAST(a.vvta1_3a AS NUMERIC(18,2))), (-1*CAST(a.igv1_3a AS NUMERIC(18,2))),\n        (-1*CAST(a.tot1_3a AS NUMERIC(18,2))), a.flag_3a, a.porper_3a,\n        (-1*CAST(a.monper_3a AS NUMERIC(18,2))), (-1*CAST(a.totper_3a AS NUMERIC(18,2))),\n        0, b.periodo, \n        CONCAT(CAST(b.periodo AS VARCHAR(4)), CAST(a.ccom_3a AS NVARCHAR(3)), CAST(a.ncom_3a AS NVARCHAR(8))),\n        b.fecha, a.tipimp_3a, a.aigv_3a, a.id_mkt_cab, a.marca_reg\n    FROM #VentasCabeceraTmp b\n    INNER JOIN tmpvta a\n        ON b.canalventa = a.ccom_3a AND b.correlativo = a.ncom_3a AND a.periodo = b.periodo\n\n    -- Procesar otros documentos (no 007)\n    TRUNCATE TABLE #VentasCabeceraTmp\n\n    INSERT INTO #VentasCabeceraTmp\n    SELECT \n        b.canalventa, b.correlativo, FORMAT(b.fecha, 'MM'), FORMAT(b.fecha, 'yyyy')\n    FROM ventascabecera b\n    WHERE b.periodo = @a\u00f1o AND b.fecha = @hoy AND b.tipodocumento &lt;&gt; '007'\n\n    INSERT INTO ventasdetalle\n    SELECT \n        a.ccom_3a, a.ncom_3a, a.linea_3a, a.cant_3a, a.pvta1_3a, a.dsct1_3a,\n        CAST(a.vvta1_3a AS NUMERIC(18,2)), CAST(a.igv1_3a AS NUMERIC(18,2)),\n        CAST(a.tot1_3a AS NUMERIC(18,2)), a.flag_3a, a.porper_3a,\n        CAST(a.monper_3a AS NUMERIC(18,2)), CAST(a.totper_3a AS NUMERIC(18,2)),\n        0, b.periodo,\n        CONCAT(CAST(b.periodo AS VARCHAR(4)), CAST(a.ccom_3a AS NVARCHAR(3)), CAST(a.ncom_3a AS NVARCHAR(8))),\n        b.fecha, a.tipimp_3a, a.aigv_3a, a.id_mkt_cab, a.marca_reg\n    FROM VentasCabeceraTmp b WITH (NOLOCK)\n    INNER JOIN tmpvta a\n        ON b.canalventa = a.ccom_3a AND b.correlativo = a.ncom_3a AND a.periodo = b.periodo\nEND\n</code></pre>"}]}